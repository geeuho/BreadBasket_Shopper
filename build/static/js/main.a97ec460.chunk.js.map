{"version":3,"sources":["services/Rails.js","categories.js","actions/index.js","components/GoogleAuth.js","containers/NavBar.js","pages/Home.js","pages/About.js","components/CartItem.js","pages/Cart.js","components/OrderItem.js","pages/CheckOut.js","components/OrderSection.js","pages/CurrentOrders.js","pages/EditShopper.js","pages/ItemDetails.js","components/MapContainer.js","pages/MapPage.js","components/StoreDropdown.js","components/Searchbar.js","components/CategoryLink.js","containers/FoodCategoryNav.js","components/ItemCard.js","containers/FoodList.js","pages/OrderPage.js","components/OrderHistorySection.js","pages/OrderHistory.js","pages/PaymentDetails.js","pages/Profile.js","pages/Products.js","pages/ProfileSignup.js","pages/SearchPage.js","pages/ViewOrderItems.js","App.js","reducers/authReducer.js","reducers/itemsReducer.js","reducers/storesReducer.js","reducers/cartReducer.js","reducers/orderReducer.js","reducers/index.js","reducers/categoriesReducer.js","store.js","index.js"],"names":["shopperToken","localStorage","getItem","headers","Accepts","axios","create","baseURL","title","name","selectStore","store","type","payload","clearItem","getItems","store_id","dispatch","a","rails","get","response","console","log","data","getCart","cart_id","startCart","cartInfo","post","cart","attributes","setItem","jwt","dropCart","cartId","delete","removeCartItem","cartItemId","itemId","cart_item_id","item_id","clearOrder","getActiveOrders","shopperId","checkoutOrder","cartItems","clearOrderItems","signOut","removeItem","storeCoords","coords","GoogleAuth","authChange","userStatus","user","auth","currentUser","getBasicProfile","userInfo","email","getEmail","first_name","getGivenName","last_name","getFamilyName","image","getImageUrl","props","signIn","redirect","signedIn","shopperInfo","history","push","go","renderAuthButton","class","onClick","width","height","viewBox","fill","xmlns","fill-rule","d","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","isSignedIn","listen","prevState","this","React","Component","connect","state","currentShopper","id","shopper_info","shopper","Navbar","renderUser","to","alt","src","userAuthPic","activeOrders","length","cart_length","isEmpty","Object","keys","order","active_orders","cart_items","Home","className","routes","About","users","CartItem","newCount","count","cartItemCount","unit","price","toFixed","changeCount","itemDetailsNav","Cart","cartItemsArray","map","key","cart_item","item_attribute","item","quantity_num","quantity_unit","subtotal","reduce","sum","current","payment","total","onSubmit","handleSubmit","formValues","alert","tip","orderInfo","storeId","shopper_id","status","currentOrderId","updatePreOrder","preOrder","Field","component","value","renderCart","renderCartTotal","formWrapped","reduxForm","form","stores","selectedStore","current_order_id","item_ids","parseInt","orderData","orderId","patch","units","CheckOut","addOrderItem","orderItemInfo","Promise","resolve","processOrder","changeOrderStatus","placeOrder","setState","loading","pushState","style","marginTop","justifyContent","renderItems","orderSubTotal","orderPayment","orderTip","orderTotal","order_item","cartItem","order_id","OrderSection","cancelOrder","position","paymentDetails","viewOrderItems","CurrentOrder","renderOrders","storesList","EditShopper","renderInput","input","meta","label","error","toProfile","replace","submitForm","infoId","editShopper","phone","editShopperProfile","address","city","zip_code","match","params","section","renderForm","validate","ItemDetails","renderDetail","items","selectedItem","MapContainer","mapStyles","onHover","store_coords","google","zoom","initialCenter","user_coords","store_name","GoogleApiWrapper","apiKey","LoadingContainer","MapPage","toOrderPage","margin","StoreDropdown","getAddress","store_params","location","results","geometry","storeOptions","e","find","target","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","split","join","Searchbar","searchSubmit","searchItem","Category","data-category","FoodCategories","categories","category","CategoryLink","cart_item_ids","addCartItem","cartItemInfo","useState","createRef","ref","useEffect","buttonAdd","buttonCheck","button","children","process","classList","add","onclick","remove","alignSelf","fontSize","preventDefault","FoodList","itemCards","OrderPage","navigator","geolocation","getCurrentPosition","success","bind","pos","crd","lat","latitude","lng","longitude","userCoords","err","warn","code","message","FoodCategoryNav","categoryItems","filter","itemsList","OrderHistoryItem","OrderHistory","OrderHistorySection","completedOrders","completed_orders","order_info","payment_info","getOrder","renderPaymentInfo","Profile","editPage","word","charAt","toUpperCase","slice","capitalize","userFirstName","userLastName","age","userEmail","renderAddress","renderProfile","userAuthId","Products","onCategoryChange","document","getElementById","checked","filteredItems","categoryTitle","onChange","formSubmit","aria-label","onSearchSubmit","onSearchChange","ProfileSignup","profileSubmit","createShopperProfile","shopperFirstName","SearchPage","toLowerCase","includes","ViewOrderItems","orderItems","getOrderItems","order_items","App","getCategories","getStores","NavBar","exact","path","render","CurrentOrders","INTIAL_STATE","INITIAL_STATE","delivery","persistConfig","storage","whitelist","reducer","combineReducers","action","_","mapKeys","omit","formReducer","persistReducer","createStore","reducers","applyMiddleware","thunk","persistor","persistStore","createBrowserHistory","ReactDOM","querySelector"],"mappings":"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","file":"static/js/main.a97ec460.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nlet shopperToken = localStorage.getItem('shopper_token')\r\nlet cartToken = localStorage.getItem('cart_token')\r\n\r\nconst headers = {\r\n    'Content-Type': 'application/json',\r\n    Accepts: 'application/json',\r\n    \"Authorization\": shopperToken\r\n}\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://bread-basket-backend.herokuapp.com',\r\n    headers: headers \r\n})","export default [\r\n    {\r\n        title: \"Meat/Seafood\",\r\n        name: \"meats\"\r\n    },\r\n    {\r\n        title: \"Produce\",\r\n        name: \"produce\"\r\n    },\r\n    {\r\n        title: \"Dairy\",\r\n        name: \"dairy\"\r\n    },\r\n    {\r\n        title: \"Bakery\",\r\n        name: \"bakery\"\r\n    },\r\n    {\r\n        title: \"Snacks\",\r\n        name: \"snacks\"\r\n    },\r\n    {\r\n        title: \"Beverages\",\r\n        name: \"beverages\"\r\n    },\r\n    {\r\n        title: \"Frozen\",\r\n        name: \"frozen\"\r\n    },\r\n    {\r\n        title: \"Household\",\r\n        name: \"household\"\r\n    }\r\n\r\n]","import rails from '../services/Rails'\r\nimport categories from '../categories'\r\n\r\n//STORE ACTIONS\r\nexport const getStores = () => async dispatch => {\r\n    const response = await rails.get(`/stores`)\r\n    let store = response.data.data.find(store => store.id == 1)\r\n    console.log(store)\r\n    dispatch({ type: 'GET_STORES', payload: {\r\n        stores: response.data.data,\r\n        store: store\r\n    }})\r\n}\r\n\r\nexport const selectStore = (store) => {\r\n    return ({\r\n        type: 'SELECT_STORE',\r\n        payload: store\r\n    })\r\n}\r\n\r\n//CATEGORY ACTIONS\r\n\r\nexport const getCategories = () => {\r\n    return {\r\n        type: 'GET_CATEGORIES',\r\n        payload: categories\r\n    }\r\n}\r\n\r\n//ITEM ACTIONS\r\n\r\nexport const clearItem = () => {\r\n    return ({\r\n        type: 'CLEAR_ITEM'\r\n    })\r\n}\r\n\r\nexport const getItem = (item_id) => async dispatch => {\r\n    const response = await rails.get(`/items/${item_id}`)\r\n    console.log(response.data, \"items\")\r\n    dispatch({ type: 'GET_ITEM', payload: response.data })\r\n}\r\n\r\nexport const getItems = (store_id) => async dispatch => {\r\n    const response = await rails.get(`/items?store_id=${store_id}`)\r\n    console.log(response.data, \"items\")\r\n    dispatch({type: 'GET_ITEMS', payload: response.data})\r\n}\r\n\r\n//CART ACTIONS\r\n\r\nexport const getCart = (cart_id) => async dispatch => {\r\n    const response = await rails.get(`/cart_items?cart_id=${cart_id}`)\r\n    let data = response.data\r\n    console.log(data.data)\r\n    dispatch({type: \"GET_CART\", payload: data.data})\r\n}\r\n\r\nexport const startCart = cartInfo => async dispatch => {\r\n    const response = await rails.post('/carts', {cart: cartInfo})\r\n    let data = response.data\r\n    console.log(data.cart.data.attributes, 'cart')\r\n    localStorage.setItem('cart_token', data.jwt)\r\n    dispatch({ type: 'START_CART', payload: data.cart})\r\n}\r\n\r\nexport const dropCart = cartId => async dispatch => {\r\n    const response = await rails.delete(`/carts/${cartId}`)\r\n    dispatch ({\r\n        type: 'DROP_CART'\r\n    })\r\n}\r\n\r\n//CART ITEM ACTIONS\r\n\r\nexport const addCartItem = cartItemInfo => async dispatch => {\r\n    console.log(cartItemInfo)\r\n    const response = await rails.post('/cart_items', {cart_item: cartItemInfo})\r\n    let data = response.data\r\n    console.log(data.data, 'cart_item added')\r\n    dispatch({ type: \"ADD_CART_ITEM\", \r\n                payload: { \r\n                    cart_item: data.data,\r\n                    id: data.data.id,\r\n                    item_id: data.data.attributes.item_id\r\n                }\r\n            })\r\n}\r\n\r\nexport const removeCartItem = (cartItemId, itemId) => async dispatch => {\r\n    const response = await rails.delete(`/cart_items/${cartItemId}`)\r\n    let data = response.data \r\n    console.log(data)\r\n    dispatch({type: \"DROP_CART_ITEM\", \r\n        payload: {\r\n            cart_item_id: cartItemId,\r\n            item_id: itemId\r\n        }\r\n    })\r\n}\r\n\r\nexport const cartItemCount = (newCount, cartItemId) => {\r\n    console.log(newCount, cartItemId)\r\n    return ({\r\n        type: \"CHANGE_COUNT_CART_ITEM\",\r\n        payload: { count: newCount, cartItemId: cartItemId }\r\n    })\r\n}\r\n\r\n//ORDER ACTIONS\r\n\r\nexport const getOrder = orderId => async dispatch => {\r\n    const response = await rails.get(`/orders/${orderId}`)\r\n    let id = parseInt(response.data.data.id)\r\n    let orderData = response.data.data.attributes\r\n    console.log(id, orderData)\r\n    dispatch({\r\n        type: \"GET_ORDER\", payload: orderData\r\n    })\r\n}\r\n\r\nexport const clearOrder = () => {\r\n    return({\r\n        type: \"CLEAR_ORDER\"\r\n    })\r\n}\r\n\r\nexport const preOrder = orderInfo => async dispatch => {\r\n    const response = await rails.post(`/orders`, {order: orderInfo})\r\n    let id = parseInt(response.data.data.id)\r\n    let orderData = response.data.data.attributes\r\n    console.log(response)\r\n    dispatch({type: \"PRE_ORDER\", payload: {\r\n            id: id,\r\n            order: orderData\r\n        } \r\n    })\r\n}\r\n\r\nexport const updatePreOrder = (orderId, orderInfo) => async dispatch => {\r\n    console.log(orderId)\r\n    const response = await rails.patch(`/orders/${orderId}`, {order: orderInfo})\r\n    console.log(response.data)\r\n    let id = parseInt(response.data.data.id)\r\n    let orderData = response.data.data.attributes\r\n    dispatch({\r\n        type: \"PRE_ORDER\", payload: {\r\n            id: id,\r\n            order: orderData\r\n        }\r\n    })\r\n}\r\n\r\nexport const getActiveOrders = shopperId => async dispatch => {\r\n    const response = await rails.get(`/orders?shopper_id=${shopperId}&status=active`)\r\n    let data = response.data.data\r\n    dispatch({type: \"GET_ACTIVE_ORDERS\", payload: data})\r\n}\r\n\r\nexport const getCompletedOrders = shopperId => async dispatch => {\r\n    const response = await rails.get(`/orders?shopper_id=${shopperId}&status=complete`)\r\n    let data = response.data.data\r\n    dispatch({ type: \"GET_COMPLETED_ORDERS\", payload: data })\r\n}\r\n\r\nexport const processOrder = (cartItems, cartId, orderId, status) => async dispatch => {\r\n    for (const cartItem of cartItems) {\r\n        let orderItemInfo = {\r\n            order_id: orderId,\r\n            item_id: cartItem.attributes.item_id,\r\n            quantity_num: cartItem.attributes.quantity_num,\r\n            status: \"pending\"\r\n        }\r\n        await rails.post(`/order_items`, { order_item: orderItemInfo })\r\n        console.log(orderItemInfo)\r\n    }\r\n    console.log(1)\r\n    await rails.patch(`orders/${orderId}`, status)\r\n    console.log(2)\r\n    await rails.delete(`/carts/${cartId}`)\r\n    console.log(3)\r\n    dispatch({ type: 'DROP_CART' })\r\n    dispatch({type: 'CHECKOUT_ORDER'})\r\n} \r\n\r\nexport const checkoutOrder = (cartItems) => {\r\n    return ({\r\n        type: \"CHECKOUT_ORDER\"\r\n    })\r\n}\r\n\r\nexport const changeOrderStatus = (id, status) => async dispatch => {\r\n    const response = await rails.patch(`orders/${id}`, status)\r\n    console.log(response.data)\r\n}\r\n\r\nexport const addOrderItem = orderItemInfo => async dispatch => {\r\n    const response = await rails.post(`/order_items`, {order_item: orderItemInfo})\r\n    let data = response.data\r\n    console.log(data)\r\n}\r\n\r\nexport const removeOrderItem = orderItemId => async dispatch => {\r\n    const response = await rails.delete(`/order_items/${orderItemId}`)\r\n    let data = response.data\r\n    console.log(data)\r\n}\r\n\r\nexport const cancelOrder = (id) => async dispatch => {\r\n    const response = await rails.delete(`/orders/${id}`)\r\n    console.log(response.data)\r\n    dispatch({ type: \"CANCEL_ORDER\", payload: id })\r\n}\r\n\r\nexport const getOrderItems = (order_id) => async dispatch => {\r\n    const response = await rails.get(`order_items?order_id=${order_id}`)\r\n    console.log(response.data)\r\n    dispatch({type: \"GET_ORDER_ITEMS\", payload: response.data.data})\r\n}\r\n\r\nexport const clearOrderItems = () => {\r\n    return({\r\n        type: \"CLEAR_ORDER_ITEMS\"\r\n    })\r\n}\r\n\r\n//AUTH ACTIONS\r\n\r\nexport const signIn = (userInfo) => async dispatch => {\r\n    const response = await rails.post('/login', {shopper: userInfo})\r\n    let data = response.data\r\n    localStorage.setItem('shopper_token', data.jwt)\r\n    console.log(data.shopper.data.attributes)\r\n    dispatch({\r\n        type: 'SIGN_IN',\r\n        payload: data.shopper.data.attributes\r\n    })\r\n}\r\n\r\nexport const signOut = () => {\r\n    localStorage.removeItem('shopper_token')\r\n    return {\r\n        type: 'SIGN_OUT'\r\n    }\r\n}\r\n\r\n//USER PROFILE ACTIONS\r\n\r\nexport const createShopperProfile = (shopperInfo) => async dispatch => {\r\n    const response = await rails.post('/shopper_infos/', shopperInfo)\r\n    let data = response.data\r\n    console.log(data)\r\n    dispatch({\r\n        type: 'PROFILE_INFO',\r\n        payload: data.data\r\n    })\r\n}\r\n\r\nexport const editShopper = (form, id) => async dispatch => {\r\n    console.log(form)\r\n    const response = await rails.patch(`/shoppers/${id}`, form)\r\n    let data = response.data\r\n    console.log(data.data)\r\n    dispatch({ type: \"EDIT_SHOPPER\", payload: data.data.attributes })\r\n}\r\n\r\nexport const editShopperProfile = (form, id) => async dispatch => {\r\n    const response = await rails.patch(`/shopper_infos/${id}`, form)\r\n    let data = response.data.data\r\n    console.log(data)\r\n    dispatch({ type: \"EDIT_PROFILE\", payload: data.attributes })\r\n}\r\n\r\nexport const storeCoords = (coords) => {\r\n    return({\r\n        type: 'STORE_COORDS',\r\n        payload: coords\r\n    })\r\n}\r\n\r\nexport const userCoords = (coords) => {\r\n    return ({\r\n        type: 'USER_COORDS',\r\n        payload: coords\r\n    })\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {signIn, signOut, dropCart, checkoutOrder} from '../actions'\r\n\r\nclass GoogleAuth extends React.Component{\r\n    componentDidMount() {\r\n\r\n        window.gapi.load('client:auth2', () => {\r\n            window.gapi.client.init({\r\n                clientId: '30752304516-hq148b4og5mh54aphpmsuus4049qv04n.apps.googleusercontent.com',\r\n                scope: 'profile'\r\n            }).then(() => {\r\n                this.auth = window.gapi.auth2.getAuthInstance()\r\n                this.authChange(this.auth.isSignedIn.get())\r\n                this.auth.isSignedIn.listen(this.authChange)\r\n            })\r\n        })\r\n        \r\n    }   \r\n\r\n    componentDidUpdate(prevState){\r\n        if (prevState.signedIn !== this.props.signedIn){\r\n            this.redirect()\r\n        }\r\n    }\r\n    \r\n\r\n    authChange = (userStatus) => {\r\n        if (!!userStatus) {\r\n            let user = this.auth.currentUser.get().getBasicProfile()\r\n            console.log(user)\r\n            let userInfo =\r\n            {\r\n                email: user.getEmail(),\r\n                first_name: user.getGivenName(),\r\n                last_name: user.getFamilyName(),\r\n                image: user.getImageUrl()\r\n            }\r\n            this.props.signIn(userInfo)\r\n        } else {\r\n            this.props.signOut()\r\n        }\r\n    }\r\n\r\n    signIn = () => {\r\n        if(!!this.auth){\r\n            this.auth.signIn()\r\n        }\r\n    }\r\n\r\n    \r\n    signOut = () => {\r\n        if(!!this.auth){\r\n            this.auth.signOut()\r\n            this.props.dropCart()\r\n            this.props.checkoutOrder()\r\n        }\r\n  \r\n        // localStorage.removeItem('rails_token')\r\n    }\r\n\r\n    redirect = () => {\r\n        if (!!this.props.signedIn && !this.props.shopperInfo) {\r\n            console.log(this.props.signedIn, this.props.shopperInfo)\r\n            this.props.history.push('/profile_signup')\r\n            this.props.history.go()\r\n        } else if (!!this.props.signedIn && !!this.props.shopperInfo) {\r\n            this.props.history.push('/orderpage')\r\n            this.props.history.go()\r\n        } else {\r\n            this.props.history.push('/')\r\n            this.props.history.go()\r\n        }\r\n    }\r\n\r\n    renderAuthButton = () => {\r\n        if(this.props.signedIn === null){\r\n            return <div>I don't know</div>\r\n        } else {\r\n            if(this.props.signedIn === true){\r\n                return (\r\n                    <button type=\"button\" class= \"btn btn-outline-primary\" onClick = {this.signOut}> \r\n                        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-person-fill\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path fill-rule=\"evenodd\" d=\"M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H3zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\" />\r\n                        </svg>\r\n                        Sign Out\r\n                    </button>\r\n                )\r\n            } else {\r\n                \r\n                return (\r\n                    <div class = 'log-button'>\r\n                        <button type=\"button\" class=\"btn btn-outline-primary\" onClick={this.signIn}>\r\n                            <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-person-fill\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path fill-rule=\"evenodd\" d=\"M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H3zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\" />\r\n                            </svg>\r\n                            Sign In\r\n                        </button>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    render(){\r\n        return(   \r\n            <div>\r\n                {this.renderAuthButton()}\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return ({\r\n        shopperId: state.auth.currentShopper.id,\r\n        signedIn: state.auth.signedIn,\r\n        shopperInfo: state.auth.currentShopper.shopper_info\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, {signIn, signOut, dropCart, checkoutOrder})(GoogleAuth)","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport GoogleAuth from '../components/GoogleAuth'\r\nimport { connect } from 'react-redux'\r\nimport { getActiveOrders} from '../actions'\r\nimport { isEmpty } from 'lodash'\r\n\r\nexport class Navbar extends Component {\r\n    componentDidUpdate(prevState){\r\n        if(prevState.activeOrders.length != this.props.activeOrders.length){\r\n            this.props.getActiveOrders(this.props.shopperId)\r\n        }\r\n    }\r\n\r\n    renderUser = () => {\r\n        if(!!this.props.signedIn){   \r\n            return (\r\n                <div>\r\n                    <a class=\"nav-link\">\r\n                        <Link to='/profile'>\r\n                            <img class=\"google-pic\" alt=\"alt img\" src={this.props.userAuthPic} />\r\n                        </Link>\r\n                    </a>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let cart_length\r\n        if(isEmpty(this.props.cartItems) || !this.props.cartItems){\r\n            cart_length = 0\r\n        } else {\r\n            cart_length = Object.keys(this.props.cartItems).length\r\n        }\r\n        return ( \r\n            \r\n            <nav class=\"navbar navbar-expand-lg navbar-expand-med navbar-expand-sm navbar-light bg-light\">\r\n                \r\n                <a class=\"navbar-brand\" ><Link to='/'>BreadBasket</Link> </a>       \r\n                \r\n                {/* <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span class=\"navbar-toggler-icon\"></span>\r\n                </button> */}\r\n                <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    {(!!this.props.signedIn) ?\r\n                    <ul class=\"navbar-nav\">\r\n                        <li class=\"nav-item active\">\r\n                            <a class=\"nav-link\"><Link to='/orderpage'>Make an Order</Link></a>\r\n                        </li>\r\n                        {(!isEmpty(this.props.activeOrders)) ? \r\n                                <li class=\"nav-item\">\r\n                                    <a class=\"nav-link\"><Link to='/current_orders'>Current Orders</Link></a>\r\n                                </li>\r\n                                :\r\n                                null\r\n                        }\r\n                        <li class=\"nav-item\">\r\n                            <a class=\"nav-link\"><Link to='/orderhistory'>Order History</Link></a>\r\n                        </li>\r\n                        <li class=\"nav-item\">\r\n                            <a class=\"nav-link\"><Link to='/about'>About</Link></a>\r\n                        </li>\r\n                    </ul>\r\n                    :\r\n                    <ul class=\"navbar-nav\">\r\n                        <li class=\"nav-item\">\r\n                            <a class=\"nav-link\"><Link to='/about'>About</Link></a>\r\n                        </li>\r\n                    </ul>\r\n                    }\r\n                </div>\r\n                {(!!this.props.signedIn) ? \r\n                <ul class=\"navbar-nav cart-nav\">\r\n                    <li class=\"nav-item\">\r\n    \r\n                            <button class=\"btn btn-outline-success\" type=\"button\">\r\n                                <Link class=\"text-reset\" to='/cart'>\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1em\" height=\"1em\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                                        <path d=\"M10 19.5c0 .829-.672 1.5-1.5 1.5s-1.5-.671-1.5-1.5c0-.828.672-1.5 1.5-1.5s1.5.672 1.5 1.5zm3.5-1.5c-.828 0-1.5.671-1.5 1.5s.672 1.5 1.5 1.5 1.5-.671 1.5-1.5c0-.828-.672-1.5-1.5-1.5zm1.336-5l1.977-7h-16.813l2.938 7h11.898zm4.969-10l-3.432 12h-12.597l.839 2h13.239l3.474-12h1.929l.743-2h-4.195z\" />\r\n                                    </svg>\r\n                                    Cart {`(${cart_length})`}\r\n                                </Link>\r\n                            </button>\r\n                       \r\n                    </li>\r\n                </ul>\r\n                :\r\n                <div></div>\r\n                }\r\n                \r\n                <GoogleAuth history = {this.props.history} />\r\n                <ul class=\"navbar-nav cart-nav\">\r\n                    <li class=\"nav-item\">\r\n                        {this.renderUser()}\r\n                    </li>\r\n                </ul>\r\n\r\n            </nav>\r\n        )\r\n    }\r\n}\r\nlet mapStateToProps = (state) => {\r\n    return ({\r\n        activeOrders: state.order.active_orders,\r\n        shopperId: state.auth.currentShopper.id,\r\n        signedIn: state.auth.signedIn,\r\n        userAuthPic: state.auth.currentShopper.image,\r\n        cartItems: state.cart.cart_items\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, { getActiveOrders})(Navbar)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\n// import aboutPic from '../public/logo192.png'\r\nexport class Home extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Welcome to BreadBasket</h1>\r\n                <div className='textBox'>\r\n                    <p> Hi! I'm Allen.</p>\r\n                    {/* <img width = '400px' src= {aboutPic} alt='Profile pic here!'></img> */}\r\n                    <div className='aboutBox'>\r\n\r\n                        <p>\r\n                            I'm a local bay area native with a drive to innovate and solve problems.\r\n                            I graduated from UCSD in 2016 with a degree in General Biology, but I found out\r\n                            my true passion was in building things. Software engineering seemed to be\r\n                            the perfect fit. To pursue this career path, I recently graduate from Flatiron,\r\n                            where I spent 3 months completely dedicated to learning full-stack development.\r\n                            I learned Ruby, Rails, Javascript, and React, all of which I've become familiar with\r\n                            through labs, coding challeneges, and team projects.\r\n\r\n                    </p>\r\n\r\n                        <p>\r\n                            Using computers have always seemed cyptic to me, but I've recently found that\r\n                            making a computer, is less like solving a math problem, and there are a ton of\r\n                            things you can build if you just know how to speak the language. I am interested\r\n                            in investing in the programming to continue build things that interest me.\r\n                    </p>\r\n\r\n                        <p>\r\n                            I'm also currently looking for a job and would love to connect!\r\n                    </p>\r\n\r\n                        <p>\r\n                            I am currently familiar with:\r\n                    </p>\r\n                        <p>- Ruby</p>\r\n                        <p>- Rails</p>\r\n                        <p>- Javascript</p>\r\n                        <p>- React/Redux</p>\r\n                        <p>- HTML</p>\r\n                        <p>- CSS</p>\r\n                        <p>- Github</p>\r\n                        <p>...And I'm continuing to learn more!</p>\r\n                        <br></br>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps= state => {\r\n    return ({\r\n        routes: state.routes\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps)(Home)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n// import aboutPic from '../public/logo192.png'\r\nexport class About extends Component {\r\n    componentDidMount() {\r\n        // this.props.testRoute(this.props.history)\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>About</h1>\r\n            <div className='textBox'>\r\n                <p> Hi! I'm Allen.</p>\r\n                {/* <img width = '400px' src= {aboutPic} alt='Profile pic here!'></img> */}\r\n                <div className = 'aboutBox'>\r\n                \r\n                    <p>\r\n                        I'm a local bay area native with a drive to innovate and solve problems.\r\n                        I graduated from UCSD in 2016 with a degree in General Biology, but I found out\r\n                        my true passion was in building things. Software engineering seemed to be\r\n                        the perfect fit. To pursue this career path, I recently graduate from Flatiron,\r\n                        where I spent 3 months completely dedicated to learning full-stack development. \r\n                        I learned Ruby, Rails, Javascript, and React, all of which I've become familiar with\r\n                        through labs, coding challeneges, and team projects.\r\n\r\n                    </p>\r\n\r\n                    <p>\r\n                        Using computers have always seemed cyptic to me, but I've recently found that \r\n                        making a computer, is less like solving a math problem, and there are a ton of \r\n                        things you can build if you just know how to speak the language. I am interested \r\n                        in investing in the programming to continue build things that interest me. \r\n                    </p>\r\n\r\n                    <p>\r\n                    I'm also currently looking for a job and would love to connect!\r\n                    </p>\r\n\r\n                    <p>\r\n                        I am currently familiar with:\r\n                    </p>\r\n                    <p>- Ruby</p>\r\n                    <p>- Rails</p>\r\n                    <p>- Javascript</p>\r\n                    <p>- React/Redux</p>\r\n                    <p>- HTML</p>\r\n                    <p>- CSS</p>\r\n                    <p>- Github</p>\r\n                    <p>...And I'm continuing to learn more!</p>\r\n                    <br></br>\r\n                </div>\r\n            </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.users\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(About)\r\n","import React, {Component} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { cartItemCount, removeCartItem, clearItem } from '../actions'\r\n\r\n\r\nclass CartItem extends Component {\r\n\r\n    removeItem(cartItemId){\r\n        console.log(cartItemId)\r\n        this.props.removeCartItem(this.props.cartItemId, this.props.item_id)\r\n    }\r\n\r\n    changeCount(type){\r\n        let newCount = 0\r\n        if(type === '+'){\r\n            newCount = this.props.count + 1\r\n            \r\n        }\r\n        if(type === '-'){\r\n            if(this.props.count > 1){\r\n                newCount = this.props.count - 1 \r\n            } else{\r\n                newCount = 1\r\n            }\r\n        }\r\n        this.props.cartItemCount(newCount, this.props.cartItemId)\r\n        // this.props.cartItemCount(newCount, this.props.cartItemId)\r\n    }\r\n\r\n    itemDetailsNav(){\r\n        this.props.clearItem()\r\n        this.props.history.push(`/item_details/${this.props.item_id}`)\r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div class = \"row cartItem\">\r\n                <div>\r\n                    <h3>{this.props.name}</h3>\r\n                    <img  height = \"200px\" src={this.props.image}/>\r\n                </div>\r\n                <div>\r\n                    <h3>Price per {this.props.unit}: ${(this.props.price * .01).toFixed(2)}</h3>\r\n                    <div>\r\n                        <h3>Count: {this.props.count}</h3>\r\n                        <span>\r\n                            <button onClick= {() => this.changeCount('+')}>\r\n                                +\r\n                            </button>\r\n                            <button onClick = {() => this.changeCount('-')}>\r\n                                -\r\n                            </button>\r\n                        </span>\r\n                        \r\n                    </div>\r\n                    <h3>Total: ${(this.props.count * this.props.price * .01).toFixed(2)} </h3>\r\n                </div>\r\n                <div>\r\n                    <button onClick = {() => this.removeItem(this.props.cartItemId)}>Remove Item</button>\r\n                    <button onClick = {()=> {this.itemDetailsNav()}}>Item Details</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, {cartItemCount, removeCartItem, clearItem})(CartItem)","import React, {Component} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getCart, removeCartItem, preOrder, updatePreOrder} from '../actions'\r\nimport CartItem from '../components/CartItem'\r\nimport { isEmpty } from 'lodash'\r\nimport {reduxForm, Field } from 'redux-form'\r\n\r\nclass Cart extends Component{\r\n\r\n    cartItemsArray = (cartItems) => {\r\n        let keys = Object.keys(cartItems)\r\n        return keys.map(key => this.props.cart_items[key])\r\n    }\r\n\r\n    renderCart(){ \r\n        if (!isEmpty(this.props.cart_items)){\r\n            let cartItems = this.cartItemsArray(this.props.cart_items)\r\n            return (\r\n                cartItems.map(cart_item => {\r\n                    let item_attribute = cart_item.attributes.item\r\n                    return <CartItem cartItemId={cart_item.id} image={item_attribute.image} name={item_attribute.name} count={cart_item.attributes.quantity_num} price={item_attribute.price} history = {this.props.history} item_id={item_attribute.id} unit = {item_attribute.quantity_unit}/>\r\n                })\r\n            )\r\n        }\r\n    }\r\n\r\n    renderCartTotal(){\r\n        let subtotal = 0\r\n        if (!!isEmpty(this.props.cart_items)){\r\n            subtotal = 0\r\n        } else {\r\n            let cartItems = this.cartItemsArray(this.props.cart_items)\r\n            console.log(cartItems)\r\n            subtotal = cartItems.reduce((sum, current) => {\r\n                return sum + (current.attributes.quantity_num * (current.attributes.item.price * .01))\r\n            }, 0)\r\n        }\r\n        \r\n        let payment = subtotal * .14\r\n        let total = subtotal + payment\r\n\r\n        let submitForm = (formValues) => {\r\n            if(!!isEmpty(this.props.cart_items)){\r\n                alert('Your cart is empty!')\r\n            } else {\r\n                let tip = !!formValues.tip ? formValues.tip * .01 * (subtotal + payment) : 0\r\n                let orderInfo = {\r\n                    payment: (payment * 100).toFixed(0),\r\n                    tip: (tip * 100).toFixed(0),\r\n                    subtotal: (subtotal * 100).toFixed(0),\r\n                    total: (total * 100 + tip * 100).toFixed(0),\r\n                    store_id: this.props.storeId,\r\n                    shopper_id: this.props.shopperId,\r\n                    status: 'pending'\r\n                }\r\n                    if(!this.props.currentOrderId){\r\n                        this.props.preOrder(orderInfo)\r\n                    }else {\r\n                        this.props.updatePreOrder(this.props.currentOrderId, orderInfo)\r\n                    }              \r\n                this.props.history.push('/checkout')\r\n            }\r\n        }\r\n    \r\n            return (\r\n            <div>\r\n                <form onSubmit={this.props.handleSubmit(submitForm)}>\r\n                    <div>\r\n                        <h2>\r\n                            {`$${subtotal.toFixed(2)}`}\r\n                        </h2>\r\n                        <h2>\r\n                            {`$${payment.toFixed(2)}`}\r\n                        </h2>\r\n                        <h2>\r\n                            <span>\r\n                                Tip(% of total order)\r\n                            </span>\r\n                            <span>\r\n                                <Field name = \"tip\" component = \"select\">\r\n                                    <option value=\"0\">0%</option>\r\n                                    <option value=\"5\">5%</option>\r\n                                    <option value=\"10\">10%</option>\r\n                                    <option value=\"15\">15%</option>\r\n                                    <option value=\"20\">20%</option>\r\n                                </Field>   \r\n                            </span>\r\n                            {/* {`$${tip}`} */}\r\n                        </h2>\r\n                        <h2>\r\n                            {`$${total.toFixed(2)}`}\r\n                        </h2>\r\n                            \r\n                            <button type=\"submit\">\r\n                                Checkout\r\n                    </button>\r\n                    </div>\r\n                    \r\n                    \r\n                </form>\r\n            </div>\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div class = 'container'>\r\n                \r\n                <div class = 'wrapper cart'>\r\n                    <h1>Cart</h1>\r\n                    {this.renderCart()}\r\n                    <div class = \"row cartItem total\">\r\n                        <div>\r\n                            <h3>\r\n                                SubTotal: \r\n                            </h3>\r\n                            <h3>\r\n                                Delivery: \r\n                            </h3>\r\n                            <h3>\r\n                                Tip:\r\n                            </h3>\r\n                            <h3>\r\n                                Total:\r\n                            </h3>\r\n                            <br></br>\r\n                        </div>\r\n                        <div>\r\n                            <h3>\r\n                                ................................................\r\n                            </h3>\r\n                            <h3>\r\n                                ................................................\r\n                            </h3>\r\n                            <h3>\r\n                                ................................................\r\n                            </h3>\r\n                            <h3>\r\n                                ................................................\r\n                            </h3>\r\n                            <br></br>\r\n                        </div>\r\n\r\n                        {this.renderCartTotal()}\r\n                    </div>\r\n                    \r\n                </div>\r\n                \r\n            </div> \r\n        )\r\n    }\r\n}\r\n\r\nlet formWrapped = reduxForm({\r\n    form: 'checkoutForm'\r\n})(Cart)\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return({\r\n        shopperId: state.auth.currentShopper.shopper_info.id,\r\n        storeId: state.stores.selectedStore.id,\r\n        currentOrderId: state.order.current_order_id,\r\n        cart_id: state.cart.cart_id,\r\n        cart_items: state.cart.cart_items,\r\n        item_ids: state.cart.item_ids\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, {getCart, removeCartItem, preOrder, updatePreOrder})(formWrapped)","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {clearItem} from '../actions'\r\n\r\nconst OrderItem = props => {\r\n\r\n    let itemDetailsNav = () => {\r\n        props.clearItem()\r\n        props.history.push(`/item_details/${props.item_id}`)\r\n    }\r\n\r\n    let renderUnits = () => {\r\n        if(props.count > 1){\r\n            return `${props.units}s`\r\n        } else {\r\n            return `${props.units}`\r\n        }\r\n    }\r\n    return (\r\n        <div className = 'row orderItem'> \r\n            <div>\r\n                <h3>{props.name}</h3>\r\n                <img height=\"200px\" src={props.image} />\r\n            </div>\r\n            <div>\r\n                <h3>\r\n                    Quantity: {props.count} {renderUnits()}\r\n                </h3>\r\n                <h3>\r\n                    Price: ${(props.price * props.count * .01).toFixed(2)}\r\n                </h3>\r\n                <button onClick={() =>  itemDetailsNav() }>Item Details</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, {clearItem})(OrderItem)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport OrderItem from '../components/OrderItem'\r\nimport { addOrderItem, removeCartItem, dropCart, checkoutOrder, changeOrderStatus, processOrder} from '../actions'\r\n\r\nclass CheckOut extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            loading: false\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        console.log(this.props.currentOrderId)\r\n        console.log(this.props.history)\r\n        console.log(this.props.checkoutOrder)\r\n        console.log(this.props.cart_id)\r\n\r\n    }\r\n\r\n    addOrderItem = (orderItemInfo) => {\r\n        return new Promise(resolve => resolve(this.props.addOrderItem(orderItemInfo)))\r\n    }\r\n    \r\n    processOrder = async() => {\r\n        let keys = Object.keys(this.props.cartItems)\r\n        let cartItems = keys.map(key => this.props.cartItems[key])\r\n            \r\n        await this.props.processOrder(cartItems, this.props.cart_id, this.props.currentOrderId, { status: \"active\" })\r\n\r\n        \r\n    }\r\n\r\n\r\n    changeOrderStatus = () => {\r\n        return new Promise(resolve => {\r\n            resolve(this.props.changeOrderStatus(this.props.currentOrderId, { status: \"active\" }))\r\n            console.log(2)\r\n            \r\n        })\r\n    }\r\n\r\n    dropCart = () => {\r\n        return new Promise(resolve => {\r\n            resolve(this.props.dropCart(this.props.cart_id))\r\n            console.log(3)\r\n            \r\n        })\r\n    }\r\n\r\n        \r\n    placeOrder = async() => {\r\n        //:order_id, :item_id, :quantity_num, :status\r\n        this.setState({\r\n            loading: true\r\n        })\r\n\r\n        await this.processOrder()\r\n        // await this.changeOrderStatus()\r\n        // await this.dropCart()\r\n        // this.props.checkoutOrder()\r\n        window.history.pushState({}, '', '/orderpage')\r\n        window.history.go()\r\n    }\r\n\r\n    renderItems(){\r\n        let keys = Object.keys(this.props.cartItems)\r\n        let cartItems = keys.map(key => this.props.cartItems[key])\r\n        return cartItems.map(item => {\r\n            let attributes = item.attributes\r\n            return (\r\n                <OrderItem history = {this.props.history} price = {attributes.item.price} image = {attributes.item.image} count = {attributes.quantity_num} units = {attributes.item.quantity_unit} name = {attributes.item.name} item_id= {attributes.item.id}/>\r\n            )\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                {\r\n                    !this.state.loading ? \r\n                        <div className = \"container\">\r\n                            <h1> Checkout </h1>\r\n                            <div> \r\n                                {this.renderItems()}\r\n                            </div>\r\n                            <div >\r\n                                <h3>SubTotal: {`$${(this.props.orderSubTotal/100).toFixed(2)}`}</h3>\r\n                                <h3>Delivery: {`$${(this.props.orderPayment/100).toFixed(2)}`}</h3>\r\n                                <h3>Tip: {`$${(this.props.orderTip/100).toFixed(2)}`}</h3>\r\n                                <h3>Total: {`$${(this.props.orderTotal/100).toFixed(2)}`}</h3>\r\n                            </div>\r\n                            <button onClick ={() => this.placeOrder()}>Place Order</button>\r\n                        </div>\r\n                        :\r\n                        <div className = \"container\">\r\n                            <div className = \"row\" style = {{marginTop: '40%', justifyContent: 'center'}}>\r\n                                <div className = \"loaderDiv\">\r\n                                    <div class = \"loader\"></div>\r\n                                    <h1>Processing Order</h1>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                }\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return({\r\n        currentOrderId: state.order.current_order_id,\r\n        shopperId: state.auth.currentShopper.shopper_info.id,\r\n        storeId: state.stores.selectedStore.id,\r\n        cart_id: state.cart.cart_id,\r\n        cartItems: state.cart.cart_items,\r\n        orderPayment: state.order.payment,\r\n        orderTip: state.order.tip,\r\n        orderTotal: state.order.total,\r\n        orderSubTotal: state.order.subtotal\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, { addOrderItem, removeCartItem, dropCart, checkoutOrder, changeOrderStatus, processOrder})(CheckOut)","import React, { Component } from \"react\"\r\nimport {connect} from 'react-redux'\r\nimport {cancelOrder, clearOrderItems, clearOrder} from '../actions'\r\n\r\nclass OrderSection extends Component {\r\n    componentDidMount(){\r\n        console.log(this.props.history)\r\n    }\r\n    cancelOrder(){\r\n        this.props.cancelOrder(this.props.id)\r\n    }\r\n\r\n    viewOrderItems(){\r\n        this.props.clearOrderItems()\r\n        this.props.history.push(`/view_order_items/${this.props.id}`)\r\n    }\r\n\r\n    paymentDetails() {\r\n        this.props.clearOrder()\r\n        this.props.history.push(`/payment_details/${this.props.id}`)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"orderBox\">\r\n                <div class=\"orderHeader\">\r\n                    <h3>Order {this.props.position}</h3>\r\n                </div>\r\n\r\n                <div class=\"orderInfo\">\r\n                    <p>\r\n                        Order Cost: ${(this.props.total/100).toFixed(2)}\r\n                    </p>\r\n                    <p>\r\n                        Name of Driver: Bob Clark\r\n                    </p>\r\n                    <p>\r\n                        Grocery Store: {this.props.store}\r\n                    </p>\r\n                </div>\r\n                <div class=\"orderButtonBox\">\r\n                    <button onClick = {() => this.paymentDetails()}class=\"detailsButton\">\r\n                        View Payment Details\r\n                        </button>\r\n                    <button onClick={() => this.viewOrderItems()} class=\"detailsButton\">\r\n                        View Items\r\n                    </button>\r\n                    <button onClick = {()=> this.cancelOrder()}class=\"detailsButton\">\r\n                        Cancel Order\r\n                    </button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, {cancelOrder, clearOrderItems, clearOrder})(OrderSection)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getActiveOrders } from '../actions'\r\nimport OrderSection from '../components/OrderSection'\r\n\r\nclass CurrentOrder extends React.Component {\r\n    \r\n    componentDidMount(){\r\n        console.log(this.props.history)\r\n    }\r\n\r\n    renderOrders = () => {\r\n        return this.props.activeOrders.map((order, id) => {\r\n            let attributes = order.attributes\r\n            return (\r\n                <OrderSection \r\n                    history = {this.props.history}\r\n                    position = {id + 1} \r\n                    id = {order.id}\r\n                    store = {this.props.stores[attributes.store_id - 1].attributes.name}\r\n                    total = {attributes.total}\r\n                />\r\n            )   \r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className = \"container\">\r\n                <h1>Current Orders</h1>\r\n                <div>\r\n                    {this.renderOrders()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n    return ({\r\n        shopperId: state.auth.currentShopper.id,\r\n        stores: state.stores.storesList,\r\n        activeOrders: state.order.active_orders\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, {getActiveOrders})(CurrentOrder)","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { isEmpty } from 'lodash'\r\nimport {editShopper, editShopperProfile} from '../actions'\r\n\r\nclass EditShopper extends React.Component {\r\n    componentDidMount(){\r\n        console.log(this.props.match.params)\r\n    }\r\n\r\n    renderInput = ({input, meta, label}) => {\r\n        return (\r\n            <div>\r\n                <label> {label}</label>\r\n                <input {...input} /> \r\n                <div>{meta.error} </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    toProfile = () => {\r\n        this.props.history.replace('/profile')\r\n    }\r\n\r\n    submitForm = (formValues) => {\r\n        if (!isEmpty(this.props.currentShopper) ) {\r\n            let id = this.props.shopperId\r\n            let infoId = this.props.infoId\r\n            console.log(formValues)\r\n            if(!!formValues.image){\r\n                this.props.editShopper({ shopper: {image: formValues.image} }, id)\r\n            } else if (!!formValues.email) {          \r\n                this.props.editShopper({ shopper: { email: formValues.email} }, id)\r\n            } else if (!!formValues.phone) {\r\n                this.props.editShopperProfile({ shopper_info: {phone: formValues.phone} }, infoId)\r\n            } else if (!!formValues.address) {\r\n                this.props.editShopperProfile({ shopper_info: {address: formValues.address, city: formValues.city, state: formValues.state, zip_code: formValues.zip_code} }, infoId)\r\n            }\r\n            this.toProfile()\r\n        }\r\n    }\r\n\r\n    renderForm(){\r\n        let params = this.props.match.params.section\r\n        if(!isEmpty(this.props.currentShopper) ){\r\n            if(params === \"address\"){\r\n                return (\r\n                    <div>\r\n                        <Field name = \"address\" component= {this.renderInput} label = \"Address\"></Field>\r\n                        <Field name=\"city\" component={this.renderInput} label=\"City\"></Field>\r\n                        <Field name=\"state\" component={this.renderInput} label=\"State\"></Field>\r\n                        <Field name=\"zip_code\" component={this.renderInput} label=\"Zip Code\"></Field>\r\n                    </div>\r\n                )\r\n    \r\n            } else if (params === \"phone\"){\r\n                return (\r\n                    <Field name=\"phone\" component={this.renderInput} label=\"Phone Number\"></Field>\r\n                )\r\n            } else if (params === \"email\"){\r\n                return (\r\n                    <Field name=\"email\" component={this.renderInput} label=\"Email\"></Field>\r\n                )\r\n            } else if (params === \"image\"){\r\n                return (                \r\n                    <Field name=\"image\" component={this.renderInput} label=\"Image URL\"></Field>\r\n                )\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>Edit Profile</h1>\r\n                <form onSubmit = {this.props.handleSubmit(this.submitForm)}>\r\n                    {this.renderForm()}\r\n                    <button type = \"submit\">Submit</button>\r\n                </form>\r\n\r\n                <div>\r\n                    <button onClick = {this.toProfile}>\r\n                        Back To Profile\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet validate = (formValues) => {\r\n    let error = {}\r\n    if (!formValues.address) {\r\n        error.address = \"Please enter an address!\"\r\n    }\r\n\r\n    if (!formValues.city) {\r\n        error.city = \"Please enter a city!\"\r\n    }\r\n\r\n    if (!formValues.state) {\r\n        error.state = \"Please enter a state!\"\r\n    }\r\n\r\n    if (!formValues.zip_code) {\r\n        error.zip_code = \"Please enter a zip_code!\"\r\n    }\r\n    \r\n    if (!formValues.phone) {\r\n        error.phone = \"Please enter a phone number!\"\r\n    }\r\n\r\n    if (!formValues.email) {\r\n        error.email = \"Please enter a email!\"\r\n    }\r\n\r\n    if (!formValues.image) {\r\n        error.image = \"Please enter an image url!\"\r\n    }\r\n\r\n    return error\r\n}\r\n\r\n\r\nconst formWrapped = reduxForm({\r\n    form: 'editShopperForm',\r\n    validate: validate\r\n})(EditShopper)\r\n\r\nconst mapStateToProps = state => {\r\n    return ({\r\n        currentShopper: state.auth.currentShopper,\r\n        shopperId: state.auth.currentShopper.id,\r\n        infoId: state.auth.currentShopper.shopper_info.id\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, {editShopper, editShopperProfile})(formWrapped)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getItem } from '../actions'\r\n\r\nclass ItemDetails extends React.Component{\r\n    componentDidMount(){\r\n        this.props.getItem(this.props.match.params.item_id)\r\n    }\r\n\r\n    renderDetail(){\r\n        if(!!this.props.item){\r\n            return (\r\n                <div>\r\n                    <img src={this.props.item.data.attributes.image}></img>\r\n                    <h3>{this.props.item.data.attributes.name}</h3>\r\n                    <h3>${(this.props.item.data.attributes.price / 100).toFixed(2)} per {this.props.item.data.attributes.quantity_unit}</h3>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div class = \"itemDetails\">\r\n                <h1>Item Details</h1>\r\n                {this.renderDetail()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n    return({\r\n        item: state.items.selectedItem\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, {getItem})(ItemDetails)\r\n","import axios from 'axios';\r\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\r\nimport {storeCoords} from '../actions'\r\nimport React from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\n\r\nclass MapContainer extends React.Component {\r\n    componentDidMount(){\r\n        console.log(this.props.store_coords, this.props.user)\r\n        // Map.setCenter(this.props.store_coords)\r\n    }\r\n\r\n    mapStyles = {\r\n        width: '100%',\r\n        position: 'absolute',\r\n        height: '87%'\r\n    };\r\n\r\n    onHover = () => {\r\n\r\n    }\r\n\r\n    // address\r\n    // 5600%Pacific%Grove%Way%Union\r\n    render(){\r\n        return (\r\n            <div>\r\n            <Map\r\n                google={this.props.google}\r\n                zoom={13}\r\n                style={this.mapStyles}\r\n                initialCenter={\r\n                    this.props.store_coords\r\n                }\r\n                > \r\n                <Marker\r\n                    name={'Your position'}\r\n                    position={this.props.user_coords}\r\n                />\r\n\r\n                <Marker\r\n                    name={`${this.props.store_name}`}\r\n                    position={this.props.store_coords}\r\n                />\r\n            </Map>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst LoadingContainer = (props) => (\r\n    <div>Loading</div>\r\n)\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return({\r\n        store_coords: state.stores.store_coords,\r\n        user_coords: state.stores.user_coords,\r\n        store_name: state.stores.selectedStore.attributes.name\r\n        // start_lat: state.stores.store_coords.lat + state.stores.user_coords.lat,\r\n        // start_lng: state.stores.store_coords.lng + state.stores.user_coords.lng\r\n        \r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, {storeCoords})(GoogleApiWrapper({\r\n    apiKey: \"AIzaSyD-d4NIENxdIYOCE7gIRwvzTIZGRLobMdg\",\r\n    LoadingContainer: LoadingContainer\r\n})(MapContainer))","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport MapContainer from '../components/MapContainer'\r\nimport {Link} from 'react-router-dom'\r\nimport {storeCoords} from '../actions'\r\nimport axios from 'axios'\r\n\r\nclass MapPage extends React.Component {\r\n    \r\n\r\n    // getAddress = async () => {\r\n    //     let location = await axios.post(`https://maps.googleapis.com/maps/api/geocode/json?address=${this.props.store_params}&key=AIzaSyD-d4NIENxdIYOCE7gIRwvzTIZGRLobMdg`)\r\n    //     this.props.storeCoords(location.data.results[0].geometry.location)\r\n    // }\r\n\r\n    toOrderPage = () => {\r\n        this.props.history.push('/orderpage')\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div className=\"row\">\r\n                    <button class=\"btn btn-outline-success\" style = {{margin: '10px'}} type=\"button\">\r\n                        <Link class=\"text-reset\" to='/orderpage'>\r\n\r\n                        <h4>\r\n                            <svg style={{ height: \"10%\", width: \"10%\" }} class=\"svg-icon\" viewBox=\"0 0 20 20\">\r\n                                <path d=\"M11.739,13.962c-0.087,0.086-0.199,0.131-0.312,0.131c-0.112,0-0.226-0.045-0.312-0.131l-3.738-3.736c-0.173-0.173-0.173-0.454,0-0.626l3.559-3.562c0.173-0.175,0.454-0.173,0.626,0c0.173,0.172,0.173,0.451,0,0.624l-3.248,3.25l3.425,3.426C11.911,13.511,11.911,13.789,11.739,13.962 M18.406,10c0,4.644-3.763,8.406-8.406,8.406S1.594,14.644,1.594,10S5.356,1.594,10,1.594S18.406,5.356,18.406,10 M17.521,10c0-4.148-3.373-7.521-7.521-7.521c-4.148,0-7.521,3.374-7.521,7.521c0,4.148,3.374,7.521,7.521,7.521C14.147,17.521,17.521,14.148,17.521,10\"></path>\r\n                            </svg>\r\n                            Back to Order page\r\n                        </h4>\r\n                        </Link>\r\n                    </button>\r\n\r\n                </div>\r\n                <MapContainer></MapContainer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n//     return({\r\n//         store_params: [\r\n//             state.stores.selectedStore.attributes.address.split(' ').join('+'),\r\n//             state.stores.selectedStore.attributes.city.split(' ').join('+'),\r\n//             state.stores.selectedStore.attributes.state\r\n//         ].join('+')\r\n//     })\r\n// }\r\n\r\nexport default MapPage","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport axios from 'axios'\r\nimport {selectStore, getItems, removeCartItem, dropCart, startCart, storeCoords} from '../actions'\r\n\r\nclass StoreDropdown extends React.Component {\r\n\r\n    componentDidMount(){\r\n        this.getAddress()\r\n    }\r\n\r\n    componentDidUpdate(prevState){\r\n        if(prevState.selectedStore !== this.props.selectedStore){\r\n            this.getAddress()\r\n            this.props.getItems(this.props.selectedStore.attributes.id)\r\n            this.props.dropCart()\r\n            this.props.startCart({ shopper_id: this.props.shopperId })\r\n        }\r\n    }\r\n\r\n    getAddress = async () => {\r\n        let location = await axios.post(`https://maps.googleapis.com/maps/api/geocode/json?address=${this.props.store_params}&key=AIzaSyD-d4NIENxdIYOCE7gIRwvzTIZGRLobMdg`)\r\n        this.props.storeCoords(location.data.results[0].geometry.location)\r\n    }\r\n\r\n    \r\n    storeOptions = () => {\r\n        return this.props.stores.map((store)=> {\r\n            return (\r\n                <button class=\"dropdown-item\" id = {store.attributes.id} value={store.attributes.name}>{store.attributes.name}</button>\r\n            )\r\n        })\r\n    } \r\n\r\n    selectStore = (e) => {\r\n        let store = this.props.stores.find(store => store.id == e.target.id)\r\n        this.props.selectStore(store)\r\n        // window.history.pushState({}, '', '/orderpage')\r\n        // window.history.go()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"dropdown\">\r\n                <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                    {this.props.selectedStore.attributes.name}\r\n                </button>\r\n                <div onClick = {(e) => this.selectStore(e)} class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                    {this.storeOptions()}\r\n                </div>\r\n            </div>\r\n    \r\n            \r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n    return ({\r\n        shopperId: state.auth.currentShopper.id,\r\n        stores: state.stores.storesList,\r\n        selectedStore: state.stores.selectedStore,\r\n        cartItems: state.cart.cart_items,\r\n        store_params: [\r\n            state.stores.selectedStore.attributes.address.split(' ').join('+'),\r\n            state.stores.selectedStore.attributes.city.split(' ').join('+'),\r\n            state.stores.selectedStore.attributes.state\r\n        ].join('+')\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, {selectStore, getItems, removeCartItem, dropCart, startCart, storeCoords})(StoreDropdown)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { reduxForm, Field} from 'redux-form'\r\n\r\n\r\nclass Searchbar extends React.Component {\r\n\r\n    renderInput = ({ input, meta, label }) => {\r\n    console.log(input)\r\n        return (\r\n            <div class=\"input-group-prepend\">\r\n                <label>{label}</label>\r\n                <input {...input} />\r\n                <div> {meta.error}</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    searchSubmit = (formValues) => {\r\n        this.props.history.push(`/search/${formValues.searchItem}`)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <form onSubmit = {this.props.handleSubmit(this.searchSubmit)}>\r\n                    <Field name = \"searchItem\" component = {this.renderInput} label = \"Search for Item\"/>\r\n                    <button type=\"submit\" id=\"button-addon1\">Search Item</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet validate = (formValues) => {\r\n    let error = {}\r\n\r\n    if(!formValues.searchItem){\r\n        error.searchItem = \"Please enter an Item\"\r\n    }\r\n\r\n    return error\r\n}\r\n\r\nlet formWrapped = reduxForm({\r\n    form: 'searchForm',\r\n    validate: validate\r\n})(Searchbar)\r\n\r\nexport default connect(null)(formWrapped)","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Category = props => {\r\n\r\n    return (\r\n        <div class = \"col-sm-auto\">\r\n            <Link to = {`/products/${props.name}`} data-category = {props.name}>\r\n                {props.title}\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\nexport default Category","import React from 'react'\r\nimport CategoryLink from '../components/CategoryLink'\r\n\r\nconst FoodCategories = props => {\r\n    return (\r\n        <div class=\"row justify-content-center\">\r\n            {props.categories.map(category => {\r\n                return <CategoryLink history = {props.history} name = {category.name} title = {category.title} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FoodCategories","import React, {useState, useEffect} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addCartItem } from '../actions'\r\n\r\nlet ItemCard = (props) => {\r\n    let[ref] = useState(React.createRef())\r\n    useEffect(() => {\r\n        if (!!props.cart_item_ids.find(item => item === props.item_id)){\r\n            buttonAdd()\r\n        } else {\r\n            buttonCheck()\r\n        }\r\n    })\r\n\r\n    let buttonAdd = () => {\r\n        let button = ref.current.children[1].children[2]\r\n        button.children[0].src = `${process.env.PUBLIC_URL}/check.svg`\r\n        button.classList.add('item-added')\r\n        button.onclick = null\r\n    }\r\n\r\n    let buttonCheck = () => {\r\n        let button = ref.current.children[1].children[2]\r\n        button.children[0].src = `${process.env.PUBLIC_URL}/plus.svg`\r\n        button.classList.remove('item-added')\r\n        button.onclick = null\r\n    }\r\n\r\n    let addCartItem = (e) => {\r\n        e.preventDefault()\r\n        if (!props.cart_item_ids.find(item => item === props.item_id)){\r\n            buttonAdd()\r\n            let cartItemInfo = {\r\n                cart_id: props.cart_id,\r\n                item_id: props.item_id,\r\n                quantity_num: 1\r\n            }\r\n            console.log(cartItemInfo)\r\n            props.addCartItem(cartItemInfo)\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <div class=\"col-lg-2 col-md-4 col-sm-6 col-xs-12\">\r\n            <div class=\"card\" ref = {ref}>\r\n                <div style = {{height: \"45%\", width: \"45%\", alignSelf: \"center\", marginTop: \"5px\"}}>\r\n                    <img src={props.image} style={{ height: \"100%\" }} class=\"card-img-top\" alt=\"...\" />\r\n                </div>\r\n                \r\n                <div class=\"card-body\">\r\n                    <h6 class=\"card-title\">{props.name}</h6>\r\n                    <p style={{fontSize: \"10px\"}}> ${props.price}</p>\r\n                    <a class= \"btn btn-primary cart-item-button\" onClick={addCartItem} class=\"btn btn-primary\">\r\n                        <img class = \"cart-item-button\" alt=\"Image\" />\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n    return({\r\n        cart_item_ids: state.cart.item_ids,\r\n        cart_id: state.cart.cart_id,\r\n        cart_items: state.cart.cart_items\r\n    })\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {addCartItem})(ItemCard)","import React from 'react'\r\nimport ItemCard from '../components/ItemCard'\r\n\r\nconst FoodList = props => {\r\n    let itemCards = props.items.map((item, id) => {\r\n        return <ItemCard key = {id} item_id = {parseInt(item.id)} image = {item.attributes.image} price = {(item.attributes.price * .01).toFixed(2)} name = {item.attributes.name}/>\r\n    })\r\n    return (\r\n        <div class= \"container\">\r\n            <h1>{props.title}</h1>\r\n            <br></br>\r\n                <div class = \"row justify-content-center\">\r\n                    {itemCards}\r\n                </div>\r\n                <br></br>\r\n                <div class = \"row justify-content-center\">\r\n                    <div class = \"col-1\">\r\n                        <button type=\"button\" class=\"btn btn-primary btn-sm\">Previous</button>\r\n                    </div>\r\n                    <div class = \"col-1\">\r\n                        <button type=\"button\" class=\"btn btn-primary btn-sm\">Next</button>\r\n                    </div>\r\n                </div>\r\n                \r\n            <br></br><br></br>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FoodList","import React, { Component} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getItems, selectStore, dropCart, startCart, getCart, getActiveOrders, userCoords} from '../actions'\r\nimport StoreDropdown from '../components/StoreDropdown'\r\nimport Searchbar from '../components/Searchbar'\r\nimport FoodCategoryNav from '../containers/FoodCategoryNav'\r\nimport FoodList from '../containers/FoodList'\r\nimport axios from 'axios'\r\n\r\nclass OrderPage extends Component {\r\n\r\n    componentDidMount(){\r\n        console.log(this.props.user_coords)\r\n        navigator.geolocation.getCurrentPosition(this.success.bind(this), this.error)\r\n        this.props.getItems(this.props.selectedStore.attributes.id)\r\n        this.props.getActiveOrders(this.props.shopperId)\r\n        \r\n        if (!!this.props.shopperId && !this.props.cartId) {\r\n            console.log(\"Hello shopper! Welcome to BreadBasket!\")\r\n            this.props.startCart({ shopper_id: this.props.shopperId })\r\n        }\r\n    }\r\n\r\n    success(pos){\r\n        console.log(this.props)\r\n        if(!!pos){\r\n            var crd = pos.coords\r\n            console.log(\"HEY LISTEN\", { lat: crd.latitude, lng: crd.longitude })\r\n            this.props.userCoords({lat: crd.latitude, lng: crd.longitude})\r\n        }\r\n    }\r\n    \r\n    error(err){\r\n        console.warn(`ERROR: ${err.code}: ${err.message}`)\r\n    }\r\n\r\n    componentDidUpdate(prevState){\r\n        if (prevState.cartId !== this.props.cartId){\r\n            this.props.getCart(this.props.cartId)\r\n        }\r\n    }\r\n    \r\n\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                <h1>Order Page</h1>\r\n                <br></br>\r\n                <div class = \"row\">\r\n                    <div class=\"col-sm-4\">\r\n                        <StoreDropdown />\r\n                        \r\n                        <button style = {{marginTop: \"10px\"}} onClick = {() => this.props.history.push('/map_page')}>See Location</button> \r\n                        \r\n                    </div>\r\n                    \r\n                    <div class=\"col-sm-4\">\r\n                        <h2>{this.props.selectedStore.attributes.name}</h2>\r\n                    </div>\r\n                    <div class=\"col-sm-4\">\r\n                        <Searchbar history = {this.props.history}/>\r\n                    </div>\r\n                </div>\r\n                <div class = \"row justify-content-center\">\r\n                    <FoodCategoryNav history={this.props.history} categories= {this.props.categories}/>\r\n                </div>\r\n                \r\n                <br></br><br></br>\r\n                {\r\n                    this.props.categories.map(category => {\r\n                        let categoryItems = this.props.items.filter(item => item.attributes.category === category.name)\r\n                        return (\r\n                            <FoodList items = {categoryItems} title={category.title} />\r\n                        )   \r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return ({\r\n        activeOrders: state.order.active_orders,\r\n        items: state.items.itemsList.data,\r\n        categories: state.categories,\r\n        stores: state.stores.storesList,\r\n        selectedStore: state.stores.selectedStore,\r\n        shopperId: state.auth.currentShopper.id,\r\n        cartId: state.cart.cart_id,\r\n        cartItems: state.cart.cart_items\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps,{getItems, selectStore, dropCart, startCart, getCart, getActiveOrders, userCoords})(OrderPage)\r\n","import React, {Component} from \"react\"\r\nimport {connect} from 'react-redux'\r\nimport { clearOrderItems, clearOrder} from '../actions'\r\n\r\n\r\nclass OrderHistoryItem extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.ref = React.createRef()\r\n\r\n    }\r\n\r\n    viewOrderItems() {\r\n        this.props.clearOrderItems()\r\n        this.props.history.push(`/view_order_items/${this.props.id}`)\r\n    }\r\n\r\n    paymentDetails() {\r\n        this.props.clearOrder()\r\n        this.props.history.push(`/payment_details/${this.props.id}`)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n                <div class = \"orderBox\">\r\n                \r\n                <div ref = {this.ref} id = \"map\"></div>\r\n                \r\n\r\n                \r\n                    <div class = \"orderHeader\">\r\n                        <h3>Order {this.props.order}</h3>\r\n                    </div>\r\n                    \r\n                    <div class = \"orderInfo\">\r\n                        <p>\r\n                            Order Cost: ${this.props.order}0\r\n                        </p>\r\n                        <p>\r\n                            Name of Driver: Bob Clark\r\n                        </p>\r\n                        <p>\r\n                            Grocery Store: Safeway\r\n                        </p>\r\n                    </div> \r\n                    <div class = \"orderButtonBox\">\r\n                        <button onClick = {() => this.paymentDetails()} class=\"detailsButton\">\r\n                            View Payment Details\r\n                        </button>\r\n                    <button onClick={() => this.viewOrderItems()} class=\"detailsButton\">\r\n                            View Items\r\n                        </button>\r\n                    </div>\r\n                    \r\n                </div>\r\n           \r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, { clearOrderItems, clearOrder})(OrderHistoryItem)","import React, { Component } from 'react'\r\nimport OrderHistorySection from '../components/OrderHistorySection'\r\nimport { connect } from 'react-redux'\r\nimport MapContainer from '../components/MapContainer'\r\n\r\n\r\nexport class OrderHistory extends Component {\r\n    componentDidMount(){\r\n        console.log(process.env)\r\n        // this.props.getCompletedOrders(this.props.shopperId)\r\n    }\r\n\r\n    render() {\r\n        \r\n        let orders = [1, 2, 3, 4, 5]\r\n        // this.props.completedOrders.map\r\n        return (\r\n            <div class = \"container\">\r\n                <h1>Order History</h1>\r\n\r\n                <h3>*Currently under construction!!*</h3>\r\n                {orders.map(order => {\r\n                    return <OrderHistorySection history={this.props.history} order = {order} />\r\n                })}                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n    return({\r\n        shopperId: state.auth.currentShopper.id,\r\n        stores: state.stores.storesList,\r\n        completedOrders: state.order.completed_orders\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps)(OrderHistory)\r\n","import React ,{useEffect}from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {getOrder} from '../actions'\r\nimport {isEmpty} from 'lodash'\r\n\r\nconst PaymentDetails = props => {\r\n    useEffect(() => {\r\n        props.getOrder(props.match.params.order_id)\r\n        console.log(props.match.params.order_id)\r\n    }, [])\r\n\r\n    let renderPaymentInfo = () =>{\r\n        if(!isEmpty(props.orderInfo)){\r\n            return (\r\n                <div>\r\n                    <h3>\r\n                        Subtotal: ${(props.orderInfo.subtotal / 100).toFixed(2)}\r\n                    </h3>\r\n                    <h3>\r\n                        Delivery: ${(props.orderInfo.payment / 100).toFixed(2)}\r\n                    </h3>\r\n                    <h3>\r\n                        Tip: ${(props.orderInfo.tip / 100).toFixed(2)}\r\n                    </h3>\r\n                    <h3>\r\n                        Total: ${(props.orderInfo.total / 100).toFixed(2)}\r\n                    </h3>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Payment Details</h1>\r\n            <div>\r\n                {renderPaymentInfo()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n    return({\r\n        orderInfo: state.order.order_info.payment_info\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, {getOrder})(PaymentDetails)","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { isEmpty } from 'lodash'\r\n\r\nclass Profile extends Component{\r\n    \r\n    capitalize(word){\r\n        if(!!word){\r\n            return word.charAt(0).toUpperCase() + word.slice(1)\r\n        }\r\n    }\r\n    renderAddress(){\r\n        return (\r\n            `${this.props.userInfo.address}, ${this.props.userInfo.city}, ${this.props.userInfo.state} ${this.props.userInfo.zip_code}`\r\n        )\r\n    }\r\n\r\n    editPage = (e) => {\r\n        this.props.history.push(`/edit_shopper/${e.target.value}`)\r\n    }\r\n\r\n    renderProfile(){\r\n        if(!isEmpty(this.props.currentShopper)){\r\n            return (\r\n                <div>\r\n                    <i class=\"fas fa-envelope fa-2x\"></i><span class=\"counter counter-lg\">9</span>\r\n                    <div>\r\n                        <img class=\"profilePageImage\" src={this.props.userAuthPic}></img>\r\n                    </div>\r\n                    <div className=\"segment\">\r\n                        <button value=\"image\" onClick={(e) => this.editPage(e)}>Change</button>\r\n                    </div>\r\n                    <h4>{this.capitalize(this.props.userFirstName) + ' ' + this.capitalize(this.props.userLastName)}</h4>\r\n\r\n                    <div>\r\n                        <h4>Age: {this.props.userInfo.age}</h4>\r\n                    </div>\r\n                    <div>\r\n                        <h4>Email: {this.props.userEmail}</h4>\r\n                        <div className=\"segment\">\r\n                            <button value=\"email\" onClick={(e) => this.editPage(e)}>Change</button>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <h4>Phone: {this.props.userInfo.phone}</h4>\r\n                        <div className=\"segment\">\r\n                            <button value=\"phone\" onClick={(e) => this.editPage(e)}>Change</button>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <h4>Address: {this.renderAddress()}</h4>\r\n                        <div className=\"segment\">\r\n                            <button value=\"address\" onClick={(e) => this.editPage(e)}>Change</button>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <h4>Number of Orders</h4>\r\n                    </div>\r\n                </div> \r\n            )\r\n        }\r\n        \r\n    }\r\n\r\n    render(){   \r\n        return (\r\n            <div>\r\n                <h1>Profile Page</h1>\r\n                <div class = \"container\">\r\n                    {this.renderProfile()}\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nlet mapStateToProps = state => {\r\n    return ({\r\n        currentShopper: state.auth.currentShopper,\r\n        userAuthId: state.auth.currentShopper.id,\r\n        userAuthPic: state.auth.currentShopper.image,\r\n        userFirstName: state.auth.currentShopper.first_name,\r\n        userLastName: state.auth.currentShopper.last_name,\r\n        userInfo: state.auth.currentShopper.shopper_info,\r\n        userEmail: state.auth.currentShopper.email\r\n    })\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Profile)","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { getFilteredItems } from '../actions'\r\nimport Searchbar from '../components/Searchbar'\r\nimport FoodList from '../containers/FoodList'\r\n\r\n\r\nclass Products extends Component {\r\n    componentDidMount(){\r\n        console.log(process.env.PUBLIC_URL)\r\n        document.getElementById(`${this.props.match.params.category}`).checked = true\r\n    }\r\n \r\n    onCategoryChange = (e) => {\r\n        console.log(e.target.value)\r\n        this.props.history.push(`/products/${e.target.value}`)\r\n    }\r\n\r\n    render(){\r\n        let category = this.props.match.params.category\r\n        let filteredItems = this.props.items.filter(item => item.attributes.category === category)\r\n        let categoryData = this.props.categories.find((category) => category.name === this.props.match.params.category)\r\n        let categoryTitle = categoryData.title\r\n\r\n        return (\r\n            <div class = \"products\">\r\n                <div class = \"sidebar\">\r\n                    <div class = \"sidebar-header\">\r\n                        <h3>Categories</h3>\r\n                    </div>\r\n                    <form onChange = {this.onCategoryChange} onSubmit = {this.formSubmit}>\r\n\r\n                            <div class=\"input-group-text\">\r\n                                <input type=\"radio\" id = \"meats\" name= \"food-category\" value=\"meats\" aria-label=\"Meat/Seafood Input\"/> Meat/Seafood\r\n                            </div>\r\n                            <div class=\"input-group-text\">\r\n                                <input type=\"radio\" id=\"produce\" name=\"food-category\" value=\"produce\" aria-label=\"Produce Input\"/> Produce\r\n                            </div>\r\n                            <div class=\"input-group-text\">\r\n                                <input type=\"radio\" id=\"dairy\" name=\"food-category\" value=\"dairy\" aria-label=\"Dairy Input\"/> Dairy\r\n                            </div>\r\n                            <div class=\"input-group-text\">\r\n                                <input type=\"radio\" id=\"bakery\" name=\"food-category\" value=\"bakery\" aria-label=\"Bakery Input\" /> Bakery\r\n                            </div>\r\n                            <div class=\"input-group-text\">\r\n                                <input type=\"radio\" id=\"snacks\" name=\"food-category\" value=\"snacks\" aria-label=\"Snacks Input\"/> Snacks\r\n                            </div>\r\n                            <div class=\"input-group-text\">\r\n                                <input type=\"radio\" id=\"beverages\" name=\"food-category\" value=\"beverages\" aria-label=\"Beverages Input\"/> Beverages\r\n                            </div>\r\n                            <div class=\"input-group-text\">\r\n                                <input type=\"radio\" id=\"frozen\" name=\"food-category\" value=\"frozen\" aria-label=\"Frozen Input\"/> Frozen\r\n                            </div>\r\n                            <div class=\"input-group-text\">\r\n                                <input type=\"radio\" id=\"household\" name=\"food-category\" value=\"household\" aria-label=\"Household Input\"/> Household\r\n                            </div>\r\n                    </form>\r\n                    \r\n                </div>\r\n\r\n                <div class = \"content\"> \r\n                    <div class = \"container-fluid justify-content-center\">\r\n                        <h1 class = \"productsHeader\">{categoryTitle}</h1>\r\n                        <div class = \"row productsHeader\">\r\n                            <div className = \"col-sm-5\">\r\n                                <h2>{this.props.selectedStore.attributes.name}</h2>\r\n                            </div>\r\n                            <div className = \"col-sm-5\">\r\n                                <Searchbar history = {this.props.history} onSearchSubmit={this.props.onSearchSubmit} onSearchChange={this.props.onSearchChange}/>\r\n                            </div>\r\n                        </div>\r\n                    \r\n                        <FoodList items = {filteredItems}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    console.log(state)\r\n    return({\r\n        categories: state.categories,\r\n        items: state.items.itemsList.data,\r\n        selectedStore: state.stores.selectedStore\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps)(Products)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Profile } from './Profile'\r\nimport { reduxForm, Field } from 'redux-form'\r\nimport { createShopperProfile } from '../actions'\r\n\r\nclass ProfileSignup extends React.Component {\r\n    renderInput = ({ input, meta, label }) => {\r\n        console.log(input)\r\n        return (\r\n            <div class=\"input-group\">\r\n                <label>{label}</label>\r\n                <input {...input} />\r\n                <div> {meta.error}</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    profileSubmit = (formValues) => {\r\n        let form = {shopper_info : {...formValues, age: parseInt(formValues.age), shopper_id: this.props.shopperId}}\r\n        this.props.createShopperProfile(form)\r\n        this.props.history.push('/orderpage')\r\n    }\r\n\r\n    capitalize(word) {\r\n        if(!!word){\r\n            return word.charAt(0).toUpperCase() + word.slice(1)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div> \r\n                <h1> \r\n                    Welcome {this.capitalize(this.props.shopperFirstName)}\r\n                </h1>\r\n                <form onSubmit = {this.props.handleSubmit(this.profileSubmit)}>\r\n                    <Field name = \"age\" component = {this.renderInput} label = \"Age\"/>\r\n                    <Field name = \"address\" component = {this.renderInput} label = \"Address\" />\r\n                    <Field name = \"city\" component = {this.renderInput} label = \"City\" />\r\n                    <Field name = \"state\" component = {this.renderInput} label = \"State\" />\r\n                    <Field name = \"zip_code\" component = {this.renderInput} label = \"Zip Code\" />\r\n                    <Field name = \"phone\" component = {this.renderInput} label = \"Phone\" />\r\n                    <button type=\"submit\" id=\"button-addon1\">Submit</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//age address city state zipcode phone\r\n\r\nlet validate = (formValues) => {\r\n    let error = {}\r\n\r\n    if (!formValues.age) {\r\n        error.age = \"Please enter an Item\"\r\n    }\r\n    if (!formValues.address) {\r\n        error.address = \"Please enter an Item\"\r\n    }\r\n    if (!formValues.city) {\r\n        error.city = \"Please enter an Item\"\r\n    }\r\n    if (!formValues.state) {\r\n        error.state = \"Please enter an Item\"\r\n    }\r\n    if (!formValues.zip_code) {\r\n        error.zip_code = \"Please enter an Item\"\r\n    }\r\n    if (!formValues.phone) {\r\n        error.phone = \"Please enter an Item\"\r\n    }\r\n    \r\n    return error\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n    return({\r\n        shopperFirstName: state.auth.currentShopper.first_name,\r\n        shopperId: state.auth.currentShopper.id\r\n    })\r\n}\r\n\r\nlet formWrapped = reduxForm({\r\n    form: 'profileForm',\r\n    validate: validate\r\n})(ProfileSignup)\r\n\r\nexport default connect(mapStateToProps, {createShopperProfile})(formWrapped)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Searchbar from '../components/Searchbar'\r\nimport FoodList from '../containers/FoodList'\r\n\r\nclass SearchPage extends React.Component{\r\n\r\n    componentDidMount(){\r\n        console.log(!!this.props.items.find(item => item.attributes.name == this.props.match.params.item))\r\n    }\r\n\r\n    // searchTerm = () => {\r\n    //     // store results in array   \r\n    //     //find if current items from current store that include this search term\r\n    //     //items must be checked in lower case\r\n    //     let filteredItems = this.props.items.filter(item => \r\n    //         item.attributes.name.toLowerCase().includes(this.props.match.params.item)\r\n    //     )\r\n    // }\r\n    render(){\r\n        let filteredItems = this.props.items.filter(item =>\r\n            item.attributes.name.toLowerCase().includes(this.props.match.params.item)\r\n        )\r\n        // let categoryData = this.props.categories.find((category) => category.name === this.props.match.params.category)\r\n        // let categoryTitle = categoryData.title\r\n        return(\r\n            <div class=\"content\">\r\n                <div class=\"container-fluid justify-content-center\">\r\n                    <h1 class=\"productsHeader\">Search</h1>\r\n                    <div class=\"row productsHeader\">\r\n                        <div className=\"col-sm-5\">\r\n                            <h2>{this.props.selectedStore.attributes.name}</h2>\r\n                        </div>\r\n                        <div className=\"col-sm-5\">\r\n                            <Searchbar history = {this.props.history}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className = 'searchResult'>\r\n                        {(filteredItems.length > 0) ? <FoodList items={filteredItems} /> : <h1>Sorry item doesn't exist!</h1>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n        \r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return ({\r\n        items: state.items.itemsList.data,\r\n        selectedStore: state.stores.selectedStore\r\n    })\r\n}\r\nexport default connect(mapStateToProps)(SearchPage)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport OrderItem from '../components/OrderItem'\r\nimport {getOrderItems} from '../actions'\r\n\r\n\r\nclass ViewOrderItems extends React.Component{\r\n\r\n    componentDidMount(){\r\n        console.log(this.props.history)\r\n        console.log(this.props.match.params)\r\n        console.log(this.props.orderItems)\r\n        this.props.getOrderItems(this.props.match.params.order_id)\r\n    }\r\n\r\n    renderItems(){   \r\n        return this.props.orderItems.map(item => {\r\n            let attributes = item.attributes\r\n            return (\r\n                <OrderItem history = {this.props.history} price={attributes.item.price} image={attributes.item.image} count={attributes.quantity_num} units={attributes.item.quantity_unit} name={attributes.item.name} item_id = {attributes.item.id}/>\r\n            )\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1>Order Items</h1>\r\n                {this.renderItems()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n    return({\r\n        orderItems: state.order.order_items\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, {getOrderItems})(ViewOrderItems)","import 'jquery/src/jquery';\r\nimport React, {Component} from 'react';\r\nimport {\r\n  Route\r\n} from \"react-router-dom\"\r\nimport {connect} from 'react-redux'\r\nimport './App.css';\r\nimport NavBar from './containers/NavBar'\r\nimport Home from './pages/Home'\r\nimport About from './pages/About'\r\nimport Cart from './pages/Cart'\r\nimport Checkout from './pages/CheckOut'\r\nimport CurrentOrders from './pages/CurrentOrders'\r\nimport EditShopper from './pages/EditShopper'\r\nimport ItemDetails from './pages/ItemDetails'\r\nimport MapPage from './pages/MapPage'\r\nimport OrderPage from './pages/OrderPage'\r\nimport OrderHistory from './pages/OrderHistory'\r\nimport PaymentDetails from './pages/PaymentDetails'\r\nimport Profile from './pages/Profile'\r\nimport Products from './pages/Products'\r\nimport ProfileSignup from './pages/ProfileSignup'\r\nimport SearchPage from './pages/SearchPage'\r\nimport ViewItems from './pages/ViewOrderItems'\r\nimport {getStores, getCategories, signOut, getActiveOrders, getItems, selectStore} from './actions'\r\n\r\nclass App extends Component  {\r\n  \r\n  componentDidMount(){\r\n    this.props.getCategories()\r\n    this.props.getStores()\r\n    \r\n    // this.props.getActiveOrders(this.props.shopperId)\r\n    console.log(this.props.state)\r\n  }\r\n  \r\n  render (){\r\n    return (\r\n      <div className=\"App\">\r\n        <div class=\"ui segment\">\r\n            <NavBar history = {this.props.history}/>\r\n            <Route exact path='/' render={(props) => <Home {...props} />}></Route> \r\n            <Route exact path='/about' render={(props) => <About {...props} />} />\r\n            <Route exact path='/cart' render={(props) => <Cart {...props} />} />\r\n            <Route exact path='/checkout' render={(props) => <Checkout {...props} />} />\r\n            <Route exact path='/current_orders' render={(props) => <CurrentOrders {...props} />} />\r\n            <Route exact path='/edit_shopper/:section' render={(props) => <EditShopper {...props} />} />\r\n            <Route exact path='/item_details/:item_id' render={(props) => <ItemDetails {...props} />} />\r\n            <Route exact path='/map_page' render={(props) => <MapPage {...props} />} />\r\n            <Route exact path='/orderpage' render={(props) => <OrderPage {...props} />}/>\r\n            <Route exact path='/orderhistory' render={(props) => <OrderHistory {...props} />} />\r\n            <Route exact path='/profile' render={(props) => <Profile {...props} />} />\r\n            <Route exact path='/profile_signup' render={(props) => <ProfileSignup {...props} />} />\r\n            <Route exact path='/products/:category' render={(props) => <Products {...props} />}/>\r\n            <Route exact path='/payment_details/:order_id' render={(props) => <PaymentDetails {...props} />} />\r\n            <Route exact path='/search/:item' render={(props) => <SearchPage {...props} />} />\r\n            <Route exact path='/view_order_items/:order_id' render={(props) => <ViewItems {...props} />} />\r\n        </div>\r\n\r\n        <footer className=\"footer\">\r\n          <p>Allen Shin</p>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n  return({\r\n    state: state,\r\n    shopperId: state.auth.currentShopper.id,\r\n    selectedStore: state.stores.selectedStore\r\n  })\r\n}\r\n\r\nexport default connect(mapStateToProps, {getStores, getCategories, signOut, getActiveOrders, getItems, selectStore})(App)\r\n","const INTIAL_STATE = {\r\n    signedIn: null,\r\n    currentShopper: {\r\n        shopper_info: {}\r\n    }\r\n}\r\n\r\nexport default (state = INTIAL_STATE, action) => {\r\n    switch(action.type){\r\n        case 'SIGN_IN':\r\n            return {\r\n                ...state, \r\n                signedIn: true,\r\n                currentShopper: action.payload\r\n            }\r\n        case 'SIGN_OUT':\r\n            return {\r\n                ...state, \r\n                signedIn: false, \r\n                currentShopper: {\r\n                    ...state.currentShopper,\r\n                    shopper_info: {}\r\n                }\r\n            }\r\n        case 'PROFILE_INFO':\r\n            return{\r\n                ...state, currentShopper: { \r\n                        ...state.currentShopper,\r\n                        shopper_info: action.payload\r\n                }\r\n            }\r\n        case 'EDIT_SHOPPER':\r\n            return{\r\n                ...state, currentShopper: action.payload\r\n            }\r\n        case 'EDIT_PROFILE':\r\n            return{\r\n                ...state, currentShopper: {\r\n                    ...state.currentShopper,\r\n                    shopper_info: action.payload\r\n                }\r\n            }\r\n        default:\r\n            return state \r\n    }\r\n}","let INITIAL_STATE = {\r\n    itemsList: [],\r\n    selectedItem: null\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    if(action.type === 'GET_ITEMS'){\r\n        return {...state, itemsList: action.payload}\r\n    }\r\n\r\n    if (action.type === 'GET_ITEM') {\r\n        return { ...state, selectedItem: action.payload }\r\n    }\r\n\r\n    if(action.type === 'CLEAR_ITEM'){\r\n        return {...state, selectedItem: null }\r\n    }\r\n\r\n    return state\r\n}","let INITIAL_STATE = {\r\n    storesList: [],\r\n    selectedStore: null,\r\n    coords: {}\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    if(action.type === 'GET_STORES'){\r\n        return { storesList: action.payload.stores, selectedStore: action.payload.store }\r\n    }\r\n\r\n    if(action.type === 'SELECT_STORE'){\r\n        return {...state, selectedStore: action.payload}\r\n    }\r\n\r\n    if(action.type === 'STORE_COORDS'){\r\n        return {...state, store_coords: action.payload}\r\n    }\r\n\r\n    if(action.type === 'USER_COORDS'){\r\n        return{...state, user_coords: action.payload}\r\n    }\r\n    \r\n    return state\r\n}","import _ from 'lodash'\r\n\r\nlet INITIAL_STATE = {\r\n    cart_id: null,\r\n    cart_items: {},\r\n    item_ids: [],\r\n    subtotal: 0,\r\n    delivery: 0,\r\n    tip: 0\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n\r\n    if (action.type === 'START_CART') {\r\n        return {\r\n            ...state, cart_id: action.payload.data.attributes.id\r\n        }\r\n    }\r\n    if (action.type === 'GET_CART'){\r\n        return{\r\n            ...state, \r\n            cart_items: {...state.cart_items, ..._.mapKeys(action.payload,'id')},\r\n            item_ids: action.payload.map(item => item.attributes.item_id)\r\n        }\r\n    }\r\n\r\n    if(action.type === 'DROP_CART'){\r\n        return {...state, \r\n            cart_item_ids: [],\r\n            cart_items: {},\r\n            item_ids: []   \r\n        }\r\n    }\r\n\r\n    if(action.type === 'CHANGE_STORE'){\r\n        return {...state, \r\n            cart_id: action.payload.id,\r\n            cart_items: action.payload.cartItems\r\n        }\r\n    }\r\n\r\n    if(action.type === 'ADD_CART_ITEM'){\r\n        return {...state, \r\n            cart_items: {...state.cart_items, [action.payload.id]: action.payload.cart_item},\r\n            item_ids: [...state.item_ids, action.payload.item_id]\r\n        }\r\n    }\r\n\r\n    if(action.type === 'DROP_CART_ITEM'){\r\n        return {...state, \r\n            cart_items: _.omit(state.cart_items, action.payload.cart_item_id), \r\n            item_ids: [...state.item_ids.filter(item_id => item_id !== action.payload.item_id)]\r\n        }\r\n    }\r\n    \r\n    if(action.type === 'CHANGE_COUNT_CART_ITEM'){\r\n        return  {...state, cart_items: \r\n                    {...state.cart_items, [action.payload.cartItemId]: \r\n                        {...state.cart_items[action.payload.cartItemId], attributes: \r\n                            {...state.cart_items[action.payload.cartItemId].attributes, \r\n                                \"quantity_num\": action.payload.count\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n    }\r\n            \r\n        return state\r\n    }","let INITIAL_STATE = {\r\n    current_order_id: null,\r\n    active_orders: [],\r\n    completed_orders: [],\r\n    order_items: [],\r\n    order_info: {},\r\n    subtotal:null,\r\n    payment: null,\r\n    tip: null, \r\n    total: null\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    if(action.type === \"PRE_ORDER\"){\r\n        return {...state, current_order_id: action.payload.id, \r\n            subtotal: parseInt(action.payload.order.subtotal),\r\n            payment: parseInt(action.payload.order.payment),\r\n            tip: parseInt(action.payload.order.tip),\r\n            total: parseInt(action.payload.order.total)\r\n        }\r\n    }\r\n\r\n    \r\n    if(action.type === 'CHECKOUT_ORDER'){\r\n        return {...state, current_order_id: null}\r\n    }\r\n    \r\n    if(action.type === \"CANCEL_ORDER\"){\r\n        return {...state, active_orders: state.active_orders.filter(order => order.id !== action.payload)}\r\n    }\r\n    \r\n    if(action.type === \"GET_ACTIVE_ORDERS\"){\r\n        return {...state, active_orders: action.payload}\r\n    }\r\n\r\n    if (action.type === \"GET_COMPLETED_ORDERS\") {\r\n        return { ...state, completed_orders: action.payload }\r\n    }\r\n    \r\n    if(action.type === \"GET_ORDER_ITEMS\"){\r\n        return {...state, order_items: action.payload}\r\n    }\r\n    \r\n    if(action.type === \"CLEAR_ORDER_ITEMS\"){\r\n        return {...state, order_items: []}\r\n    }\r\n    \r\n    if (action.type === \"GET_ORDER\") {\r\n        return {\r\n            ...state, order_info: {\r\n                ...state.order_info, payment_info:{\r\n                    subtotal: parseInt(action.payload.subtotal),\r\n                    payment: parseInt(action.payload.payment),\r\n                    tip: parseInt(action.payload.tip),\r\n                    total: parseInt(action.payload.total)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    if(action.type === \"CLEAR_ORDER\"){\r\n        return {\r\n            ...state, order_info: {}\r\n        }\r\n    }\r\n    return state\r\n}","import authReducer from './authReducer'\r\nimport itemsReducer from './itemsReducer'\r\nimport categoriesReducer from './categoriesReducer'\r\nimport storesReducer from './storesReducer'\r\nimport cartReducer from './cartReducer'\r\nimport orderReducer from './orderReducer'\r\n// import routesReducer from './routesReducers'\r\nimport { reducer as formReducer} from 'redux-form'\r\nimport {combineReducers} from 'redux'\r\nimport { persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    whitelist: ['auth', 'items', 'categories', 'stores', 'cart', 'order']\r\n}\r\n\r\nconst reducer = combineReducers({\r\n    items: itemsReducer,\r\n    auth: authReducer,\r\n    categories: categoriesReducer,\r\n    stores: storesReducer,\r\n    cart: cartReducer,\r\n    order: orderReducer,\r\n    form: formReducer\r\n})\r\n\r\nexport default persistReducer(persistConfig, reducer)","export default (state = [], action) => {\r\n    if(action.type === 'GET_CATEGORIES'){\r\n        return action.payload\r\n    }\r\n    return state\r\n}","import {persistStore} from 'redux-persist'\r\nimport {createStore, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport reducers from './reducers'\r\n\r\nexport const store = createStore(reducers, applyMiddleware(thunk))\r\n\r\nexport const persistor = persistStore(store)\r\n\r\nexport default {store, persistor};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './App.css';\r\nimport App from './App';\r\nimport { Provider }  from 'react-redux';\r\nimport { createBrowserHistory } from 'history'\r\nimport {\r\n    BrowserRouter as Router\r\n} from 'react-router-dom'\r\nimport {PersistGate} from 'redux-persist/integration/react'\r\nimport {store, persistor} from './store'\r\n\r\nlet history = createBrowserHistory()\r\n\r\nReactDOM.render(\r\n    <Provider store = {store}>\r\n        <Router>\r\n            <PersistGate persistor = {persistor}>\r\n                <App history = {history}/>\r\n            </PersistGate>\r\n        </Router>\r\n    </Provider>, document.querySelector('#root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}