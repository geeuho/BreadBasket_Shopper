{"version":3,"sources":["services/Rails.js","categories.js","actions/index.js","components/GoogleAuth.js","containers/NavBar.js","components/HomeSection.js","pages/Home.js","pages/About.js","components/ItemPic.js","components/CartItem.js","pages/Cart.js","components/OrderSection.js","pages/ActiveOrders.js","pages/EditShopper.js","pages/ItemDetails.js","components/MapContainer.js","pages/MapPage.js","components/StoreDropdown.js","components/Searchbar.js","components/CategoryLink.js","containers/FoodCategoryNav.js","components/ItemCard.js","containers/FoodList.js","containers/FoodListCarousel.js","pages/OrderPage.js","pages/OrderHistory.js","components/PayPalButton.js","components/PaymentOption.js","components/buttons/AddRowButton.js","components/buttons/CheckoutRowButton.js","components/checkout_options/Address.js","components/checkout_options/CheckoutPayment.js","components/checkout_options/Contact.js","components/checkout_options/DeliveryNote.js","components/buttons/CheckoutColumnButton.js","components/checkout_options/DeliveryTime.js","components/checkout_options/Substitute.js","components/checkout_options/Tip.js","containers/PaymentOptions.js","pages/Payment.js","pages/PaymentDetails.js","pages/Profile.js","pages/Products.js","pages/ProfileSignup.js","pages/SearchPage.js","components/modals/ItemModal.js","components/modals/ConfirmModal.js","components/modals/SubmitModal.js","components/Modal.js","components/OrderItem.js","pages/ViewOrderItems.js","App.js","reducers/authReducer.js","reducers/itemsReducer.js","reducers/modalsReducer.js","reducers/storesReducer.js","reducers/cartReducer.js","reducers/orderReducer.js","reducers/index.js","reducers/categoriesReducer.js","store.js","index.js"],"names":["shopperToken","localStorage","getItem","headers","Accepts","axios","create","baseURL","title","name","selectStore","store","type","payload","getCategories","store_id","categories","clearItem","item_id","dispatch","a","rails","get","response","console","log","data","getItems","getCart","cart_id","startCart","cartInfo","post","cart","attributes","setItem","jwt","dropCart","cartId","delete","removeCartItem","cartItemId","itemId","cart_item_id","getActiveOrders","shopperId","checkoutOrder","cancelOrder","id","signOut","removeItem","storeCoords","coords","clearModal","addShopperAddress","form","addShopperNumber","GoogleAuth","authChange","userStatus","user","auth","currentUser","getBasicProfile","userInfo","email","getEmail","first_name","getGivenName","last_name","getFamilyName","image","getImageUrl","props","signIn","renderAuthButton","signedIn","class","to","onClick","width","height","viewBox","fill","xmlns","fill-rule","d","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","isSignedIn","listen","prevState","this","React","Component","connect","state","currentShopper","shopperInfo","shopper_info","shopper","Navbar","renderUser","alt","src","userAuthPic","activeOrders","length","cart_length","isEmpty","cartItems","Object","keys","style","left","bottom","top","right","count","effect","Effect","SCALE","history","order","active_orders","cart_items","HomeSection","useState","createRef","ref","useEffect","selectedSection","current","IntersectionObserver","entries","observer","entry","isIntersecting","target","classList","add","unobserve","root","rootMargin","threshold","observe","children","Home","className","About","users","itemPicModal","Fragment","cursor","display","data-toggle","data-target","CartItem","newCount","cartItemCount","push","unit","price","toFixed","marginRight","changeCount","marginLeft","itemDetailsNav","Cart","cartItemsArray","map","key","cart_item","item_attribute","item","quantity_num","quantity_unit","subtotal","reduce","sum","payment","tax","total","onSubmit","handleSubmit","formValues","currentOrderId","alert","orderInfo","storeId","shopper_id","status","updatePreOrder","preOrder","renderCart","renderCartTotal","formWrapped","reduxForm","stores","selectedStore","current_order_id","item_ids","parseInt","orderData","orderId","patch","OrderSection","clearOrderItems","clearOrder","position","paymentDetails","paymentText","viewOrderItems","orderButtonTxt","cancelOrderModal","ActiveOrders","renderOrders","storesList","EditShopper","renderInput","input","meta","label","error","toProfile","replace","submitForm","infoId","editShopper","phone","editShopperProfile","address","city","zip_code","match","params","section","Field","component","renderForm","validate","ItemDetails","renderDetail","items","selectedItem","MapContainer","mapStyles","onHover","store_coords","google","zoom","initialCenter","user_coords","store_name","GoogleApiWrapper","apiKey","LoadingContainer","MapPage","toOrderPage","StoreDropdown","getAddress","store_params","location","results","geometry","storeOptions","value","e","find","aria-haspopup","aria-expanded","aria-labelledby","street","split","join","Searchbar","for","searchSubmit","searchItem","Category","href","data-category","FoodCategories","category","CategoryLink","cart_item_ids","addCartItem","cartItemInfo","buttonToggle","toggle","button","mouseOverFxn","process","remove","mouseOutFxn","addEventListener","removeEventListener","fontSize","preventDefault","cartItem","FoodList","itemCards","FoodListCarousel","splitItems","start","end","currentItems","slice","arrowStyles","zIndex","outline","background","border","color","dyanamicHeight","statusFormatter","renderArrowPrev","onClickHandler","hasPrev","renderArrowNext","hasNext","backgroundColor","OrderPage","navigator","geolocation","getCurrentPosition","success","bind","pos","crd","lat","latitude","lng","longitude","userCoords","err","warn","code","message","borderRadius","logo","FoodCategoryNav","filter","itemsList","OrderHistory","getCompletedOrders","completedOrders","completed_orders","PaypalButton","amount","onSuccess","details","pushState","go","catchError","options","PaymentOption","showBottomEdit","showState","setState","renderSelect","selectType","bottomOption","bottomContent","AddRowButton","numberModal","text","CheckoutRowButton","btnClass","checked","webkitBoxShadow","selectOption","Address","renderAddresses","addresses","joinedAddress","imgClass","currentTarget","updateOrderAddress","addAddress","addressModal","CheckoutPayment","selectOrderPayment","method","Contact","renderContacts","numbers","contact","updateOrderNumber","addContact","number","areaCode","number1","number2","DeliveryNote","renderTextArea","rows","placeholder","Promise","resolve","reject","errors","empty","SubmissionError","updateDeliveryNote","delivery_note","float","note","CheckoutColumnButton","selected","toString","DeliveryTime","dayDisplay","day","renderDates","today","Date","result","i","dd","String","getDate","padStart","mm","getMonth","getDay","currentDay","selectedDay","selectDate","renderTimes","times","time","selectedTime","selectTime","getHours","index","date","innerHTML","month","currentDate","delivery_time","updateOrderDeliveryTime","marginTop","otherSelect","submitOther","Substitute","substitute","updateOrderSubstitute","Tip","tip","currentTotal","updateOrderTip","selectOther","aria-describedby","PaymentOptions","userNumbers","phones","userAddresses","renderTip","chosenTip","quote","content","align","fontStyle","getCurrentShopper","chosenPhone","chosenAddress","chosenDeliveryDay","chosenDeliveryDate","chosenDeliveryTime","chosenSubstitute","chosenDeliveryNote","phrase","stripePromise","loadStripe","Payment","placeOrder","loading","processOrder","orderAddress","orderDeliveryTime","delivery_date","orderDeliveryDate","orderNote","orderNumber","orderSubstitute","orderTotal","orderTip","stripeCheckout","checkoutItems","checkoutItem","price_data","currency","product_data","unit_amount","quantity","stripePayment","onPaymentChange","paymentOption","currentURL","successParam","justifyContent","margin","padding","orderSubTotal","orderPayment","orderTax","paymentMethod","PayPalButton","userEmail","payment_method","orderItemInfo","order_id","order_item","event","stripe","session","redirectToCheckout","sessionId","order_info","payment_info","getOrder","renderPaymentInfo","Profile","editPage","word","charAt","toUpperCase","capitalize","userFirstName","userLastName","age","renderAddress","renderProfile","userAuthId","Products","onCategoryChange","mountState","renderSideBar","categoryTitle","aria-label","onChange","onSearchSubmit","onSearchChange","ownProps","ProfileSignup","profileSubmit","createShopperProfile","shopperFirstName","SearchPage","filteredItems","toLowerCase","includes","ItemModal","data-dismiss","aria-hidden","ConfirmModal","confirm","reload","SubmitModal","submitType","renderAddressSelect","submit","modals","selectedDiv","MutationObserver","mutationList","mutation","attributeFilter","tabindex","role","modal","item_pic","renderContent","units","ViewOrderItems","orderItems","getOrderItems","renderItems","order_items","App","getStores","NavBar","exact","path","render","INTIAL_STATE","INITIAL_STATE","delivery","complete_time","persistConfig","storage","whitelist","reducer","combineReducers","action","_","mapKeys","omit","formReducer","persistReducer","createStore","reducers","applyMiddleware","thunk","persistor","persistStore","createBrowserHistory","ReactDOM","basename","document","querySelector"],"mappings":"6TAEIA,EAAeC,aAAaC,QAAQ,iBAGlCC,GAFUF,aAAaC,QAAQ,cAErB,CACZ,eAAgB,mBAChBE,QAAS,mBACT,8BAA+B,IAC/B,cAAiBJ,IAGNK,MAAMC,OAAO,CACxBC,QAAS,6CACTJ,QAASA,ICdE,GACX,CACI,CACIK,MAAO,eACPC,KAAM,SAEV,CACID,MAAO,UACPC,KAAM,WAEV,CACID,MAAO,QACPC,KAAM,SAEV,CACID,MAAO,SACPC,KAAM,UAEV,CACID,MAAO,SACPC,KAAM,UAEV,CACID,MAAO,YACPC,KAAM,aAEV,CACID,MAAO,SACPC,KAAM,UAEV,CACID,MAAO,YACPC,KAAM,cAGd,CACI,CACID,MAAO,kBACPC,KAAM,iBAEV,CACID,MAAO,UACPC,KAAM,WAEV,CACID,MAAO,SACPC,KAAM,UAEV,CACID,MAAO,QACPC,KAAM,SAEV,CACID,MAAO,UACPC,KAAM,WAEV,CACID,MAAO,eACPC,KAAM,cAEV,CACID,MAAO,eACPC,KAAM,cAEV,CACID,MAAO,SACPC,KAAM,WAGd,CACI,CACID,MAAO,SACPC,KAAM,UAEV,CACID,MAAO,YACPC,KAAM,aAEV,CACID,MAAO,UACPC,KAAM,WAEV,CACID,MAAO,WACPC,KAAM,YAEV,CACID,MAAO,kBACPC,KAAM,iBAEV,CACID,MAAO,OACPC,KAAM,QAEV,CACID,MAAO,gBACPC,KAAM,iBAGd,CACI,CACID,MAAO,SACPC,KAAM,UAEV,CACID,MAAO,YACPC,KAAM,aAEV,CACID,MAAO,QACPC,KAAM,SAEV,CACID,MAAO,OACPC,KAAM,QAEV,CACID,MAAO,SACPC,KAAM,UAEV,CACID,MAAO,YACPC,KAAM,aAEV,CACID,MAAO,eACPC,KAAM,gBAEV,CACID,MAAO,SACPC,KAAM,WAGd,CACI,CACID,MAAO,YACPC,KAAM,aAEV,CACID,MAAO,YACPC,KAAM,aAEV,CACID,MAAO,eACPC,KAAM,eAEV,CACID,MAAO,eACPC,KAAM,cAEV,CACID,MAAO,SACPC,KAAM,UAEV,CACID,MAAO,YACPC,KAAM,aAEV,CACID,MAAO,e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","file":"static/js/main.2f92030a.chunk.js","sourcesContent":["import axios from 'axios'\n\nlet shopperToken = localStorage.getItem('shopper_token')\nlet cartToken = localStorage.getItem('cart_token')\n\nconst headers = {\n    'Content-Type': 'application/json',\n    Accepts: 'application/json',\n    'Access-Control-Allow-Origin': '*',\n    \"Authorization\": shopperToken\n}\n\nexport default axios.create({\n    baseURL: 'https://bread-basket-backend.herokuapp.com',\n    headers: headers \n})\n\n// baseURL: 'https://bread-basket-backend.herokuapp.com',","export default [\n    [\n        {\n            title: \"Meat/Seafood\",\n            name: \"meats\"\n        },\n        {\n            title: \"Produce\",\n            name: \"produce\"\n        },\n        {\n            title: \"Dairy\",\n            name: \"dairy\"\n        },\n        {\n            title: \"Bakery\",\n            name: \"bakery\"\n        },\n        {\n            title: \"Snacks\",\n            name: \"snacks\"\n        },\n        {\n            title: \"Beverages\",\n            name: \"beverages\"\n        },\n        {\n            title: \"Frozen\",\n            name: \"frozen\"\n        },\n        {\n            title: \"Household\",\n            name: \"household\"\n        }\n    ],\n    [\n        {\n            title: \"Paper & Plastic\",\n            name: \"papernplastic\"\n        },\n        {\n            title: \"Produce\",\n            name: \"produce\"\n        },\n        {\n            title: \"Bakery\",\n            name: \"bakery\"\n        },\n        {\n            title: \"Meats\",\n            name: \"meats\"\n        },\n        {\n            title: \"Seafood\",\n            name: \"seafood\"\n        },\n        {\n            title: \"Dairy & Eggs\",\n            name: \"dairyneggs\"\n        },\n        {\n            title: \"Pantry & Dry\",\n            name: \"pantryndry\"\n        },\n        {\n            title: \"Snacks\",\n            name: \"snacks\"\n        }\n    ],\n    [\n        {\n            title: \"Beauty\",\n            name: \"beauty\"\n        },\n        {\n            title: \"Household\",\n            name: \"household\"\n        },\n        {\n            title: \"Grocery\",\n            name: \"grocery\"\n        },\n        {\n            title: \"Medicine\",\n            name: \"medicine\"\n        },\n        {\n            title: \"School & Office\",\n            name: \"schoolnoffice\"\n        },\n        {\n            title: \"Diet\",\n            name: \"diet\"\n        },\n        {\n            title: \"Personal Care\",\n            name: \"personalcare\"\n        }\n    ],\n    [\n        {\n            title: \"Bakery\",\n            name: \"bakery\"\n        },\n        {\n            title: \"Beverages\",\n            name: \"beverages\"\n        },\n        {\n            title: \"Dairy\",\n            name: \"dairy\"\n        },\n        {\n            title: \"Deli\",\n            name: \"deli\"\n        },\n        {\n            title: \"Frozen\",\n            name: \"frozen\"\n        },\n        {\n            title: \"Household\",\n            name: \"household\"\n        },\n        {\n            title: \"Meat/Seafood\",\n            name: \"meatnseafood\"\n        },\n        {\n            title: \"Snacks\",\n            name: \"snacks\"\n        }\n    ],\n    [\n        {\n            title: \"Beverages\",\n            name: \"beverages\"\n        },\n        {\n            title: \"Breakfast\",\n            name: \"breakfast\"\n        },\n        {\n            title: \"Canned Goods\",\n            name: \"cannedgoods\"\n        },\n        {\n            title: \"Dairy & Eggs\",\n            name: \"dairyneggs\"\n        },\n        {\n            title: \"Frozen\",\n            name: \"frozen\"\n        },\n        {\n            title: \"Household\",\n            name: \"household\"\n        },\n        {\n            title: \"Meat/Seafood\",\n            name: \"meatnseafood\"\n        },\n        {\n            title: \"Produce\",\n            name: \"produce\"\n        },\n        {\n            title: \"Snacks\",\n            name: \"snacks\"\n        }\n    ]\n]","import rails from '../services/Rails'\nimport categories from '../categories'\n\n//STORE ACTIONS\nexport const getStores = () => async dispatch => {\n    const response = await rails.get(`/stores`)\n    let store = response.data.data.find(store => store.id == 1)\n    console.log(store)\n    dispatch({ type: 'GET_STORES', payload: {\n        stores: response.data.data,\n        store: store\n    }})\n}\n\nexport const selectStore = (store) => {\n    return ({\n        type: 'SELECT_STORE',\n        payload: store\n    })\n}\n\n//CATEGORY ACTIONS\n\nexport const getCategories = (store_id) => {\n    return {\n        type: 'GET_CATEGORIES',\n        payload: categories[store_id]\n    }\n}\n\n//ITEM ACTIONS\n\nexport const clearItem = () => {\n    return ({\n        type: 'CLEAR_ITEM'\n    })\n}\n\nexport const getItem = (item_id) => async dispatch => {\n    const response = await rails.get(`/items/${item_id}`)\n    console.log(response.data, \"items\")\n    dispatch({ type: 'GET_ITEM', payload: response.data })\n}\n\nexport const clearItemPic = () => {\n    return ({\n        type: 'CLEAR_ITEM_PIC'\n    })\n}\n\nexport const getItems = (store_id) => async dispatch => {\n    const response = await rails.get(`/items?store_id=${store_id}`)\n    console.log(response.data, \"items\")\n    dispatch({type: 'GET_ITEMS', payload: response.data})\n}\n\n\n//CART ACTIONS\n\nexport const getCart = (cart_id) => async dispatch => {\n    const response = await rails.get(`/cart_items?cart_id=${cart_id}`)\n    let data = response.data\n    console.log(data.data)\n    dispatch({type: \"GET_CART\", payload: data.data})\n}\n\nexport const startCart = cartInfo => async dispatch => {\n    const response = await rails.post('/carts', {cart: cartInfo})\n    let data = response.data\n    console.log(data.cart.data.attributes, 'cart')\n    localStorage.setItem('cart_token', data.jwt)\n    dispatch({ type: 'START_CART', payload: data.cart})\n}\n\nexport const dropCart = cartId => async dispatch => {\n    const response = await rails.delete(`/carts/${cartId}`)\n    dispatch ({\n        type: 'DROP_CART'\n    })\n}\n\n//CART ITEM ACTIONS\n\nexport const addCartItem = cartItemInfo => async dispatch => {\n    console.log(cartItemInfo)\n    const response = await rails.post('/cart_items', {cart_item: cartItemInfo})\n    let data = response.data\n    console.log(data.data, 'cart_item added')\n    dispatch({ type: \"ADD_CART_ITEM\", \n                payload: { \n                    cart_item: data.data,\n                    id: data.data.id,\n                    item_id: data.data.attributes.item_id\n                }\n            })\n}\n\nexport const removeCartItem = (cartItemId, itemId) => async dispatch => {\n    const response = await rails.delete(`/cart_items/${cartItemId}`)\n    let data = response.data \n    console.log(data)\n    dispatch({type: \"DROP_CART_ITEM\", \n        payload: {\n            cart_item_id: cartItemId,\n            item_id: itemId\n        }\n    })\n}\n\nexport const cartItemCount = (newCount, cartItemId) => {\n    console.log(newCount, cartItemId)\n    return ({\n        type: \"CHANGE_COUNT_CART_ITEM\",\n        payload: { count: newCount, cartItemId: cartItemId }\n    })\n}\n\n//ORDER ACTIONS\n\nexport const getOrder = orderId => async dispatch => {\n    const response = await rails.get(`/orders/${orderId}`)\n    let id = parseInt(response.data.data.id)\n    let orderData = response.data.data.attributes\n    console.log(id, orderData)\n    dispatch({\n        type: \"GET_ORDER\", payload: orderData\n    })\n}\n\nexport const clearOrder = () => {\n    return({\n        type: \"CLEAR_ORDER\"\n    })\n}\n\nexport const preOrder = orderInfo => async dispatch => {\n    const response = await rails.post(`/orders`, {order: orderInfo})\n    let id = parseInt(response.data.data.id)\n    let orderData = response.data.data.attributes\n    console.log(response)\n    dispatch({type: \"PRE_ORDER\", payload: {\n            id: id,\n            order: orderData\n        } \n    })\n}\n\nexport const updatePreOrder = (orderId, orderInfo) => async dispatch => {\n    console.log(orderId)\n    const response = await rails.patch(`/orders/${orderId}`, {order: orderInfo})\n    console.log(response.data)\n    let id = parseInt(response.data.data.id)\n    let orderData = response.data.data.attributes\n    dispatch({\n        type: \"PRE_ORDER\", payload: {\n            id: id,\n            order: orderData\n        }\n    })\n}\n\nexport const getActiveOrders = shopperId => async dispatch => {\n    const response = await rails.get(`/orders?shopper_id=${shopperId}&status=active`)\n    let data = response.data.data\n    dispatch({type: \"GET_ACTIVE_ORDERS\", payload: data})\n}\n\nexport const getCompletedOrders = shopperId => async dispatch => {\n    const response = await rails.get(`/orders?shopper_id=${shopperId}&status=completed`)\n    let data = response.data.data\n    dispatch({ type: \"GET_COMPLETED_ORDERS\", payload: data })\n}\n\nexport const processOrder = (cartItems, cartId, orderId, orderInfo) => async() => {\n    for (const cartItem of cartItems) {\n        let orderItemInfo = {\n            order_id: orderId,\n            item_id: cartItem.attributes.item_id,\n            quantity_num: cartItem.attributes.quantity_num,\n            status: \"pending\"\n        }\n        await rails.post(`/order_items`, { order_item: orderItemInfo })\n    }\n    await rails.patch(`orders/${orderId}`, orderInfo)\n    await rails.delete(`/carts/${cartId}`)\n} \n\nexport const checkoutOrder = () => {\n    return ({\n        type: \"CHECKOUT_ORDER\"\n    })\n}\n\nexport const changeOrderStatus = (id, status) => async dispatch => {\n    const response = await rails.patch(`orders/${id}`, status)\n    console.log(response.data)\n}\n\nexport const addOrderItem = orderItemInfo => async dispatch => {\n    const response = await rails.post(`/order_items`, {order_item: orderItemInfo})\n    let data = response.data\n    console.log(data)\n}\n\nexport const removeOrderItem = orderItemId => async dispatch => {\n    const response = await rails.delete(`/order_items/${orderItemId}`)\n    let data = response.data\n    console.log(data)\n}\n\nexport const cancelOrder = (id) => async dispatch => {\n    const response = await rails.delete(`/orders/${id}`)\n    console.log(response.data)\n    dispatch({ type: \"CANCEL_ORDER\", payload: id })\n}\n\nexport const getOrderItems = (order_id) => async dispatch => {\n    const response = await rails.get(`order_items?order_id=${order_id}`)\n    console.log(response.data)\n    dispatch({type: \"GET_ORDER_ITEMS\", payload: response.data.data})\n}\n\nexport const clearOrderItems = () => {\n    return({\n        type: \"CLEAR_ORDER_ITEMS\"\n    })\n}\n\nexport const updateOrderAddress = (address) => {\n    console.log('update address', address)\n    return ({\n        type: \"UPDATE_ORDER_ADDRESS\",\n        payload: address\n    })\n}\n\nexport const updateOrderNumber = (number) => {\n    return ({\n        type: \"UPDATE_ORDER_NUMBER\",\n        payload: number\n    })\n}\n\nexport const updateOrderTip = (tip) => {\n    return({\n        type: \"UPDATE_ORDER_TIP\",\n        payload: tip\n    })\n}\n\nexport const updateOrderDeliveryTime = (delivery_time) => {\n    return({\n        type: \"UPDATE_ORDER_DELIVERY_TIME\",\n        payload: delivery_time\n    })\n}\n\nexport const updateOrderSubstitute = (substitute) => {\n    return({\n        type: \"UPDATE_ORDER_SUBSTITUTE\",\n        payload: substitute\n    })\n}\n\nexport const updateDeliveryNote = (note) => {\n    console.log(note)\n    return({\n        type: \"UPDATE_ORDER_DELIVERY_NOTE\",\n        payload: note\n    })\n}\n\nexport const selectOrderPayment = (method) => {\n    return({\n        type: \"UPDATE_ORDER_PAYMENT_METHOD\",\n        payload: method.currentTarget.value\n    })\n}\n\n//AUTH ACTIONS\n\nexport const signIn = (userInfo) => async dispatch => {\n    const response = await rails.post('/login', {shopper: userInfo})\n    let data = response.data\n    localStorage.setItem('shopper_token', data.jwt)\n    console.log(data.shopper)\n    dispatch({\n        type: 'SIGN_IN',\n        payload: data.shopper.data.attributes\n    })\n}\n\nexport const signOut = () => {\n    localStorage.removeItem('shopper_token')\n    return {\n        type: 'SIGN_OUT'\n    }\n}\n\n//USER PROFILE ACTIONS\n\nexport const getCurrentShopper = (shopperId) => async dispatch => {\n    const response = await rails.get(`shoppers/${shopperId}`)\n    let data = response.data\n    console.log(response.data)\n}\n\nexport const createShopperProfile = (shopperInfo) => async dispatch => {\n    const response = await rails.post('/shopper_infos/', shopperInfo)\n    let data = response.data\n    console.log(data)\n    dispatch({\n        type: 'PROFILE_INFO',\n        payload: data.data\n    })\n}\n\nexport const editShopper = (form, id) => async dispatch => {\n    console.log(form)\n    const response = await rails.patch(`/shoppers/${id}`, form)\n    let data = response.data\n    console.log(data.data)\n    dispatch({ type: \"EDIT_SHOPPER\", payload: data.data.attributes })\n}\n\nexport const editShopperProfile = (form, id) => async dispatch => {\n    const response = await rails.patch(`/shopper_infos/${id}`, form)\n    let data = response.data.data\n    console.log(data)\n    dispatch({ type: \"EDIT_PROFILE\", payload: data.attributes })\n}\n\nexport const storeCoords = (coords) => {\n    return({\n        type: 'STORE_COORDS',\n        payload: coords\n    })\n}\n\nexport const userCoords = (coords) => {\n    return ({\n        type: 'USER_COORDS',\n        payload: coords\n    })\n}\n\n//PAYMENT ACTIONS\n\nexport const stripePayment = (event, stripePromise, checkoutItems) => async dispatch => {\n    const stripe = await stripePromise\n    \n    const response = await rails.post('/stripe_payments/checkout', {'checkout_items': checkoutItems})\n    \n    const session = await response.data\n    \n    const result = await stripe.redirectToCheckout({\n        sessionId: session.id\n    })\n    console.log(result, \"payment result!\")\n}\n\n//MODAL ACTIONS\n\nexport const itemPicModal = (item_id) => async dispatch => {\n    const response = await rails.get(`/items/${item_id}`)\n    console.log(response.data, \"items\")\n    dispatch({ type: 'ITEM_PIC_MODAL', payload: response.data })\n}\n\nexport const addressModal = () => {\n    return({\n        type: \"ADDRESS_MODAL\"\n    })\n}\n\nexport const numberModal = () => {\n    return({\n        type: \"NUMBER_MODAL\"\n    })\n}\n\nexport const cancelOrderModal = (id) => {\n    return({\n        type: \"CANCEL_ORDER_MODAL\",\n        payload: id\n    })\n}\n\nexport const clearModal = () => {\n    return({\n        type: 'CLEAR_MODAL'\n    })\n}\n\n//ADDRESS ACTIONS\n\nexport const addShopperAddress = (form) => async dispatch => {\n    const response = await rails.post('/addresses', {'address': form})\n    const data = response.data\n    console.log(data)\n}\n\n//EMAIL ACTIONS\n\nexport const addShopperEmail = (form) => async dispatch => {\n    const response = await rails.post('/emails', {'email': form})\n    const data = response.data\n    console.log(data)\n}\n\n//NUMBER ACTIONS\n\nexport const addShopperNumber = (form) =>  async dispatch => {\n    const response = await rails.post('/phones', {'phone': form})\n    const data = response.data\n}\n\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport {signIn, signOut, dropCart, checkoutOrder} from '../actions'\n\nclass GoogleAuth extends React.Component{\n    componentDidMount(){\n        window.gapi.load('client:auth2', () => {\n            window.gapi.client.init({\n                clientId: '30752304516-o6laupndg02km70f10st00em8lujsc28.apps.googleusercontent.com',\n                scope: 'profile'\n            }).then(() => {\n                this.auth = window.gapi.auth2.getAuthInstance()\n                this.authChange(this.auth.isSignedIn.get())\n                this.auth.isSignedIn.listen(this.authChange)\n            })\n        })\n    }   \n\n    componentDidUpdate(prevState){\n        // if (prevState.signedIn !== this.props.signedIn){\n        //     this.redirect()\n        // }\n    }\n    \n\n    authChange = (userStatus) => {\n        if (!!userStatus) {\n            let user = this.auth.currentUser.get().getBasicProfile()\n            console.log(user)\n            let userInfo =\n            {\n                email: user.getEmail(),\n                first_name: user.getGivenName(),\n                last_name: user.getFamilyName(),\n                image: user.getImageUrl()\n            }\n            this.props.signIn(userInfo)\n        } else {\n            this.props.signOut()\n        }\n    }\n\n    signIn = () => {\n        if(!!this.auth){\n            this.auth.signIn()\n        }\n    }\n\n    \n    signOut = () => {\n        if(!!this.auth){\n            this.auth.signOut()\n            this.props.dropCart(this.props.cartId)\n            this.props.checkoutOrder()\n        }\n  \n        // localStorage.removeItem('rails_token')\n    }\n\n    // redirect = () => {\n    //     if (!!this.props.signedIn && !this.props.shopperInfo) {\n    //         console.log(this.props.signedIn, this.props.shopperInfo)\n    //         this.props.history.push('/profile_signup')\n    //         this.props.history.go()\n    //     } else if (!!this.props.signedIn && !!this.props.shopperInfo) {\n    //         this.props.history.push('/orderpage')\n    //     } else {\n    //         this.props.history.push('/')\n    //         this.props.history.go()\n    //     }\n    // }\n\n    renderAuthButton = () => {\n        if(this.props.signedIn === null){\n            return <div>I don't know</div>\n        } else {\n            if(this.props.signedIn === true){\n                return (\n                    <Link class=\"btn btn-primary\" to='/' onClick={this.signOut} >\n                        <svg width=\"1.5em\" height=\"1.5em\" viewBox=\"0 0 16 16\" class=\"bi bi-person-fill\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                             <path fill-rule=\"evenodd\" d=\"M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H3zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\" />\n                        </svg>\n                        Sign Out\n                    </Link>\n                    // <button type=\"button\" class= \"btn btn-primary\" onClick = {this.signOut}> \n                    //     <Link to='/'>Order History</Link>\n                    //     <svg width=\"1.5em\" height=\"1.5em\" viewBox=\"0 0 16 16\" class=\"bi bi-person-fill\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                    //         <path fill-rule=\"evenodd\" d=\"M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H3zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\" />\n                    //     </svg>\n                    //     Sign Out\n                    // </button>\n                )\n            } else {\n                \n                return (\n                    <Link class=\"btn btn-primary\" to='/orderpage' onClick={this.signIn}>\n                        <svg width=\"1.5em\" height=\"1.5em\" viewBox=\"0 0 16 16\" class=\"bi bi-person-fill\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path fill-rule=\"evenodd\" d=\"M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H3zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\" />\n                        </svg>\n                        Sign In\n                    </Link>\n                    // <div class = 'log-button'>\n                    //     <button type=\"button\" class=\"btn btn-primary\" onClick={this.signIn}>\n                    //         <svg width=\"1.5em\" height=\"1.5em\" viewBox=\"0 0 16 16\" class=\"bi bi-person-fill\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                    //             <path fill-rule=\"evenodd\" d=\"M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H3zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\" />\n                    //         </svg>\n                    //         Sign In\n                    //     </button>\n                    // </div>\n                )\n            }\n        }\n    }\n\n    \n    render(){\n        return(   \n            <div>\n                {this.renderAuthButton()}\n            </div>\n            \n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return ({\n        shopperId: state.auth.currentShopper.id,\n        signedIn: state.auth.signedIn,\n        shopperInfo: state.auth.currentShopper.shopper_info,\n        cartId: state.cart.cart_id\n    })\n}\n\nexport default connect(mapStateToProps, {signIn, signOut, dropCart, checkoutOrder})(GoogleAuth)","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport GoogleAuth from '../components/GoogleAuth'\nimport { connect } from 'react-redux'\nimport { getActiveOrders} from '../actions'\nimport { isEmpty } from 'lodash'\nimport NotificationBadge, { Effect } from 'react-notification-badge'\n\nexport class Navbar extends Component {\n    componentDidUpdate(prevState){\n        if(prevState.activeOrders.length != this.props.activeOrders.length){\n            this.props.getActiveOrders(this.props.shopperId)\n        }\n    }\n\n    renderUser = () => {\n        if(!!this.props.signedIn){   \n            return (\n                <div>\n                    <a class=\"nav-link\">\n                        <Link to='/profile'>\n                            <img class=\"google-pic\" alt=\"alt img\" src={this.props.userAuthPic} />\n                        </Link>\n                    </a>\n                </div>\n            )\n        }\n    }\n\n    render() {\n        let cart_length\n        if(isEmpty(this.props.cartItems) || !this.props.cartItems){\n            cart_length = 0\n        } else {\n            cart_length = Object.keys(this.props.cartItems).length\n        }\n        return ( \n            \n            <nav class=\"navbar navbar-expand-lg navbar-expand-med navbar-expand-sm nav-bg\">\n            \n                   \n                {/* <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span class=\"navbar-toggler-icon\"></span>\n                </button> */}\n                <div class=\"collapse navbar-collapse \" id=\"navbarNav\">\n                    <Link class='header-logo' to={'/'}>\n                        <img class=\"header-icon\" src={'/bread_basket_icon.jpg'}></img>\n\n                    </Link>\n                    {(!!this.props.signedIn) ?\n                    \n                    <ul class=\"navbar-nav\">\n                        <li class=\"nav-item nav-list active\">\n                            <Link to = \"/orderpage\" class=\"menu-button\">\n                                Order\n                            </Link>\n                        </li>\n                            \n                        {(!isEmpty(this.props.activeOrders)) ? \n                                <li class=\"nav-item nav-list\">\n                                    <Link to = \"/active_orders\" class=\"menu-button\">Active Orders</Link>\n                                </li>\n                                :\n                                null\n                        }\n                        <li class=\"nav-item nav-list\">\n                            <Link to = \"/order_history\" class=\"menu-button\">Order History</Link>\n                        </li>\n                        <li class=\"nav-item nav-list\">\n                            <Link to = '/about' class=\"menu-button\">About</Link>\n                        </li>\n                    </ul>\n                    :\n                    <ul class=\"navbar-nav\">\n                        <li class=\"nav-item nav-list\">\n                            <Link to = \"/about\" class=\"menu-button\">About</Link>\n                        </li>\n                    </ul>\n                    }\n                </div>\n                {(!!this.props.signedIn) ? \n                <ul class=\"navbar-nav nav-right-btn\">\n                    <li class=\"nav-item\">\n                        <button class=\"btn btn-warning\" type=\"button\">\n                            <NotificationBadge style = {{left: '90%', bottom:'0px', top: 'none', right: 'none'}} count = {cart_length} effect = {Effect.SCALE}/> \n                            <Link class=\"text-reset\" to={'/cart'}>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1.5em\" height=\"1.5em\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                                    <path d=\"M10 19.5c0 .829-.672 1.5-1.5 1.5s-1.5-.671-1.5-1.5c0-.828.672-1.5 1.5-1.5s1.5.672 1.5 1.5zm3.5-1.5c-.828 0-1.5.671-1.5 1.5s.672 1.5 1.5 1.5 1.5-.671 1.5-1.5c0-.828-.672-1.5-1.5-1.5zm1.336-5l1.977-7h-16.813l2.938 7h11.898zm4.969-10l-3.432 12h-12.597l.839 2h13.239l3.474-12h1.929l.743-2h-4.195z\" />\n                                </svg>\n                            </Link>\n                        </button>\n                    </li>\n                </ul>\n                :\n                <div></div>\n                }\n                \n                <GoogleAuth history = {this.props.history} />\n                <ul class=\"navbar-nav nav-right-btn\">\n                    <li class=\"nav-item\">\n                        {this.renderUser()}\n                    </li>\n                </ul>\n\n            </nav>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return ({\n        activeOrders: state.order.active_orders,\n        shopperId: state.auth.currentShopper.id,\n        signedIn: state.auth.signedIn,\n        userAuthPic: state.auth.currentShopper.image,\n        cartItems: state.cart.cart_items\n    })\n}\n\nexport default connect(mapStateToProps, { getActiveOrders})(Navbar)\n","import React, { useState, useEffect } from 'react'\n\nlet HomeSection = (props) => {\n    const [ref] = useState(React.createRef())\n    useEffect(() => {\n\n        console.log(props)\n        const selectedSection = ref.current\n        const options = {\n            root: null,\n            rootMargin: '100px',\n            threshold: 0\n        }\n\n        function sectionRender(section) {\n            section.classList.add('appear')\n        }\n\n        const observer = new IntersectionObserver(function (entries, observer) {\n            let entry = entries[0]\n            if(!entry.isIntersecting){\n                return\n            } else {\n                sectionRender(entry.target)\n                observer.unobserve(entry.target)\n            }\n            console.log(entry.isIntersecting, props)\n        }, options)\n        observer.observe(selectedSection)\n    }, [])\n\n    return (\n        <div>\n            <div ref = {ref} class = 'row homeRow transition'>\n                {props.children}\n            </div>\n        </div>\n    )\n} \n\nexport default HomeSection","import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport HomeSection from '../components/HomeSection'\n// import aboutPic from '../public/logo192.png'\nexport class Home extends Component {\n    componentDidMount(){\n        console.log(this.props.signedIn)\n        console.log(\"test\")\n    }\n    \n    render() {\n        return (\n            <div class = \"App-margin\">\n                <div class = \"homeMain\">\n                    <h1>\n                        Welcome to BreadBasket!\n                    </h1>\n                        <img class=\"homeMainPic\" src='https://secureservercdn.net/45.40.150.81/0m4.91e.myftpupload.com/wp-content/uploads/2020/03/groceries-and-meat-image-1038x576.jpg' />\n                </div>\n                \n                \n                <div class = \"container\">\n                    <div class = \"homeSection\">\n                        <div className = \"row homeRow\">\n                            <h1> \n                                Shop from popular locations\n                            </h1>\n                            <p> \n                                Get groceries delivered from all your favorite locations. We have a large variety of stores to pick from, for all your specific grocery needs.\n                            </p>\n                        </div> \n                    </div>\n                            <HomeSection>\n                                <div className = 'col-2'>\n                                    <div className = \"storeLogoBubble\">\n                                <img class=\"storeLogo\" src= \"https://images.barrons.com/im-78993?width=1280&size=1\"/> \n                                    </div>\n                                </div> \n                                <div className='col-2'>\n                                <div className=\"storeLogoBubble\">\n                                    <img class=\"storeLogo\" src=\"https://sunrisemarketplace.com/wp-content/uploads/2020/03/3979_SMP-cvs-logo.jpg\" />\n                                </div>\n                                </div> \n                                <div className='col-2'>\n                                <div className=\"storeLogoBubble\">\n                                    <img class=\"storeLogo\" src=\"https://d2lnr5mha7bycj.cloudfront.net/store_configuration/logo/212/white_label_landing_page_6217c6f4-ca57-4174-b463-b5508f095889.png\" />\n\n                                </div>\n                                </div> \n                                <div className='col-2'>\n                                <div className=\"storeLogoBubble\">\n                                    <img class=\"storeLogo\" src=\"https://pbs.twimg.com/profile_images/1111764791503151104/2kXoX9z-.png\" />\n\n                                </div>\n                                </div> \n                                <div className='col-2'>\n                                <div className=\"storeLogoBubble\">\n                                <img class=\"storeLogo\" src=\"https://photos.prnewswire.com/prnfull/20140919/147279\" />\n\n                                </div>\n                                </div> \n                            </HomeSection>\n                        \n                            <HomeSection>\n                                <div className = \"col-8\">\n                                    <img className = \"homeSectionPic\" src= \"https://img1.mashed.com/img/gallery/grocery-delivery-services-ranked-from-worst-to-first/intro-1585162312.jpg\"/> \n                                </div>  \n                                <div className = \"col-4\">\n                                    <h4> Convenient service</h4>\n                                    <p> Orders made on BreadBasket are made available for drivers in real time for quick and painless delivery. </p> \n                                </div> \n                            </HomeSection>\n                    \n                            <HomeSection>\n                                <div className = \"col-4\">\n                                    <h4>Update your orders live</h4>\n                                    <p>\n                                        Any last minute changes you want to make to your order? You can notify your driver on any changes you want to make on any current orders. \n                                    </p> \n                                </div> \n                                <div className = \"col-8\">\n                                    <img className=\"homeSectionPic\" src=\"https://www.gannett-cdn.com/media/2017/06/14/TennGroup/Knoxville/636330432728891184-instacart-0056.jpg?width=640\" />\n                                </div>\n                            </HomeSection>\n                            <HomeSection>\n                                <div className = \"col-8\"> \n                                    <img className=\"homeSectionPic\" src= \"https://images.squarespace-cdn.com/content/v1/5bbd07174d546e20297c2ac0/1585075655832-JX0T0UXFFHOM1RWZUCZ8/ke17ZwdGBToddI8pDm48kDHPSfPanjkWqhH6pl6g5ph7gQa3H78H3Y0txjaiv_0fDoOvxcdMmMKkDsyUqMSsMWxHk725yiiHCCLfrh8O1z4YTzHvnKhyp6Da-NYroOW3ZGjoBKy3azqku80C789l0mwONMR1ELp49Lyc52iWr5dNb1QJw9casjKdtTg1_-y4jz4ptJBmI9gQmbjSQnNGng/photo-1542838132-92c53300491e.jpg?format=1500w\"/>\n                                </div>\n                                <div className = \"col-4\">\n                                    <h5>Organized shopping experience</h5>\n                                    <p>\n                                        Items are searchable by section or by name so you can quickly find the items you want to add to your order.\n                                    </p>\n                                </div> \n                            </HomeSection>\n                        <h1>Make your first order today!</h1>\n                        <div >\n                            {\n                                !!this.props.signedIn ? \n                                <Link to = '/orderpage'>\n                                    Get Started\n                                </Link>\n                                :\n                                <h3>But first, please sign in!</h3>\n                            }\n                        </div>\n                            \n                </div>\n            </div>\n        )\n    }\n}\n\nlet mapStateToProps= state => {\n    return ({\n        signedIn: state.auth.signedIn\n    })\n}\n\nexport default connect(mapStateToProps)(Home)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n// import aboutPic from '../public/logo192.png'\nexport class About extends Component {\n    componentDidMount() {\n        // this.props.testRoute(this.props.history)\n    }\n    render() {\n        return (\n            <div class = \"App-margin container\">\n                <h1>About</h1>\n                {/* <img width = '400px' src= {aboutPic} alt='Profile pic here!'></img> */}\n\n                    <div class = \"row aboutBox\">\n                        <div class = \"col-4\">\n                            <h3>Get your grocery shopping done with BreadBasket!</h3>\n                            <p>\n                                Browse from popular locations to shop for all your essential groceries and household items delievered straight to your door.\n                            </p>\n                        </div>\n                        <div class = \"col-8\">\n                                <img src= \"https://itk-assets.nyc3.digitaloceanspaces.com/2020/03/grocery-delivery-services-1024x690.jpg\" style = {{width: \"100%\"}}></img>                            \n                        </div>\n                    </div>\n\n\n                    <div class = \"row aboutRow\"> \n                        <div class=\"col-4\" >\n                            <div class = \"aboutPicBox\">\n                            <img class=\"aboutPic\" src=\"https://voxytalksy.com/wp-content/uploads/2018/08/google-voxytalksy.png\"/>\n                            </div>\n                            <h4>Google Authentication </h4>\n                            <p>Easily create an account with personal information by signing in with your personal Google account.</p>\n                        </div> \n                        <div class=\"col-4\">\n                            <div class=\"aboutPicBox\">\n                                    <img class=\"aboutPic\" src=\"https://localyse.eu/wp-content/uploads/2020/06/google_maps_featured_image-1024x597.jpg\" />\n                                </div>\n                                <h4>Look for nearby stores</h4>\n                                <p>Google Maps is available on BreadBasket to search for nearby available store locations. </p>\n                            </div> \n                        <div class=\"col-4\">\n                        <div class=\"aboutPicBox\">\n                            <img class=\"aboutPic\" src=\"https://ecommercebooth.com/wp-content/uploads/2020/08/paypal-vs-strirpe-for-ecommere-business-.png\" />\n                            </div>\n                            <h4>Easy Payment</h4>\n                            <p>Pay for your order with either Stripe or Paypal for a convenient checkout experience</p>\n                        </div> \n                    </div>     \n            </div>\n                \n\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        users: state.users\n    }\n}\n\nexport default connect(mapStateToProps)(About)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { itemPicModal } from '../actions'\n\nconst ItemPic = (props) => {\n\n    return (\n        <React.Fragment>\n            <a onClick = {()=> props.itemPicModal(props.item_id)} style = {{cursor: \"pointer\", display:'block', height: '100%'}} data-toggle=\"modal\" data-target=\"#Modal\">\n                <img src={props.image} class=\"card-img-top card-image\" alt=\"...\" />\n            </a>\n        </React.Fragment>\n    )\n}\n\nexport default connect(null, { itemPicModal })(ItemPic)","import React, {Component} from 'react'\nimport ItemPic from '../components/ItemPic'\nimport { connect } from 'react-redux'\nimport { cartItemCount, removeCartItem, clearItem } from '../actions'\n\n\nclass CartItem extends Component {\n\n    removeItem(cartItemId){\n        console.log(cartItemId)\n        this.props.removeCartItem(this.props.cartItemId, this.props.item_id)\n    }\n\n    changeCount(type){\n        let newCount = 0\n        if(type === '+'){\n            newCount = this.props.count + 1\n        }\n\n        if(type === '-'){\n            if(this.props.count > 1){\n                newCount = this.props.count - 1 \n            } else{\n                newCount = 1\n            }\n        }\n        \n        this.props.cartItemCount(newCount, this.props.cartItemId)\n        // this.props.cartItemCount(newCount, this.props.cartItemId)\n    }\n\n    itemDetailsNav(){\n        this.props.clearItem()\n        this.props.history.push(`/item_details/${this.props.item_id}`)\n    }\n\n    render(){\n        \n        return(\n            <div class = \"row cartItem\">\n                <div class = \"cartItem-pic\">\n                    <h3>{this.props.name}</h3>\n                    \n                    <ItemPic image = {this.props.image} item_id = {this.props.item_id}/>\n\n                    \n                </div>\n                <div>\n                    <h3>Price per {this.props.unit}: ${(this.props.price * .01).toFixed(2)}</h3>\n                    <div>\n                        <h3>Count: {this.props.count}</h3>\n                        <span >\n                            <button style = {{marginRight: \"3%\"}} class = \"btn btn-primary\"onClick= {() => this.changeCount('+')}>\n                                +\n                            </button>\n                            <button style = {{marginLeft: \"3%\"}} class = \"btn btn-danger\" onClick = {() => this.changeCount('-')}>\n                                -\n                            </button>\n                        </span>\n                        \n                    </div>\n                    <h3>Total: ${(this.props.count * this.props.price * .01).toFixed(2)} </h3>\n                </div>\n                <div>\n                    <button class = \"btn btn-danger\" onClick = {() => this.removeItem(this.props.cartItemId)}>Remove Item</button>\n                    <button class = \"btn btn-primary\" onClick = {()=> {this.itemDetailsNav()}}>Item Details</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect(null, {cartItemCount, removeCartItem, clearItem})(CartItem)","import React, {Component} from 'react'\nimport { connect } from 'react-redux'\nimport { getCart, removeCartItem, preOrder, updatePreOrder} from '../actions'\nimport CartItem from '../components/CartItem'\nimport { isEmpty } from 'lodash'\nimport {reduxForm, Field } from 'redux-form'\n\nclass Cart extends Component{\n\n    cartItemsArray = (cartItems) => {\n        let keys = Object.keys(cartItems)\n        return keys.map(key => this.props.cart_items[key])\n    }\n\n    renderCart(){ \n        if (!isEmpty(this.props.cart_items)){\n            let cartItems = this.cartItemsArray(this.props.cart_items)\n            return (\n                cartItems.map(cart_item => {\n                    let item_attribute = cart_item.attributes.item\n                    return <CartItem cartItemId={cart_item.id} image={item_attribute.image} name={item_attribute.name} count={cart_item.attributes.quantity_num} price={item_attribute.price} history = {this.props.history} item_id={item_attribute.id} unit = {item_attribute.quantity_unit}/>\n                })\n            )\n        }\n    }\n\n    renderCartTotal(){\n        let subtotal = 0\n        if (!!isEmpty(this.props.cart_items)){\n            subtotal = 0\n        } else {\n            let cartItems = this.cartItemsArray(this.props.cart_items)\n            console.log(cartItems)\n            subtotal = cartItems.reduce((sum, current) => {\n                return sum + (current.attributes.quantity_num * (current.attributes.item.price * .01))\n            }, 0)\n        }\n        let payment = subtotal * .14\n        let tax = (subtotal + payment) * .0725\n        let total = subtotal + payment + tax\n        let submitForm = (formValues) => {\n            console.log(this.props.currentOrderId)\n            if(!!isEmpty(this.props.cart_items)){\n                alert('Your cart is empty!')\n            } else {\n                let orderInfo = {\n                    subtotal: (subtotal * 100).toFixed(0),\n                    payment: (payment * 100).toFixed(0),\n                    tax: (tax * 100).toFixed(0),\n                    total: (total * 100).toFixed(0),\n                    store_id: this.props.storeId,\n                    shopper_id: this.props.shopperId,\n                    status: 'pending'\n                }\n                    if(!this.props.currentOrderId){\n                        this.props.preOrder(orderInfo)\n                    }else {\n                        this.props.updatePreOrder(this.props.currentOrderId, orderInfo)\n                    }              \n                this.props.history.push('/payment/checkout')\n            }\n        }\n    \n        return (\n        <div>\n            <form onSubmit={this.props.handleSubmit(submitForm)}>\n                <div>\n                    <h4>\n                        {`$${subtotal.toFixed(2)}`}\n                    </h4>\n                    <h4>\n                        {`$${payment.toFixed(2)}`}\n                    </h4>\n                    <h4>\n                        {`$${tax.toFixed(2)}`}\n                        \n                    </h4>\n                    <h4>\n                        {`$${total.toFixed(2)}`}\n                    </h4>\n                        \n                        <button className = \"btn btn-secondary\" type=\"submit\">\n                            Checkout\n                        </button>\n                </div>\n                \n                \n            </form>\n        </div>\n        )\n    }\n\n    render() {\n        return(\n            <div class = 'App-margin container'>\n                <div class =  'cart-div'>\n                    <h1>Cart</h1>\n                    {this.renderCart()}\n                    <div class = \"row cartItem total roboFont\">\n                        \n                    <div>\n                            <h4>\n                                SubTotal: \n                            </h4>\n                            <h4>\n                                Delivery: \n                            </h4>\n                            <h4>\n                                Tax:\n                            </h4>\n                            <h4>\n                                Total:\n                            </h4>\n                            <br></br>\n                        </div>\n                        {this.renderCartTotal()}\n                    </div>\n                    \n                </div>\n                \n            </div> \n        )\n    }\n}\n\nlet formWrapped = reduxForm({\n    form: 'cartForm'\n})(Cart)\n\n\nconst mapStateToProps = state => {\n    return({\n        shopperId: state.auth.currentShopper.id,\n        storeId: state.stores.selectedStore.id,\n        currentOrderId: state.order.current_order_id,\n        cart_id: state.cart.cart_id,\n        cart_items: state.cart.cart_items,\n        item_ids: state.cart.item_ids\n    })\n}\n\nexport default connect(mapStateToProps, {getCart, removeCartItem, preOrder, updatePreOrder})(formWrapped)","import React, { Component } from \"react\"\nimport {connect} from 'react-redux'\nimport {cancelOrder, clearOrderItems, clearOrder, cancelOrderModal } from '../actions'\n\nclass OrderSection extends Component {\n    componentDidMount(){\n        console.log(this.props.history)\n    }\n\n    viewOrderItems(){\n        this.props.clearOrderItems()\n        this.props.history.push(`/view_order_items/${this.props.id}`)\n    }\n\n    paymentDetails() {\n        this.props.clearOrder()\n        this.props.history.push(`/payment_details/${this.props.id}`)\n    }\n\n    render() {\n        return (\n            <div class=\"orderSection\">\n                <div class=\"orderHeader\">\n                    <h3>Order {this.props.position}</h3>\n                </div>\n\n                <div class=\"orderSection-info\">\n                    <p>\n                        Order Cost: ${(this.props.total/100).toFixed(2)}\n                    </p>\n                    <p>\n                        Name of Driver: Bob Clark\n                    </p>\n                    <p>\n                        Grocery Store: {this.props.store}\n                    </p>\n                </div>\n                <div class=\"orderButtonBox\">\n                    <button onClick = {() => this.paymentDetails()} class=\"btn btn-success orderSectionDetails\">\n                        {this.props.paymentText}\n                    </button>\n                    <button onClick={() => this.viewOrderItems()} class=\"btn btn-primary orderSectionDetails\">\n                        {this.props.orderButtonTxt}\n                    </button>\n                    {this.props.orderButtonTxt === \"Update Order\" ?\n                        <button onClick = {() => this.props.cancelOrderModal(this.props.id)} class= \"btn btn-warning orderSectionDetails\" data-toggle=\"modal\" data-target=\"#Modal\">\n                            Cancel Order\n                        </button>\n                        :\n                        null\n                    }\n                </div>\n\n            </div>\n\n\n        )\n    }\n}\n\nexport default connect(null, { cancelOrder, clearOrderItems, clearOrder, cancelOrderModal })(OrderSection)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { getActiveOrders } from '../actions'\nimport OrderSection from '../components/OrderSection'\n\nclass ActiveOrders extends React.Component {\n    \n    componentDidMount(){\n        this.props.getActiveOrders(this.props.shopperId)\n    }\n\n    renderOrders = () => {\n        return this.props.activeOrders.map((order, id) => {\n            let attributes = order.attributes\n            return (\n                <OrderSection \n                    history = {this.props.history}\n                    position = {id + 1} \n                    id = {order.id}\n                    paymentText = \"Update Payment\"\n                    orderButtonTxt = \"Update Order\"\n                    store = {this.props.stores[attributes.store_id - 1].attributes.name}\n                    total = {attributes.total}\n                />\n            )   \n        })\n    }\n\n    render(){\n        return(\n            <div className = \"App-margin container\">\n                <h1>Current Orders</h1>\n                <div>\n                    {this.renderOrders()}\n                </div>\n            </div>\n        )\n    }\n}\n\nlet mapStateToProps = state => {\n    return ({\n        shopperId: state.auth.currentShopper.id,\n        stores: state.stores.storesList,\n        activeOrders: state.order.active_orders\n    })\n}\n\nexport default connect(mapStateToProps, {getActiveOrders})(ActiveOrders)","import React from 'react'\nimport {connect} from 'react-redux'\nimport { Field, reduxForm } from 'redux-form'\nimport { isEmpty } from 'lodash'\nimport {editShopper, editShopperProfile} from '../actions'\n\nclass EditShopper extends React.Component {\n    componentDidMount(){\n        console.log(this.props.match.params)\n    }\n\n    renderInput = ({input, meta, label}) => {\n        return (\n            <div>\n                <label> {label}</label>\n                <input {...input} /> \n                <div>{meta.error} </div>\n            </div>\n        )\n    }\n\n    toProfile = () => {\n        this.props.history.replace('/profile')\n    }\n\n    submitForm = (formValues) => {\n        if (!isEmpty(this.props.currentShopper) ) {\n            let id = this.props.shopperId\n            let infoId = this.props.infoId\n            console.log(formValues)\n            if(!!formValues.image){\n                this.props.editShopper({ shopper: {image: formValues.image} }, id)\n            } else if (!!formValues.email) {          \n                this.props.editShopper({ shopper: { email: formValues.email} }, id)\n            } else if (!!formValues.phone) {\n                this.props.editShopperProfile({ shopper_info: {phone: formValues.phone} }, infoId)\n            } else if (!!formValues.address) {\n                this.props.editShopperProfile({ shopper_info: {address: formValues.address, city: formValues.city, state: formValues.state, zip_code: formValues.zip_code} }, infoId)\n            }\n            this.toProfile()\n        }\n    }\n\n    renderForm(){\n        let params = this.props.match.params.section\n        if(!isEmpty(this.props.currentShopper) ){\n            if(params === \"address\"){\n                return (\n                    <div>\n                        <Field name = \"address\" component= {this.renderInput} label = \"Address\"></Field>\n                        <Field name=\"city\" component={this.renderInput} label=\"City\"></Field>\n                        <Field name=\"state\" component={this.renderInput} label=\"State\"></Field>\n                        <Field name=\"zip_code\" component={this.renderInput} label=\"Zip Code\"></Field>\n                    </div>\n                )\n    \n            } else if (params === \"phone\"){\n                return (\n                    <Field name=\"phone\" component={this.renderInput} label=\"Phone Number\"></Field>\n                )\n            } else if (params === \"email\"){\n                return (\n                    <Field name=\"email\" component={this.renderInput} label=\"Email\"></Field>\n                )\n            } else if (params === \"image\"){\n                return (                \n                    <Field name=\"image\" component={this.renderInput} label=\"Image URL\"></Field>\n                )\n            }\n\n        }\n    }\n\n    render(){\n        return(\n            <div>\n                <h1>Edit Profile</h1>\n                <form onSubmit = {this.props.handleSubmit(this.submitForm)}>\n                    {this.renderForm()}\n                    <button type = \"submit\">Submit</button>\n                </form>\n\n                <div>\n                    <button onClick = {this.toProfile}>\n                        Back To Profile\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}\n\nlet validate = (formValues) => {\n    let error = {}\n    if (!formValues.address) {\n        error.address = \"Please enter an address!\"\n    }\n\n    if (!formValues.city) {\n        error.city = \"Please enter a city!\"\n    }\n\n    if (!formValues.state) {\n        error.state = \"Please enter a state!\"\n    }\n\n    if (!formValues.zip_code) {\n        error.zip_code = \"Please enter a zip_code!\"\n    }\n    \n    if (!formValues.phone) {\n        error.phone = \"Please enter a phone number!\"\n    }\n\n    if (!formValues.email) {\n        error.email = \"Please enter a email!\"\n    }\n\n    if (!formValues.image) {\n        error.image = \"Please enter an image url!\"\n    }\n\n    return error\n}\n\n\nconst formWrapped = reduxForm({\n    form: 'editShopperForm',\n    validate: validate\n})(EditShopper)\n\nconst mapStateToProps = state => {\n    return ({\n        currentShopper: state.auth.currentShopper,\n        shopperId: state.auth.currentShopper.id,\n        infoId: state.auth.currentShopper.shopper_info.id\n    })\n}\n\nexport default connect(mapStateToProps, {editShopper, editShopperProfile})(formWrapped)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { getItem } from '../actions'\n\nclass ItemDetails extends React.Component{\n    componentDidMount(){\n        this.props.getItem(this.props.match.params.item_id)\n    }\n\n    renderDetail(){\n        if(!!this.props.item){\n            return (\n                <div>\n                    <img src={this.props.item.data.attributes.image}></img>\n                    <h3>{this.props.item.data.attributes.name}</h3>\n                    <h3>${(this.props.item.data.attributes.price / 100).toFixed(2)} per {this.props.item.data.attributes.quantity_unit}</h3>\n                </div>\n            )\n        }\n    }\n\n    render(){\n        return(\n            <div class = \"itemDetails\">\n                <h1>Item Details</h1>\n                {this.renderDetail()}\n            </div>\n        )\n    }\n}\n\nlet mapStateToProps = state => {\n    return({\n        item: state.items.selectedItem\n    })\n}\n\nexport default connect(mapStateToProps, {getItem})(ItemDetails)\n","import axios from 'axios';\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\nimport {storeCoords} from '../actions'\nimport React from 'react'\nimport {connect} from 'react-redux'\n\n\nclass MapContainer extends React.Component {\n    componentDidMount(){\n        console.log(this.props.store_coords, \"COORDINATES\")\n        // Map.setCenter(this.props.store_coords)\n    }\n\n    mapStyles = {\n        width: '100%',\n        position: 'absolute', \n        height: '75%'\n    };\n\n    onHover = () => {\n\n    }\n\n    // address\n    // 5600%Pacific%Grove%Way%Union\n    render(){\n        return (\n            <div class = \"mapDiv\">\n            <Map\n                google={this.props.google}\n                zoom={13}\n                style={this.mapStyles}\n                initialCenter={\n                    this.props.store_coords\n                }\n                > \n                <Marker\n                    name={'Your position'}\n                    position={this.props.user_coords}\n                />\n\n                <Marker\n                    name={`${this.props.store_name}`}\n                    position={this.props.store_coords}\n                />\n            </Map>\n            </div>\n        );\n    }\n}\n\nconst LoadingContainer = (props) => (\n    <div>Loading</div>\n)\n\nconst mapStateToProps = (state) =>{\n    return({\n        store_coords: state.stores.store_coords,\n        user_coords: state.stores.user_coords,\n        store_name: state.stores.selectedStore.attributes.name\n        // start_lat: state.stores.store_coords.lat + state.stores.user_coords.lat,\n        // start_lng: state.stores.store_coords.lng + state.stores.user_coords.lng\n        \n    })\n}\n\nexport default connect(mapStateToProps, {storeCoords})(GoogleApiWrapper({\n    apiKey: \"AIzaSyD-d4NIENxdIYOCE7gIRwvzTIZGRLobMdg\",\n    LoadingContainer: LoadingContainer\n})(MapContainer))","import React from 'react'\nimport {connect} from 'react-redux'\nimport MapContainer from '../components/MapContainer'\nimport {Link} from 'react-router-dom'\nimport {storeCoords} from '../actions'\nimport axios from 'axios'\n\nclass MapPage extends React.Component {\n    \n\n    // getAddress = async () => {\n    //     let location = await axios.post(`https://maps.googleapis.com/maps/api/geocode/json?address=${this.props.store_params}&key=AIzaSyD-d4NIENxdIYOCE7gIRwvzTIZGRLobMdg`)\n    //     this.props.storeCoords(location.data.results[0].geometry.location)\n    // }\n\n    toOrderPage = () => {\n        this.props.history.push('/orderpage')\n    }\n\n    render(){\n        return(\n            \n            <React.Fragment>\n                <div className=\"row\">\n                    <div className = \"col-2 mapBackButton\">\n                        <button class=\"btn btn-success\" type=\"button\">\n                            <Link class=\"text-reset\" to='/orderpage'>\n                                <svg class=\"svg-icon \" width=\"1.5em\" height=\"1.5em\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                                    <path d=\"M11.739,13.962c-0.087,0.086-0.199,0.131-0.312,0.131c-0.112,0-0.226-0.045-0.312-0.131l-3.738-3.736c-0.173-0.173-0.173-0.454,0-0.626l3.559-3.562c0.173-0.175,0.454-0.173,0.626,0c0.173,0.172,0.173,0.451,0,0.624l-3.248,3.25l3.425,3.426C11.911,13.511,11.911,13.789,11.739,13.962 M18.406,10c0,4.644-3.763,8.406-8.406,8.406S1.594,14.644,1.594,10S5.356,1.594,10,1.594S18.406,5.356,18.406,10 M17.521,10c0-4.148-3.373-7.521-7.521-7.521c-4.148,0-7.521,3.374-7.521,7.521c0,4.148,3.374,7.521,7.521,7.521C14.147,17.521,17.521,14.148,17.521,10\"></path>\n                                </svg>\n                                Back to Order\n                            </Link>\n                        </button>\n                    </div>\n                </div>\n                \n                <MapContainer></MapContainer>\n               \n            </React.Fragment>\n        )\n    }\n}\n\n// const mapStateToProps = (state) => {\n//     return({\n//         store_params: [\n//             state.stores.selectedStore.attributes.address.split(' ').join('+'),\n//             state.stores.selectedStore.attributes.city.split(' ').join('+'),\n//             state.stores.selectedStore.attributes.state\n//         ].join('+')\n//     })\n// }\n\nexport default MapPage","import React from 'react'\nimport {connect} from 'react-redux'\nimport axios from 'axios'\nimport {selectStore, getCategories, getItems, removeCartItem, dropCart, startCart, storeCoords} from '../actions'\n\nclass StoreDropdown extends React.Component {\n\n    componentDidMount(){\n        this.getAddress()\n    }\n\n    componentDidUpdate(prevState){\n        console.log(prevState, this.props)\n        if(prevState.selectedStore.id !== this.props.selectedStore.id){\n            this.props.getItems(this.props.selectedStore.attributes.id)\n            this.props.dropCart(this.props.cartId)\n            this.props.startCart({ shopper_id: this.props.shopperId })\n            this.props.getCategories(this.props.selectedStore.attributes.id - 1)\n            this.getAddress()\n        }\n    }\n\n    getAddress = async () => {\n        let location = await axios.post(`https://maps.googleapis.com/maps/api/geocode/json?address=${this.props.store_params}&key=AIzaSyD-d4NIENxdIYOCE7gIRwvzTIZGRLobMdg`)\n        console.log(location)\n        this.props.storeCoords(location.data.results[0].geometry.location)\n    }\n\n    \n    storeOptions = () => {\n        return this.props.stores.map((store, id)=> {\n            return (\n                <button key = {id} class=\"dropdown-item\" id = {store.attributes.id} value={store.attributes.name}>{store.attributes.name}</button>\n            )\n        })\n    } \n\n    selectStore = (e) => {\n        let store = this.props.stores.find(store => store.id == e.target.id)\n        this.props.selectStore(store)\n        // window.history.pushState({}, '', '/orderpage')\n        // window.history.go()\n    }\n\n    render() {\n        return (\n            \n            <div class = \"mapSearchComponent\">\n                <div class=\"dropdown\">\n                    <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        {this.props.selectedStore.attributes.name}\n                    </button>\n                    <div onClick = {(e) => this.selectStore(e)} class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                        {this.storeOptions()}\n                    </div>\n                </div>\n                <button class = \"btn btn-primary\" onClick={() => this.props.history.push('/map_page')}>See Location</button>     \n            </div>\n        )\n    }\n}\n\nlet mapStateToProps = state => {\n    return ({\n        shopperId: state.auth.currentShopper.id,\n        stores: state.stores.storesList,\n        selectedStore: state.stores.selectedStore,\n        cartItems: state.cart.cart_items,\n        cartId: state.cart.cart_id,\n        store_params: [\n            state.stores.selectedStore.attributes.address.street.split(' ').join('+'),\n            state.stores.selectedStore.attributes.address.city.split(' ').join('+'),\n            state.stores.selectedStore.attributes.address.state\n        ].join('+')\n    })\n}\n\nexport default connect(mapStateToProps, {selectStore, getCategories, getItems, removeCartItem, dropCart, startCart, storeCoords})(StoreDropdown)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { reduxForm, Field } from 'redux-form'\n\n\nclass Searchbar extends React.Component {\n\n    renderInput = ({ input, meta, label }) => {\n    console.log(input)\n        return (\n            <div class=\"form-group row\">\n                <label class=\"col-sm-2 col-form-label\" for = \"input\">{label}</label>\n                <div class = \"col-smn-9\">\n                    <input type = \"text\" class = \"form-control\" id = \"input\" {...input} />\n                </div>\n                {/* <div> {meta.error}</div> */}\n                <button style = {{marginLeft: \".5em\"}}className = \"btn btn-primary\" type=\"submit\" id=\"button-addon1\">Search Item</button>\n            </div>\n        )\n    }\n\n    searchSubmit = (formValues) => {\n        this.props.history.push(`/search/${formValues.searchItem}`)\n    }\n\n    render(){\n        return (\n            <div>\n                <form onSubmit = {this.props.handleSubmit(this.searchSubmit)}>\n                    <Field name = \"searchItem\" component = {this.renderInput} label = \"Search\"/>\n                </form>\n            </div>\n        )\n    }\n}\n\nlet validate = (formValues) => {\n    let error = {}\n\n    if(!formValues.searchItem){\n        error.searchItem = \"Please enter an Item\"\n    }\n\n    return error\n}\n\nlet formWrapped = reduxForm({\n    form: 'searchForm',\n    validate: validate\n})(Searchbar)\n\nexport default connect(null)(formWrapped)","import React from 'react'\n\nconst Category = props => {\n\n    return (\n        <div class = \"col-sm-auto\">\n            <a class = \"category-btn menu-button roboFont\" href = {`/products/${props.name}`} data-category = {props.name}>\n                {props.title}\n            </a>\n        </div>\n    )\n}\nexport default Category","import React from 'react'\nimport CategoryLink from '../components/CategoryLink'\n\nconst FoodCategories = props => {\n    return (\n        <div class=\"row justify-content-center foodCategoryNav\" >\n            {props.categories.map(category => {\n                return <CategoryLink history = {props.history} name = {category.name} title = {category.title} />\n            })}\n        </div>\n    )\n}\n\nexport default FoodCategories","import React, {useState, useEffect} from 'react'\nimport ItemPic from './ItemPic'\nimport { connect } from 'react-redux'\nimport { addCartItem, removeCartItem } from '../actions'\n\nconst ItemCard = (props) => {\n    let[ref] = useState(React.createRef())\n    \n    useEffect(() => {\n        if (!!props.cart_item_ids.find(item => item[0] === props.item_id)){\n            buttonToggle(\"add\")\n        } else {\n            buttonToggle(\"remove\")\n        }\n    })\n\n    let buttonToggle = (toggle) => {\n        let button = ref.current.children[1].children[2]\n        let mouseOverFxn = (e)=> {\n            button.children[0].src = `${process.env.PUBLIC_URL}/minus.svg`\n            button.classList.remove('btn-success')\n            button.classList.add('btn-danger')\n        }\n        let mouseOutFxn = (e) => {\n            button.children[0].src = `${process.env.PUBLIC_URL}/check.svg`\n            button.classList.remove('btn-danger')\n            button.classList.add('btn-success')\n        }\n        if(toggle === \"add\"){\n            button.children[0].src = `${process.env.PUBLIC_URL}/check.svg`\n            button.classList.add('btn-success')\n            button.addEventListener(\"mouseover\", mouseOverFxn, true)\n            button.addEventListener(\"mouseout\", mouseOutFxn, true)\n            button.addEventListener('click', () => {\n                button.removeEventListener(\"mouseover\", mouseOverFxn, true)\n            })\n            button.addEventListener('click', () => {\n                button.removeEventListener(\"mouseout\", mouseOutFxn, true)\n            })\n        } else if(toggle === \"remove\"){\n            button.children[0].src = `${process.env.PUBLIC_URL}/plus.svg`\n            button.classList.remove('btn-danger')\n            button.classList.add('btn-primary')\n        }\n    }\n\n    let cartItemToggle = (e) => {\n        e.preventDefault()\n        let cartItem = props.cart_item_ids.find(item => item[0] === props.item_id)\n        if (!cartItem){\n            buttonToggle(\"add\")\n            let cartItemInfo = {\n                cart_id: props.cart_id,\n                item_id: props.item_id,\n                quantity_num: 1\n            }\n            props.addCartItem(cartItemInfo)\n        } else {\n            console.log(cartItem, props.cart_item_ids)\n            buttonToggle(\"remove\")\n            props.removeCartItem(cartItem[1], props.item_id)\n        }\n    }\n\n    return (\n        <div class=\"col-lg-2 col-md-4 col-sm-6 col-xs-12\">\n            <div class=\"card\" ref = {ref}>\n                <div >\n                    {/* <ModalButton toggle= {()=> console.log('hello')} data-toggle=\"modal\" data-target=\"#exampleModal\"> */}\n                    <ItemPic image = {props.image} item_id = {props.item_id} />\n                </div>\n                \n                <div class=\"card-body-2\">\n                    <p class=\"card-title\" style = {{ fontSize: \"12px\"}}>{props.name}</p>\n                    <p style={{fontSize: \"10px\"}}> ${props.price}/{props.unit}</p>\n                    <a class= \"btn btn-primary\" onClick={cartItemToggle}>\n                        <img class = \"card-button-img\" alt=\"Image\" />\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nlet mapStateToProps = state => {\n    return({\n        cart_item_ids: state.cart.item_ids,\n        cart_id: state.cart.cart_id,\n        cart_items: state.cart.cart_items\n    })\n}\n\n\nexport default connect(mapStateToProps, {addCartItem, removeCartItem })(ItemCard)","import React from 'react'\nimport ItemCard from '../components/ItemCard'\n\nconst FoodList = props => {\n    let itemCards = props.items.map((item, id) => {\n        return <ItemCard key = {id} item_id = {parseInt(item.id)} image = {item.attributes.image} price = {(item.attributes.price * .01).toFixed(2)} name = {item.attributes.name} unit = {item.attributes.quantity_unit}/>\n    })\n\n    return (\n        <div class= \"container\">\n            <br></br>\n                <div class = \"row justify-content-center\">\n                    {itemCards}\n                </div>\n        </div>\n    )\n}\n\nexport default FoodList","import React, { Component } from 'react';\nimport FoodList from '../containers/FoodList'\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; \nimport { Carousel } from 'react-responsive-carousel';\n\nclass FoodListCarousel extends Component {\n\n    splitItems = (start, end) => {\n        let currentItems = this.props.items.slice(start, end)\n        return <FoodList items = {currentItems}/>\n    }\n\n    render(){\n\n        const arrowStyles : CSSProperties = {\n            position: 'absolute',\n            zIndex: 2,\n            top: 'calc(50% - 15px)',\n            width: 30,\n            height: 30,\n            outline: 0,\n            background:'transparent',\n            border: 'none',\n            color: 'transparent', \n            cursor: 'pointer',\n        };\n\n        return (\n            <div>\n                <Carousel\n                    \n                    dyanamicHeight= {true}\n                    statusFormatter = {(current, total)=> \n                        `${current} / ${total}`\n                    }\n                    renderArrowPrev={(onClickHandler, hasPrev, label) =>\n                        hasPrev && (\n                            <button type=\"button\" onClick={onClickHandler} title={label} style={{ ...arrowStyles, left: 15 }}>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M16.67 0l2.83 2.829-9.339 9.175 9.339 9.167-2.83 2.829-12.17-11.996z\"/></svg>\n                            </button>\n                        )\n                    }\n\n                    renderArrowNext={(onClickHandler, hasNext, label) =>\n                        hasNext && (\n                            <button type=\"button\" onClick={onClickHandler} title={label} style={{ ...arrowStyles, right: 15 }}>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M5 3l3.057-3 11.943 12-11.943 12-3.057-3 9-9z\"/></svg>\n                            </button>\n                        )\n                    }\n                >\n                    <div style = {{backgroundColor: \"white\"}}>\n                    {this.splitItems(0, 6)}\n                        </div> \n                    <div>\n                    {this.splitItems(6, 12)}\n                        </div> \n                </Carousel>\n            </div>\n\n        )\n    }    \n}\n\nexport default FoodListCarousel\n","import React, { Component} from 'react'\nimport { connect } from 'react-redux'\nimport { getItems, getCategories, selectStore, dropCart, startCart, getCart, getActiveOrders, userCoords, getItem} from '../actions'\nimport StoreDropdown from '../components/StoreDropdown'\nimport Searchbar from '../components/Searchbar'\nimport FoodCategoryNav from '../containers/FoodCategoryNav'\nimport FoodListCarousel from '../containers/FoodListCarousel'\nimport {Link} from 'react-router-dom'\nclass OrderPage extends Component {\n\n    componentDidMount(){\n        console.log(this.props.cartId, this.props.shopperId)\n        navigator.geolocation.getCurrentPosition(this.success.bind(this), this.error)\n        this.props.getItems(this.props.selectedStore.attributes.id)\n        this.props.getActiveOrders(this.props.shopperId)\n        this.props.getCategories(this.props.selectedStore.attributes.id - 1)\n        if (!!this.props.shopperId && !this.props.cartId) {\n            this.props.startCart({ shopper_id: this.props.shopperId })\n        }\n    }\n\n    success(pos){\n        console.log(this.props)\n        if(!!pos){\n            var crd = pos.coords\n            console.log(\"YOU ARE CURRENTLY HERE -->\", { lat: crd.latitude, lng: crd.longitude })\n            this.props.userCoords({lat: crd.latitude, lng: crd.longitude})\n        }\n    }\n    \n    error(err){\n        console.warn(`ERROR: ${err.code}: ${err.message}`)\n    }\n\n    componentDidUpdate(prevState){\n        if (prevState.cartId !== this.props.cartId){\n            this.props.getCart(this.props.cartId)\n        }\n    }\n\n    render() {\n        return (\n            <div class = \"App-margin\">\n                <br></br><br></br>\n                <div class = \"row\">\n                    <div class=\"col-sm-4 storeDropdown\">\n                        <StoreDropdown history = {this.props.history}/>\n                    </div>\n                    \n                    <div class=\"col-sm-4 storeName\">\n                        <h1>{this.props.selectedStore.attributes.name}</h1>\n                        <img style = {{height: '70%', width: '25%', borderRadius: '10px'}} src = {`${this.props.selectedStore.attributes.logo}`}></img>\n                    </div>\n                    <div class=\"col-sm-4 searchBar\">\n                        <Searchbar history = {this.props.history}/>\n                    </div>\n                </div>\n                <br></br>\n                <div class = \"row justify-content-center\">\n                    <FoodCategoryNav history={this.props.history} categories= {this.props.categories}/>\n                </div>\n                <br></br><br></br>\n                \n                {\n                    this.props.categories.map(category => {\n                        let items = this.props.items.filter(item => item.attributes.category === category.name)\n                        return (\n                            <div class = \"food-items-section\">\n                                <h1>{category.title}</h1>\n                                <FoodListCarousel items = {items}/> \n                            </div>\n                        )   \n                    })\n                }\n            </div>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return ({\n        activeOrders: state.order.active_orders,\n        items: state.items.itemsList.data,\n        categories: state.categories,\n        stores: state.stores.storesList,\n        selectedStore: state.stores.selectedStore,\n        shopperId: state.auth.currentShopper.id,\n        cartId: state.cart.cart_id,\n        cartItems: state.cart.cart_items,\n        item: state.items.selectedItem,\n        item_ids: state.cart.item_ids\n    })\n}\n\nexport default connect(mapStateToProps, {getItems, getItem, getCategories, selectStore, dropCart, startCart, getCart, getActiveOrders, userCoords})(OrderPage)\n","import React, { Component } from 'react'\nimport OrderSection from '../components/OrderSection'\nimport { connect } from 'react-redux'\nimport { getCompletedOrders } from '../actions'\n\n\nexport class OrderHistory extends Component {\n    componentDidMount(){\n        this.props.getCompletedOrders(this.props.shopperId)\n    }\n\n    render() {\n        // this.props.completedOrders.map\n        return (\n            <div class = \"App-margin container\">\n                <h1>Order History</h1>\n\n                {this.props.completedOrders.map((order,id) => {\n                    let attributes = order.attributes\n                    return (\n                        <OrderSection \n                            history = {this.props.history}\n                            position = {id + 1} \n                            id = {order.id}\n                            paymentText = \"Payment Info\"\n                            orderButtonTxt = \"View Order\"\n                            store = {this.props.stores[attributes.store_id - 1].attributes.name}\n                            total = {attributes.total}\n                        />\n                    )   \n                })}                \n            </div>\n        )\n    }\n}\n\nlet mapStateToProps = state => {\n    return({\n        shopperId: state.auth.currentShopper.id,\n        stores: state.stores.storesList,\n        completedOrders: state.order.completed_orders\n    })\n}\n\nexport default connect(mapStateToProps, {getCompletedOrders})(OrderHistory)\n","import React from 'react'\nimport { PayPalButton } from 'react-paypal-button-v2'\n\nclass PaypalButton extends React.Component {\n    render(){\n        return(\n            <PayPalButton\n                amount = {`${this.props.amount}`}\n                onSuccess = {(details, data) => {\n                    window.history.pushState({}, '', '/payment/success')\n                    window.history.go()\n                }}\n                catchError = {(err) => {\n                    window.history.pushState({}, '', '/payment/failure')\n                    window.history.go()\n                }}\n                options = {{\n                    clientId: \"A21AALEwYbmiEE-VVyHvCmQwmNxAvBYMrf68I1KVDgAN754OEbhEdW2i9DrAWZmU0vTFPFk6wifJhLT0IeouxD3tTBYZ9gnGg\"\n                }}\n                \n            ></PayPalButton>\n        )\n    }\n}\n\nexport default PaypalButton","import React from 'react' \nimport { Link } from 'react-router-dom'\n\nclass PaymentOption extends React.Component{\n    constructor(props){\n        super()\n        this.state = {\n            selectType: props.selectType,\n            showBottomEdit: false\n        }\n    }\n\n    componentDidMount(){\n        if(!this.props.selectType){\n            this.setState({\n                showBottomEdit: true\n            })\n        }\n    }\n\n    showBottomEdit = (showState)  => {\n        if(!showState){\n            this.setState({\n                showBottomEdit: true\n            })\n        } else {\n            this.setState({\n                showBottomEdit: false,\n                \n            })\n        }\n    }\n\n    renderSelect = (state) => {\n        if(!!state){\n            return (\n                <Link onClick = {() => this.showBottomEdit(this.state.showBottomEdit)}>\n                    &#10006;\n                </Link>\n            )\n        } else {\n            return (\n                <Link onClick = {() => this.showBottomEdit(this.state.showBottomEdit)}>\n                    {this.state.selectType}\n                </Link>\n            )\n        } \n    }\n\n    render(){\n        return(\n            <div className = \"payment-option\">\n                    <div className = \"row payment-option-line\">\n                        <div>\n                            <h3>\n                                {this.props.title}\n                            </h3>\n                        </div>\n                        <div>\n                            {this.state.selectType ? \n                                this.renderSelect(this.state.showBottomEdit)\n                                :\n                                <div></div>\n                            }\n                            \n                        </div>\n                    </div>\n                    <div className = \"payment-divider\">\n                    </div>\n                    <div className = \"row payment-option-line\">\n                        \n                        {this.state.showBottomEdit ? \n                            this.props.bottomOption\n                            :\n                            <div className = \"bottomContent\">\n                                {this.props.bottomContent}\n                            </div>\n                        }\n\n                    </div>\n            </div>\n        )\n    }\n}\n\nexport default PaymentOption ","import React from 'react'\n\nclass AddRowButton extends React.Component {\n    render(){\n        return(\n            <div className = \"button-div\">\n                <button className = \"btn btn-success\" onClick = {() => this.props.numberModal()} style = {{width: \"100%\"}} data-toggle=\"modal\" data-target=\"#Modal\">\n                    <div className = \"checkout-add-div\">\n                        <span> \n                            <img className = \"checkout-add-img\" src = {`${process.env.PUBLIC_URL}/plusMark.svg`} />\n                            {this.props.text}\n                            </span>\n                        </div>\n                </button> \n            </div>\n        )\n    }\n}\n\nexport default AddRowButton","import React from 'react'\n\nclass CheckoutRowButton extends React.Component {\n\n    render(){\n        let src \n        let btnClass\n        if(this.props.checked === this.props.value){\n            src = `${process.env.PUBLIC_URL}/checkMark.svg`\n            btnClass = \"btn btn-success\"\n\n        } else {\n            src = `${process.env.PUBLIC_URL}/circle.svg`\n            btnClass = \"btn btn-light\"\n        }  \n\n        if(this.props.value === 'stripe'){\n            src = `${process.env.PUBLIC_URL}/stripeIcon.png`\n            btnClass = \"btn btn-primary\"\n        }\n\n        if(this.props.value === 'paypal'){\n            src = `${process.env.PUBLIC_URL}/paypalIcon.svg.png`\n            btnClass = \"btn btn-warning\"\n        }\n\n        if(this.props.value === 'test'){\n            btnClass = \"btn btn-success\"\n        }\n\n        return(\n            <div style = {{borderRadius: \"3px\", webkitBoxShadow: \"0px 0 5px rgba(99, 99, 99, 0.842)\"}} className = \"button-div\">\n                <button className = {btnClass} onClick = {(e) => this.props.selectOption(e)} style = {{width: \"100%\"}} form = \"contactForm\" value = {this.props.value}>\n                    <div className = \"checkout-option-div\">\n                        {this.props.value === 'test' ?  \n                            <h4>Test Checkout</h4>\n                            :                            \n                            <img className = \"checkout-option-img\" src = {src} />\n                        }\n                        </div>\n                </button> \n            </div>\n        )\n    }\n}\n\nexport default CheckoutRowButton","import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport { connect } from 'react-redux'\nimport { addShopperAddress, updateOrderAddress, addressModal} from '../../actions'\nimport AddRowButton from '../buttons/AddRowButton'\nimport CheckoutRowButton from '../buttons/CheckoutRowButton'\n\nclass Address extends React.Component {\n    constructor(){\n        super()\n        this.state = {\n            checked: null\n        }\n    }\n    componentDidMount(){\n        console.log(this.props.addresses)\n    }\n    \n    renderAddresses = () => {\n        if (!this.props.addresses) {\n            return(\n                <div></div>\n            )\n        } else {\n\n            return this.props.addresses.map((address) => {\n                let joinedAddress = `${address.street}, ${address.city}, ${address.state} ${address.zip_code}`\n                return(\n                    <CheckoutRowButton checked = {this.state.checked} value = {joinedAddress} form = \"contactForm\" text = {joinedAddress} selectOption = {this.selectOption} imgClass = {'checkout-img-address'}/>\n\n                )\n            })\n        }\n        \n    }\n\n    // plus sign \n    //<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" style=\"background-color:;border-color:#038767;color:#038767;min-height:14px;min-width:14px;width:14px;height:14px\" class=\"pa1 mr3 ba br-100 bg-transparent b--dark-gray\" data-test=\"OptionListButton-icon\"><path d=\"M20 11H13V4C13 3.45 12.55 3 12 3C11.45 3 11 3.45 11 4V11H4C3.45 11 3 11.45 3 12C3 12.55 3.45 13 4 13H11V20C11 20.55 11.45 21 12 21C12.55 21 13 20.55 13 20V13H20C20.55 13 21 12.55 21 12C21 11.45 20.55 11 20 11Z\" fill=\"currentColor\"></path></svg>\n\n    //checkmark sign \n    //<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"pa1 mr3 ba br-100 bg-transparent b--dark-gray\" data-test=\"OptionListButton-icon\" style=\"background-color: rgb(3, 135, 103); border-color: rgb(3, 135, 103); color: rgb(255, 255, 255); min-height: 14px; min-width: 14px; width: 14px; height: 14px;\"><path d=\"M21.895 4.93001C21.505 4.54001 20.875 4.54001 20.485 4.93001L8.465 16.95L3.515 12C3.125 11.61 2.495 11.61 2.105 12C1.715 12.39 1.715 13.02 2.105 13.41L7.765 19.07C8.155 19.46 8.785 19.46 9.175 19.07L21.895 6.35001C22.285 5.96001 22.285 5.32001 21.895 4.93001Z\" fill=\"currentColor\"></path></svg>\n\n    selectOption = (e) => {\n\n        this.setState({\n            checked: e.currentTarget.value\n        })\n        this.props.updateOrderAddress(e.currentTarget.value)\n    }\n\n    addAddress = async (e) => {\n        e.preventDefault()\n        let form = {\n            'street': e.target.children[0].value,\n            'city': e.target.children[1].value,\n            'state': e.target.children[2].value,\n            'zip_code': e.target.children[3].value,\n            'addressable_type': 'Shopper',\n            'addressable_id': this.props.shopperId\n        }\n\n        let joinedAddress = `${form.street}, ${form.city}, ${form.state} ${form.zip_code}`\n        this.props.updateOrderAddress(joinedAddress)\n        this.props.addShopperAddress(form)\n    }\n\n    render() {\n        return (\n            <div className = \"ui container\">\n                <div className = \"button-options\">\n                    {this.renderAddresses()}\n                \n                    <AddRowButton numberModal = {() => this.props.addressModal()} text = \"Add an Address\" />\n                \n                </div>\n            </div>\n            \n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return ({\n        shopperId: state.auth.currentShopper.id\n    })\n}\n\nexport default connect(mapStateToProps, { addShopperAddress, updateOrderAddress, addressModal })(Address)","import React from 'react' \nimport { connect } from 'react-redux'\nimport {selectOrderPayment} from '../../actions'\nimport CheckoutRowButton from '../buttons/CheckoutRowButton'\n\nclass CheckoutPayment extends React.Component {\n\n\n    render(){\n        return(\n            <div className = \"ui container\">\n                <h4>\n                    Select a Payment Option (Paypal and Stripe methods are links. Please use test to create orders.):\n                </h4>\n                <div className = \"button-options-row\">\n                    <CheckoutRowButton selectOption = {this.props.selectOrderPayment} value = \"stripe\"/>\n                    <CheckoutRowButton selectOption = {this.props.selectOrderPayment} value = \"paypal\"/>\n                    <CheckoutRowButton selectOption = {this.props.selectOrderPayment} value = \"test\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect(null, {selectOrderPayment})(CheckoutPayment)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { addShopperNumber, updateOrderNumber, numberModal } from '../../actions'\nimport CheckoutRowButton from '../buttons/CheckoutRowButton'\nimport AddRowButton from '../buttons/AddRowButton'\n\nclass Contact extends React.Component {\n    constructor(){\n        super()\n        this.state = {\n            checked: null\n        }\n    }\n\n    componentDidMount(){\n        console.log(this.props.numbers)\n    }\n    \n    renderContacts = () => {\n\n        if (!this.props.numbers) {\n            return(\n                <div></div>\n            )\n        } else {\n\n            return this.props.numbers.map((contact) => {\n                return(\n                    <CheckoutRowButton imgClass = {'checkout-img-contact'} checked = {this.state.checked} value = {contact} form = \"contactForm\" text = {contact} selectOption = {this.selectOption} />\n                )\n            })\n        }\n        \n    }\n\n    // plus sign \n    //<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" style=\"background-color:;border-color:#038767;color:#038767;min-height:14px;min-width:14px;width:14px;height:14px\" class=\"pa1 mr3 ba br-100 bg-transparent b--dark-gray\" data-test=\"OptionListButton-icon\"><path d=\"M20 11H13V4C13 3.45 12.55 3 12 3C11.45 3 11 3.45 11 4V11H4C3.45 11 3 11.45 3 12C3 12.55 3.45 13 4 13H11V20C11 20.55 11.45 21 12 21C12.55 21 13 20.55 13 20V13H20C20.55 13 21 12.55 21 12C21 11.45 20.55 11 20 11Z\" fill=\"currentColor\"></path></svg>\n\n    //checkmark sign \n    //<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"currentColor\" class=\"pa1 mr3 ba br-100 bg-transparent b--dark-gray\" data-test=\"OptionListButton-icon\" style=\"background-color: rgb(3, 135, 103); border-color: rgb(3, 135, 103); color: rgb(255, 255, 255); min-height: 14px; min-width: 14px; width: 14px; height: 14px;\"><path d=\"M21.895 4.93001C21.505 4.54001 20.875 4.54001 20.485 4.93001L8.465 16.95L3.515 12C3.125 11.61 2.495 11.61 2.105 12C1.715 12.39 1.715 13.02 2.105 13.41L7.765 19.07C8.155 19.46 8.785 19.46 9.175 19.07L21.895 6.35001C22.285 5.96001 22.285 5.32001 21.895 4.93001Z\" fill=\"currentColor\"></path></svg>\n\n    selectOption = (e) => {\n        this.setState({\n            checked: e.currentTarget.value\n        })\n        this.props.updateOrderNumber(e.currentTarget.value)\n    }\n\n    addContact = (e) => {\n        e.preventDefault()\n        let number = e.target.children[0].value\n        let areaCode = number.slice(0, 3)\n        let number1 = number.slice(3,6)\n        let number2 = number.slice(6,10)\n        let form = {\n            'number': `(${areaCode})${number1}-${number2}`,\n            'phoneable_type': 'Shopper',\n            'phoneable_id': this.props.shopperId\n        }\n        this.props.updateOrderNumber(form.number)\n        this.props.addShopperNumber(form)\n    }\n\n    render() {\n        return (\n            <div className = \"ui container\">\n                <div className = \"button-options\">\n                    {this.renderContacts()}\n                        \n                        <AddRowButton numberModal = {() => this.props.numberModal()} text = \"Add a Number\" />\n                        \n\n                </div>\n            </div>\n            \n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return ({\n        shopperId: state.auth.currentShopper.id\n    })\n}\n\nexport default connect(mapStateToProps, { addShopperNumber, updateOrderNumber, numberModal})(Contact)\n","import React from 'react'\nimport { Field, reduxForm, SubmissionError } from 'redux-form'\nimport { connect } from 'react-redux'\nimport {updateDeliveryNote} from '../../actions'\n\nclass DeliveryNote extends React.Component {\n\n    renderTextArea = ({ input, meta, label }) => {\n        return (\n            <div class=\"form-group modal-form\">\n            <label style = {{left: '0'}}>{label}</label>\n            <textarea class=\"form-control\" rows=\"3\" {...input} placeholder = \"F.e. Please leave the groceries on my front porch... \"></textarea>\n            <div>{meta.error}</div>\n        </div>\n        )\n    }\n\n    onSubmit = (formValues) => {\n        console.log(formValues)\n        return new Promise((resolve, reject) => {\n            console.log('hello are you there?')\n            const errors = validate(formValues)\n            if(errors.empty){\n                reject(new SubmissionError(errors))\n            } else {\n                resolve(formValues)\n            }\n        }).then((formValues) => {\n        \n            this.props.updateDeliveryNote(formValues.delivery_note)\n        })\n    }\n\n    render(){\n        return(\n            <div class = \"payment-option-bottom\">\n                <form onSubmit = {this.props.handleSubmit(this.onSubmit)} id = 'delivery-note'>\n                    <Field name = \"delivery_note\" component = {this.renderTextArea} label = \"Add a note for your order\"/>\n                </form>\n                <button style = {{float: 'left'}} type = 'submit' class = 'btn btn-primary' form = 'delivery-note'>Submit</button>\n            </div>\n        )\n    }\n}\n\nlet validate = (formValues) => {\n    let error = {}\n\n    if(!formValues.delivery_note){\n        error.delivery_note = \"Your note is empty!\"\n    }\n\n    return error\n}\n\nlet formWrapped = reduxForm({\n    form: 'deliveryNote',\n    validate: validate\n})(DeliveryNote)\n\nexport default connect(null, {updateDeliveryNote})(formWrapped)","import React from 'react'\n\nclass CheckoutColumnButton extends React.Component {\n    \n    render(){\n        let btnClass \n        this.props.selected === this.props.value.toString() ? btnClass = 'btn btn-success' : btnClass = 'btn btn-light-outline'\n        \n        return(\n            <div className = \"button-div\">\n                <div style = {{borderRadius: \"3px\", webkitBoxShadow: \"0px 0 5px rgba(99, 99, 99, 0.842)\", width: '85%', marginLeft: '7%'}}>\n                    <button style = {{border: '1px solid black'}} class = {btnClass} type = \"button\" onClick = {(e) => this.props.selectOption(e)} style = {{width: \"100%\"}} value = {this.props.value}>{this.props.text}</button> \n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CheckoutColumnButton","import React from 'react'\nimport { connect } from 'react-redux'\nimport {updateOrderDeliveryTime} from '../../actions'\nimport CheckoutColumnButton from '../buttons/CheckoutColumnButton'\nimport CheckoutRowButton from '../buttons/CheckoutRowButton'\n\nclass DeliveryTime extends React.Component {\n\n    constructor(){\n        super()\n        this.state = {\n            currentDay: null,\n            currentDate: null,\n            selectedTime: null,\n            selectedDay: null,\n        }\n    }\n\n    dayDisplay = (day) => {\n        \n        if(day > 6){\n            day = (day - 7).toString()\n        }\n        let dayDisplay = ''\n        if(day === '0'){\n            dayDisplay = 'Sunday'\n        } else if (day === '1'){\n            dayDisplay = 'Monday'\n        } else if (day === '2'){\n            dayDisplay = 'Tuesday'\n        } else if (day === '3'){\n            dayDisplay = 'Wednesday'\n        } else if (day === '4'){\n            dayDisplay = 'Thursday'\n        } else if (day === '5'){\n            dayDisplay = 'Friday'\n        } else if (day === '6'){\n            dayDisplay = 'Saturday'\n        }\n        console.log(dayDisplay)\n        return dayDisplay\n    }\n\n    renderDates = () => {\n        var today = new Date();\n        let result = []\n        for(let i = 0; i < 4; i++){\n\n            var dd = String(today.getDate() + i).padStart(2, '0');\n            var mm = String(today.getMonth() + 1).padStart(2, '0');\n            var day = String(today.getDay() + i)\n            let currentDay = this.dayDisplay(day)\n    \n            result.push(\n                <div className = \"button-div\">\n                    <CheckoutColumnButton selected = {this.state.selectedDay} selectOption = {(e) => this.selectDate(e)} value = {day} \n                    text = \n                    {\n                    <div>\n                        <p>{`${mm}/${dd}`}</p>\n                        <p>{`${currentDay}`}</p>\n                    </div>\n                    }/>\n                    \n                </div>  \n            )\n        }\n        return result\n    }\n\n    renderTimes = (currentDay) => {\n        let today = new Date()\n        let day = String(today.getDay())\n        let times = ['9AM', '10AM', '11AM', '12PM', '1PM', '2PM', '3PM', '4PM', '5PM' ,'6PM', '7PM', '8PM', '9PM', '10PM', '11PM' ]\n        if(day === currentDay){\n            let time = today.getHours()\n            if(time > 22){\n                return(\n                    <div>\n                        Too late to deliver today!\n                    </div>\n                )\n            } else {\n                let index = time - 9\n                times = times.slice(index)\n            }\n            return \n        }\n\n        return (\n        <div className = \"button-div\">\n            {times.map((time) => {\n                return(\n                    <CheckoutRowButton checked = {this.state.selectedTime} selectOption = {this.selectTime} value = {time} text = {time} /> \n                )\n            })}\n        </div>\n        )\n    }\n\n    selectDate = (e) => {\n        let date = e.currentTarget.children[0].children[0].innerHTML.split('/')\n        let day = date[1]\n        let month = date[0]\n        this.setState({\n            currentDay: this.dayDisplay(e.currentTarget.value),\n            currentDate: {\n                day: day,\n                month: month\n            },\n            selectedDay: e.currentTarget.value\n        })\n    }\n\n    selectTime = (e) => {\n        let delivery_time = {\n            'time': e.currentTarget.value,\n            'date': this.state.currentDate,\n            'day': this.state.currentDay\n        }\n        this.setState({\n            selectedTime: e.currentTarget.value\n        })\n        this.props.updateOrderDeliveryTime(delivery_time)\n    }\n\n    render() {\n        return (\n            <div className = \"ui container\">\n                <div className = \"button-options-row\">\n                    {this.renderDates()}\n                </div>\n                <div className = \"button-options\" style = {{marginTop: '2%'}}>\n\n                    {   \n                        this.state.currentDay ?\n                        this.renderTimes(this.state.currentDay)\n                        :\n                        <div></div>\n                    }   \n                        \n                </div>\n\n                <div>\n                {\n                    this.state.otherSelect ?\n                    <form id = \"otherTip\" onSubmit = {(e) => this.submitOther(e)}>\n                        <input type = \"integer\" name = \"otherTip\"></input>\n                        <button type = \"submit\" value = \"submit\" form = \"otherTip\" >Submit</button>\n                    </form>\n                    :\n                    <div></div>\n                }\n                </div>\n            </div>\n            \n        )\n    }\n}\n\nexport default connect(null, {updateOrderDeliveryTime})(DeliveryTime)","import React from 'react'\nimport { connect } from 'react-redux'\nimport {updateOrderSubstitute} from '../../actions'\nimport CheckoutRowButton from '../buttons/CheckoutRowButton'\n\nclass Substitute extends React.Component {\n    constructor(){\n        super()\n        this.state = {\n            checked: null\n        }\n    }\n  \n    selectOption = (e) => {\n        let substitute = {\n            'phrase': e.currentTarget.children[0].children[0].children[0].children[1].innerHTML,\n            'value': e.currentTarget.value\n        }\n        this.setState({\n            checked: e.currentTarget.value\n        })\n        this.props.updateOrderSubstitute(substitute)\n    }\n\n    render(){\n        return(\n            <div className = \"ui container\">\n                <h4 style = {{left: 0}}>\n                    If you can't find my items:\n                </h4>\n                <div className = \"button-options\">\n                    <CheckoutRowButton checked = {this.state.checked} selectOption = {this.selectOption} value = 'contact' text = \"Contact me for replacements.\"/> \n                    <CheckoutRowButton checked = {this.state.checked} selectOption = {this.selectOption} value = 'choose' text = \"Choose any replacements for me.\"/> \n                    <CheckoutRowButton checked = {this.state.checked} selectOption = {this.selectOption} value = 'none' text = \"Don't make any replacements\"/> \n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect(null, {updateOrderSubstitute})(Substitute)","import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport { connect } from 'react-redux'\nimport {updateOrderTip} from '../../actions'\nimport CheckoutColumnButton from '../buttons/CheckoutColumnButton'\n\nclass Tip extends React.Component {\n\n    constructor(){\n        super()\n        this.state = {\n            otherSelect: false,\n            selected: null\n        }\n    }\n\n    selectOption = (e) => {\n        console.log(e.target.value)\n        let tip = (e.target.value/ 100) * this.props.currentTotal\n        this.props.updateOrderTip({\n            'amount': tip, \n            'value': e.currentTarget.value\n        })\n        this.setState({\n            selected: e.currentTarget.value,\n            otherSelect: false\n        })\n    }\n\n    selectOther = (e) => {\n        console.log(e.currentTarget.value)\n        this.setState({\n            otherSelect: true, \n            selected: e.currentTarget.value\n        })\n    }\n    \n    submitOther = (e) => {\n        e.preventDefault()\n        let tip = (e.currentTarget.children[0].value / 100) * this.props.currentTotal\n        this.props.updateOrderTip({\n            'amount': tip, \n            'value': e.currentTarget.children[0].value\n        })\n        this.setState({\n            otherSelect: false\n        })\n    }\n\n    render() {\n        return (\n            <div className = \"ui container\">\n                <div className = \"button-options-row\">\n                    <CheckoutColumnButton selected = {this.state.selected} value = {0} text = \"None\" selectOption = {this.selectOption} />\n                    <CheckoutColumnButton selected = {this.state.selected} value = {5} text = \"5%\" selectOption = {this.selectOption} />\n                    <CheckoutColumnButton selected = {this.state.selected} value = {10} text = \"10%\" selectOption = {this.selectOption} />\n                    <CheckoutColumnButton selected = {this.state.selected} value = {15} text = \"15%\" selectOption = {this.selectOption} />\n                    <CheckoutColumnButton selected = {this.state.selected} value = {'other'} text = \"Other\" selectOption = {this.selectOther} />\n                </div>\n                <div>\n                {\n                    this.state.otherSelect ?\n                    <form id = \"otherTip\" onSubmit = {(e) => this.submitOther(e)}>\n                        \n                        <input style = {{marginTop: '2%'}} type=\"text\" class=\"form-control\" id=\"tipForm\" aria-describedby=\"emailHelp\" placeholder=\"Enter new tip %\"/>\n                        <button style = {{float: 'left', marginTop: '2%'}} class = \"btn btn-primary\" type = \"submit\" form = \"otherTip\" >Submit</button>\n                    </form>\n                    :\n                    <div></div>\n                }\n                </div>\n            </div>\n            \n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return ({\n        currentTotal: state.order.total,\n        shopperId: state.auth.currentShopper.id\n    })\n}\n\nexport default connect(mapStateToProps, {updateOrderTip})(Tip)","import React from 'react' \nimport { connect } from 'react-redux'\nimport PaymentOption from '../components/PaymentOption'\nimport Address from '../components/checkout_options/Address'\nimport CheckoutPayment from '../components/checkout_options/CheckoutPayment'\nimport Contact from '../components/checkout_options/Contact'\nimport DeliveryNote from '../components/checkout_options/DeliveryNote'\nimport DeliveryTime from '../components/checkout_options/DeliveryTime'\nimport Substitute from '../components/checkout_options/Substitute'\nimport Tip from '../components/checkout_options/Tip'\nimport { reduxForm, Field } from 'redux-form'\nimport {getCurrentShopper} from '../actions'\n\nclass PaymentOptions extends React.Component{\n    componentDidMount(){\n        this.props.getCurrentShopper(this.props.shopperId)\n        console.log(this.props.currentShopper, 'current_SHOPPER')\n    }\n    //All have titles above the divider\n    \n    //Contact Information\n    //Conditionally Add if no contacts\n    //Select Button w/ Add Line or Phone Number Display underneath\n    userNumbers = () => {\n        return this.props.currentShopper.phones.map((number) => {\n            return number.number\n        })\n    }\n\n    //Delivery Address\n    //Conditionally Add if no address\n    //Select Button w/ Add Button or Address Display underneath \n    \n    userAddresses = () => {\n        return this.props.currentShopper.addresses.map((address) => {\n            return address\n        })\n        // this.props.currentShopper.attributes\n    }\n\n    renderTip = () => {\n        if(!this.props.chosenTip.value || this.props.chosenTip.value === \"0\"){\n            return `No Tip`\n        } else {\n            return `$${(this.props.chosenTip.amount/100).toFixed(2)} (${this.props.chosenTip.value}%)`\n        }\n    }\n    //Tip\n    //Select Button w/ 0, 5, 10, 15, 'other' options underneath or tip amount display\n    \n    //Delivery Time\n    //Select button w/ Today, and 4 days ahead options, and time select options undeneath or date/time display\n    \n    //Substitution Preference\n    //Select button w/ Pick for me, Contact me, Refund options or option display\n\n    //Delivery Instructions\n    //Select button with text input box and submit button or italicized quoted note\n    quote = (content) => {\n        return(\n            <div class = \"quote\">\n                <p align = \"left\" style = {{ fontStyle: 'italic', fontSize: '1.5em'}}>\"{content}\"</p>\n            </div>\n        )\n    }\n    //Payment Method \n    //Buttons underneath for Stripe/Paypal Options \n    \n\n    render(){\n        return(\n            <React.Fragment>\n                <PaymentOption title = 'Phone Number' selectType = \"Select\" bottomOption = {<Contact numbers = {this.userNumbers()}/>} bottomContent = {this.props.chosenPhone}/>\n                <PaymentOption title = 'Address' selectType = \"Select\" bottomOption = {<Address addresses = {this.userAddresses()}/>} bottomContent = {this.props.chosenAddress}/>\n                <PaymentOption title = 'Tip' selectType = \"Select\" bottomOption = {<Tip />} bottomContent = {this.renderTip()}/>\n                <PaymentOption title = 'Delivery Time' selectType = \"Select\" bottomOption = {<DeliveryTime />} bottomContent = {`Deliver by ${this.props.chosenDeliveryDay}, ${this.props.chosenDeliveryDate} at ${this.props.chosenDeliveryTime}`}/>\n                <PaymentOption title = 'Substitution Preference' selectType = \"Select\" bottomOption = {<Substitute />} bottomContent = {this.quote(this.props.chosenSubstitute)}/>\n                <PaymentOption title = 'Delivery Notes' selectType = \"Edit\" bottomOption = {<DeliveryNote />} bottomContent = {this.quote(this.props.chosenDeliveryNote)}/>\n                <PaymentOption title = 'Payment Method' bottomOption = {<CheckoutPayment />}/>\n            </React.Fragment>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return ({\n        shopperId: state.auth.currentShopper.id,\n        currentShopper: state.auth.currentShopper,\n        chosenPhone: state.order.number,\n        chosenAddress: state.order.address, \n        chosenTip: state.order.tip,\n        chosenDeliveryDate:`${state.order.delivery_time.date.month}/${state.order.delivery_time.date.day}`,\n        chosenDeliveryDay: state.order.delivery_time.day,\n        chosenDeliveryTime: state.order.delivery_time.time, \n        chosenSubstitute: state.order.substitute.phrase,\n        chosenDeliveryNote: state.order.note \n    })\n}\n\nexport default connect(mapStateToProps, {getCurrentShopper})(PaymentOptions)","import React from 'react'\nimport {connect} from 'react-redux'\nimport {loadStripe} from '@stripe/stripe-js'\nimport PayPalButton from '../components/PayPalButton'\nimport PaymentOptions from '../containers/PaymentOptions'\nimport { processOrder, stripePayment, checkoutOrder, dropCart } from '../actions'\n\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_TEST_KEY)\n\nclass Payment extends React.Component {\n    \n    componentDidMount(){\n        console.log(this.props)\n        let currentURL = window.location.href.split('/')\n        let successParam = currentURL[currentURL.length - 1]\n        console.log(currentURL.length) \n        if(successParam === \"success\"){\n            console.log('hello')\n            this.placeOrder()\n        } else if(successParam === \"failure\") {\n            alert(\"Payment was unsuccessful!\")\n            this.setState({error: true})\n        }\n    }\n\n    constructor() {\n        super()\n        this.state = {\n            error: false,\n            loading: false\n        }\n    }\n\n    cartItems(){\n        let keys = Object.keys(this.props.cartItems)\n        return keys.map(key => this.props.cartItems[key])\n    }\n\n    placeOrder = async() => {\n        //:order_id, :item_id, :quantity_num, :status\n        this.setState({\n            loading: true\n        })\n        await this.processOrder()\n        this.props.history.push('/orderpage')\n        this.props.history.go()\n        \n    }\n\n    processOrder = async () => {\n        this.props.dropCart(this.props.cart_id)\n        let cartItems = this.cartItems()\n        await this.props.processOrder(cartItems, this.props.cart_id, this.props.currentOrderId, \n            { \n                status: \"active\",\n                address: this.props.orderAddress,\n                delivery_time: this.props.orderDeliveryTime,\n                delivery_date: `${this.props.orderDeliveryDate.month + '/' + this.props.orderDeliveryDate.day}`,\n                note: this.props.orderNote,\n                phone: this.props.orderNumber,\n                substitute: this.props.orderSubstitute,\n                total: this.props.orderTotal + this.props.orderTip,\n                tip: this.props.orderTip\n            }\n        )\n        this.props.checkoutOrder()\n    }\n\n    stripeCheckout = async(e) => {\n        let checkoutItems = this.cartItems()\n        let result = checkoutItems.map((checkoutItem) => {\n            let item = checkoutItem.attributes.item\n                return {\n                    price_data: {\n                        currency: 'usd',\n                        product_data: {\n                            name: item.name,\n                        },\n                        unit_amount: item.price,\n                    },\n                    quantity: checkoutItem.attributes.quantity_num,\n                }\n            })\n        console.log(result)\n        console.log(result)\n        await this.props.stripePayment(e, stripePromise, result)\n        this.placeOrder()\n    }\n\n    onPaymentChange = (e) => {\n        this.setState({\n            paymentOption: e.target.value\n        })\n    }\n\n    // [\n    //     {\n    //         price_data: {\n    //             currency: 'usd',\n    //             product_data: {\n    //                 name: 'Bible',\n    //             },\n    //             unit_amount: 3000,\n    //         },\n    //         quantity: 1,\n    //     },\n    //     {\n    //         price_data: {\n    //             currency: 'usd',\n    //             product_data: {\n    //                 name: 'Bible',\n    //             },\n    //             unit_amount: 3000,\n    //         },\n    //         quantity: 1,\n    //     }\n    // ]\n\n    renderItems(){\n        let keys = Object.keys(this.props.cartItems)\n        let cartItems = keys.map(key => this.props.cartItems[key])\n        console.log(cartItems)\n        return cartItems.map(item => {\n            return <div class = \"row checkout-item\">\n                        <div class = \"card col-3\" style = {{height: \"100%\", width: \"20%\"}}>\n                            <img src={item.attributes.item.image} style={{ height: \"100%\" }} class=\"card-img-top\" alt=\"...\" />\n                        </div>\n                    <h3 class = \"col-2\">{item.attributes.item.name}</h3>\n                    <h3 class = \"col-2\">\n                        {item.attributes.quantity_num}\n                    </h3>\n                    <h3>{`$${(item.attributes.item.price * .01 * item.attributes.quantity_num).toFixed(2)}`}</h3>\n                </div>\n            \n        }) \n    }\n\n    render(){\n        return(\n            \n                <div >\n                    {!this.state.loading ? \n                    <div class=\"wrapper\"> \n                            <div className = \"payment-box\">\n                                <div class= \"payment-options\">\n                                    <h1 class = \"payment-header\">Checkout</h1>\n                                    <PaymentOptions />\n                                </div>\n                            \n                                <div class=\"payment-total\">\n                                    <div class = \"payment-details\">\n                                        <div style = {{backgroundColor: 'white', margin: '1%', padding: '10%', borderRadius: \"10px\"}}>\n                                            <div className = \"row payment-cost-line\">\n                                                <div>\n                                                    <h4>SubTotal</h4>\n                                                </div>\n                                                <div>\n                                                    <h4>{`$${(this.props.orderSubTotal / 100).toFixed(2)}`}</h4>\n                                                </div>\n                                            </div>\n                                            <div className = \"row payment-cost-line\">\n                                                <div>\n                                                    <h4>Delivery</h4>\n                                                </div>    \n                                                <div>\n                                                    <h4>{`$${(this.props.orderPayment / 100).toFixed(2)}`}</h4>\n                                                </div>    \n                                            </div>\n                                            <div className = \"row payment-cost-line\">\n                                                <div>\n                                                    <h4>Tax</h4>\n                                                </div>\n                                                <div>\n                                                    <h4>{`$${(this.props.orderTax / 100).toFixed(2)}`}</h4>\n                                                </div>\n                                            </div>\n                                            <div className = \"row payment-cost-line\">\n                                                <div>\n                                                    <h4>Tip</h4>\n                                                </div>    \n                                                <div>\n                                                    {\n                                                        <h4>{`$${(this.props.orderTip / 100).toFixed(2)}`}</h4>   \n                                                    }\n                                                </div>    \n                                            </div>\n                                        </div>\n                                        <div class=\"payment-divider\"></div>\n                                        <div style = {{backgroundColor: 'white', margin: '1%', padding: '10%', borderRadius: \"10px\"}}>\n                                            <div className = \"row payment-cost-total\">\n                                                <div>\n                                                    <h4>Total</h4> \n                                                </div>\n                                                <div>\n                                                    <h4>{`$${(\n                                                        (this.props.orderPayment + this.props.orderSubTotal + this.props.orderTip + this.props.orderTax) / 100).toFixed(2)}`\n                                                        }\n                                                    </h4>\n                                                </div>\n                                            </div>\n                                            <div style = {{marginTop: '10%'}}>\n                                                {\n                                                    this.props.paymentMethod === \"test\"?\n                                                    <div style = {{borderRadius: \"3px\", webkitBoxShadow: \"0px 0 5px rgba(99, 99, 99, 0.842)\"}} className = \"button-div\">\n                                                        <button className = \"btn btn-success\" onClick = {this.placeOrder} style = {{width: \"100%\"}} form = \"contactForm\" value = {this.props.value}>\n                                                            <div className = \"checkout-option-div\">\n                                                                <h4>Test Checkout</h4>\n                                                            </div>\n                                                        </button> \n                                                    </div>\n                                                    :\n                                                    <div></div>\n                                                }\n                                                {\n                                                    this.props.paymentMethod === \"paypal\" ? \n                                                    <PayPalButton placeOrder = {this.placeOrder} amount = {(this.props.orderTotal*.01).toFixed(2)}></PayPalButton>\n                                                    :\n                                                    <div></div>\n                                                }\n                                                {\n                                                    \n                                                    this.props.paymentMethod === \"stripe\" ? \n                                                    <div style = {{borderRadius: \"3px\", webkitBoxShadow: \"0px 0 5px rgba(99, 99, 99, 0.842)\"}} className = \"button-div\">\n                                                        <button onClick = {this.stripeCheckout} className = \"btn btn-primary\" style = {{width: \"100%\"}} form = \"contactForm\" >\n                                                            <div className = \"checkout-option-div\">\n                                                                <div>\n                                                                    <img style = {{marginTop: \"2px\", marginRight: \"2px\"}} className = {\"checkout-option-img\"} src = {`${process.env.PUBLIC_URL}/stripeIcon.png`} />\n                                                                </div>\n                                                            </div>\n                                                        </button> \n                                                    </div>\n                                                    :\n                                                    <div></div>\n                                                }\n                                            </div>\n                                        </div>\n                                        \n                                        \n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"payment-bg-1\">\n                                \n                            </div>\n                        </div>\n                        :\n                        <div className = \"container\">\n                            <div className = \"row\" style = {{marginTop: '40%', justifyContent: 'center'}}>\n                                <div className = \"loaderDiv\">\n                                    <div class = \"loader\"></div>\n                                    <h1>Processing Order</h1>\n                                </div>\n                            </div>\n                        </div>\n                    }\n            </div>\n        )\n    }\n}\n\nlet mapStateToProps = state => {\n    return({\n        userEmail: state.auth.currentShopper.email,\n        cart_id: state.cart.cart_id,\n        currentOrderId: state.order.current_order_id,\n        cartItems: state.cart.cart_items,\n        orderPayment: state.order.payment,\n        orderTip: (state.order.tip.amount ? state.order.tip.amount : 0),\n        orderTax: state.order.tax,\n        orderTotal: state.order.total, \n        orderSubTotal: state.order.subtotal,\n        paymentMethod: state.order.payment_method,\n        orderAddress: state.order.address,\n        orderDeliveryTime: state.order.delivery_time.time,\n        orderDeliveryDate: state.order.delivery_time.date,\n        orderNote: state.order.note,\n        orderNumber: state.order.number,\n        orderSubstitute: state.order.substitute.value\n    })\n}\n\n\nexport default connect(mapStateToProps, {processOrder, stripePayment, checkoutOrder, dropCart })(Payment)","import React ,{useEffect}from 'react'\nimport {connect} from 'react-redux'\nimport {getOrder} from '../actions'\nimport {isEmpty} from 'lodash'\n\nconst PaymentDetails = props => {\n    useEffect(() => {\n        props.getOrder(props.match.params.order_id)\n        console.log(props.match.params.order_id)\n    }, [])\n\n    let renderPaymentInfo = () =>{\n        if(!isEmpty(props.orderInfo)){\n            return (\n                <div>\n                    <h3>\n                        Subtotal: ${(props.orderInfo.subtotal / 100).toFixed(2)}\n                    </h3>\n                    <h3>\n                        Delivery: ${(props.orderInfo.payment / 100).toFixed(2)}\n                    </h3>\n                    <h3>\n                        Tip: ${(props.orderInfo.tip / 100).toFixed(2)}\n                    </h3>\n                    <h3>\n                        Total: ${(props.orderInfo.total / 100).toFixed(2)}\n                    </h3>\n                </div>\n            )\n        }\n    }\n    return (\n        <div className = \"App-margin\">\n            <h1>Payment Details</h1>\n            <div>\n                {renderPaymentInfo()}\n            </div>\n        </div>\n    )\n}\n\nlet mapStateToProps = state => {\n    return({\n        orderInfo: state.order.order_info.payment_info\n    })\n}\n\nexport default connect(mapStateToProps, {getOrder})(PaymentDetails)","import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport { isEmpty } from 'lodash'\n\nclass Profile extends Component{\n    \n    capitalize(word){\n        if(!!word){\n            return word.charAt(0).toUpperCase() + word.slice(1)\n        }\n    }\n    renderAddress(){\n        return (\n            `${this.props.userInfo.address}, ${this.props.userInfo.city}, ${this.props.userInfo.state} ${this.props.userInfo.zip_code}`\n        )\n    }\n \n    editPage = (e) => {\n        this.props.history.push(`/edit_shopper/${e.target.value}`)\n    }\n\n    renderProfile(){\n        if(!isEmpty(this.props.currentShopper)){\n            return (\n                <div>\n                    {/* <i class=\"fas fa-envelope fa-2x\"></i><span class=\"counter counter-lg\"></span> */}\n                    <div>\n                        <img class=\"profilePageImage\" src={this.props.userAuthPic}></img>\n                    </div>\n                    <div className=\"segment\">\n                        <button value=\"image\" onClick={(e) => this.editPage(e)}>Change</button>\n                    </div>\n                    <h4>{this.capitalize(this.props.userFirstName) + ' ' + this.capitalize(this.props.userLastName)}</h4>\n\n                    <div>\n                        <h4>Age: {this.props.userInfo.age}</h4>\n                    </div>\n                    <div>\n                        <h4>Email: {this.props.userEmail}</h4>\n                        <div className=\"segment\">\n                            <button value=\"email\" onClick={(e) => this.editPage(e)}>Change</button>\n                        </div>\n                    </div>\n                    <div>\n                        <h4>Phone: {this.props.userInfo.phone}</h4>\n                        <div className=\"segment\">\n                            <button value=\"phone\" onClick={(e) => this.editPage(e)}>Change</button>\n                        </div>\n                    </div>\n                    <div>\n                        <h4>Address: {this.renderAddress()}</h4>\n                        <div className=\"segment\">\n                            <button value=\"address\" onClick={(e) => this.editPage(e)}>Change</button>\n                        </div>\n                    </div>\n                    <div>\n                        <h4>Number of Orders</h4>\n                    </div>\n                </div> \n            )\n        }\n        \n    }\n\n    render(){   \n        return (\n            <div>\n                <h1>Profile Page</h1>\n                <div class = \"container\">\n                    {this.renderProfile()}\n                </div>\n            </div>\n\n        )\n    }\n    \n}\n\nlet mapStateToProps = state => {\n    return ({\n        currentShopper: state.auth.currentShopper,\n        userAuthId: state.auth.currentShopper.id,\n        userAuthPic: state.auth.currentShopper.image,\n        userFirstName: state.auth.currentShopper.first_name,\n        userLastName: state.auth.currentShopper.last_name,\n        userInfo: state.auth.currentShopper.shopper_info,\n        userEmail: state.auth.currentShopper.email\n    })\n}\n\n\nexport default connect(mapStateToProps)(Profile)","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport Searchbar from '../components/Searchbar'\nimport FoodListCarousel from '../containers/FoodListCarousel'\n\n\nclass Products extends Component {\n    constructor(){\n        super()\n        this.state= {\n            mountState: true\n        }\n    }\n\n    componentDidUpdate(){\n        if(!this.state.mountState){\n            this.setState({\n                mountState: true\n            })\n        }\n    }\n \n    onCategoryChange = (e) => {\n        console.log(e.target.value)\n        this.setState({\n            mountState: false\n        })\n        this.props.history.push(`/products/${e.target.value}`, {mountState: true})\n    }\n\n    renderSideBar = (categoryTitle) => {\n        return (\n            this.props.categories.map( category => {\n                \n                if(category.title === categoryTitle){\n                    return (\n                        <div class=\"input-group-text category-radio\">\n                            <input type=\"radio\" id = {`${category.name}`} name= \"food-category\" value={`${category.name}`} aria-label=\"Meat/Seafood Input\" checked/> \n                            <p>{`${category.title}`}</p>\n                        </div>\n                    )\n                } else {\n                    return (\n                        <div class=\"input-group-text category-radio\">\n                            <input type=\"radio\" id = {`${category.name}`} name= \"food-category\" value={`${category.name}`} aria-label=\"Meat/Seafood Input\"/>\n                            <p>{`${category.title}`}</p>\n                        </div>\n                    )\n                }\n            })\n        )\n    }\n\n    render(){\n        let categoryData = this.props.categories.find((category) => category.name === this.props.match.params.category)\n        let categoryTitle = categoryData.title\n    \n        return (\n            <div class = \"products\">\n                <div class = \"sidebar\">\n                    \n                    <div class = \"sidebar-menu\">\n                        <h3>Categories</h3>\n                        <form id= \"category-form\" onChange = {this.onCategoryChange}>\n                            {this.renderSideBar(categoryTitle)}\n                        </form>\n                \n                    </div>\n                    \n                </div>\n\n                <div class = \"content\"> \n                    <div class = \"container-fluid justify-content-center\">\n                        <h1 class = \"productsHeader\">{categoryTitle}</h1>\n                        <div class = \"row productsHeader\">\n                            <div className = \"col-sm-5\">\n                                <h2>{this.props.selectedStore.attributes.name}</h2>\n                            </div>\n                            <div className = \"col-sm-5\">\n                                <Searchbar history = {this.props.history} onSearchSubmit={this.props.onSearchSubmit} onSearchChange={this.props.onSearchChange}/>\n                            </div>\n                        </div>\n                        {this.state.mountState ?\n                            <FoodListCarousel items = {this.props.items}/>\n                            :\n                            <div></div>\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    \n}\n\n        \nconst mapStateToProps = (state, ownProps) => {\n    console.log(ownProps)\n    return({\n        categories: state.categories,\n        items: state.items.itemsList.data.filter(item => item.attributes.category === ownProps.match.params.category),\n        item: state.items.selectedItem,\n        selectedStore: state.stores.selectedStore\n    })\n}\n\nexport default connect(mapStateToProps)(Products)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Profile } from './Profile'\nimport { reduxForm, Field } from 'redux-form'\nimport { createShopperProfile } from '../actions'\n\nclass ProfileSignup extends React.Component {\n    renderInput = ({ input, meta, label }) => {\n        console.log(input)\n        return (\n            <div class=\"input-group\">\n                <label>{label}</label>\n                <input {...input} />\n                <div> {meta.error}</div>\n            </div>\n        )\n    }\n\n    profileSubmit = (formValues) => {\n        let form = {shopper_info : {...formValues, age: parseInt(formValues.age), shopper_id: this.props.shopperId}}\n        this.props.createShopperProfile(form)\n        this.props.history.push('/orderpage')\n    }\n\n    capitalize(word) {\n        if(!!word){\n            return word.charAt(0).toUpperCase() + word.slice(1)\n        }\n    }\n\n    render(){\n        return(\n            <div> \n                <h1> \n                    Welcome {this.capitalize(this.props.shopperFirstName)}\n                </h1>\n                <form onSubmit = {this.props.handleSubmit(this.profileSubmit)}>\n                    <Field name = \"age\" component = {this.renderInput} label = \"Age\"/>\n                    <Field name = \"address\" component = {this.renderInput} label = \"Address\" />\n                    <Field name = \"city\" component = {this.renderInput} label = \"City\" />\n                    <Field name = \"state\" component = {this.renderInput} label = \"State\" />\n                    <Field name = \"zip_code\" component = {this.renderInput} label = \"Zip Code\" />\n                    <Field name = \"phone\" component = {this.renderInput} label = \"Phone\" />\n                    <button type=\"submit\" id=\"button-addon1\">Submit</button>\n                </form>\n            </div>\n        )\n    }\n}\n\n//age address city state zipcode phone\n\nlet validate = (formValues) => {\n    let error = {}\n\n    if (!formValues.age) {\n        error.age = \"Please enter an Item\"\n    }\n    if (!formValues.address) {\n        error.address = \"Please enter an Item\"\n    }\n    if (!formValues.city) {\n        error.city = \"Please enter an Item\"\n    }\n    if (!formValues.state) {\n        error.state = \"Please enter an Item\"\n    }\n    if (!formValues.zip_code) {\n        error.zip_code = \"Please enter an Item\"\n    }\n    if (!formValues.phone) {\n        error.phone = \"Please enter an Item\"\n    }\n    \n    return error\n}\n\nlet mapStateToProps = state => {\n    return({\n        shopperFirstName: state.auth.currentShopper.first_name,\n        shopperId: state.auth.currentShopper.id\n    })\n}\n\nlet formWrapped = reduxForm({\n    form: 'profileForm',\n    validate: validate\n})(ProfileSignup)\n\nexport default connect(mapStateToProps, {createShopperProfile})(formWrapped)","import React from 'react'\nimport { connect } from 'react-redux'\nimport Searchbar from '../components/Searchbar'\nimport FoodList from '../containers/FoodList'\n\nclass SearchPage extends React.Component{\n\n    componentDidMount(){\n        console.log(!!this.props.items.find(item => item.attributes.name == this.props.match.params.item))\n    }\n\n    // searchTerm = () => {\n    //     // store results in array   \n    //     //find if current items from current store that include this search term\n    //     //items must be checked in lower case\n    //     let filteredItems = this.props.items.filter(item => \n    //         item.attributes.name.toLowerCase().includes(this.props.match.params.item)\n    //     )\n    // }\n    render(){\n        let filteredItems = this.props.items.filter(item =>\n            item.attributes.name.toLowerCase().includes(this.props.match.params.item)\n        )\n        // let categoryData = this.props.categories.find((category) => category.name === this.props.match.params.category)\n        // let categoryTitle = categoryData.title\n        return(\n            <div class=\"content\">\n                <div class=\"container-fluid justify-content-center\">\n                    <h1 class=\"productsHeader\">Search</h1>\n                    <div class=\"row productsHeader\">\n                        <div className=\"col-sm-5\">\n                            <h2>{this.props.selectedStore.attributes.name}</h2>\n                        </div>\n                        <div className=\"col-sm-5\">\n                            <Searchbar history = {this.props.history}/>\n                        </div>\n                    </div>\n                    <div className = 'searchResult'>\n                        {(filteredItems.length > 0) ? <FoodList items={filteredItems} /> : <h1>Sorry item doesn't exist!</h1>}\n                    </div>\n                </div>\n            </div>\n\n        )\n        \n    }\n}\nconst mapStateToProps = state => {\n    return ({\n        items: state.items.itemsList.data,\n        selectedStore: state.stores.selectedStore\n    })\n}\nexport default connect(mapStateToProps)(SearchPage)","import React from 'react'\n\nclass ItemModal extends React.Component {\n    componentDidMount(){\n        console.log(this.props)\n    }\n    render(){\n        return(\n            <div class = \"modal-content\">\n                <div class=\"modal-header\">\n                <h5 class=\"modal-title\" id=\"ModalLabel\">{this.props.name}</h5>\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                </div>\n                <div class=\"modal-body\">\n                    <img style = {{width: '100%'}} src = {`${this.props.image}`}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ItemModal","import React from 'react'\nimport { connect } from 'react-redux'\nimport { cancelOrder } from '../../actions'\n\nclass ConfirmModal extends React.Component {\n\n    componentDidMount(){\n        console.log(this.props.confirm)\n    }\n\n    confirm = async (title, id) => {\n        if(title === \"Delete Order\"){\n            await this.props.cancelOrder(id)\n            window.location.reload()\n        }\n    }\n\n    render(){\n        return(\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                <h5 class=\"modal-title\" id = \"ModalLabel\">{this.props.message}</h5>\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                </div>\n                <div class=\"modal-body\">\n                <p>{this.props.message}</p>\n                </div>\n                <div class=\"modal-footer\">\n                    <button onClick = {() => this.confirm(this.props.title, this.props.id)} type=\"button\" class=\"btn btn-primary\">Confirm</button>\n                    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect(null, {cancelOrder})(ConfirmModal)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { reduxForm, Field, SubmissionError } from 'redux-form'\nimport { addShopperNumber, addShopperAddress} from '../../actions'\n\n\n\nclass SubmitModal extends React.Component {\n    type = this.props.submitType \n    renderInput = ({ input, meta, label }) => {\n        return (\n            <div class = \"form-group modal-form\">\n                <label style = {{left: '0'}}> {label}</label>\n                <input class= \"form-control\" {...input} /> \n                <div>{meta.error} </div>\n            </div>\n        )\n    }\n\n    renderAddressSelect = ({input, meta}) => {\n        console.log(input)\n        return (\n            <div class = \"form-group modal-form\">\n                <label for=\"inputState\">State</label>\n                <select {...input} id=\"inputState\" class=\"form-control\">\n                    <option value=\"AL\">Alabama</option>\n                    <option value=\"AK\">Alaska</option>\n                    <option value=\"AZ\">Arizona</option>\n                    <option value=\"AR\">Arkansas</option>\n                    <option value=\"CA\">California</option>\n                    <option value=\"CO\">Colorado</option>\n                    <option value=\"CT\">Connecticut</option>\n                    <option value=\"DE\">Delaware</option>\n                    <option value=\"DC\">District Of Columbia</option>\n                    <option value=\"FL\">Florida</option>\n                    <option value=\"GA\">Georgia</option>\n                    <option value=\"HI\">Hawaii</option>\n                    <option value=\"ID\">Idaho</option>\n                    <option value=\"IL\">Illinois</option>\n                    <option value=\"IN\">Indiana</option>\n                    <option value=\"IA\">Iowa</option>\n                    <option value=\"KS\">Kansas</option>\n                    <option value=\"KY\">Kentucky</option>\n                    <option value=\"LA\">Louisiana</option>\n                    <option value=\"ME\">Maine</option>\n                    <option value=\"MD\">Maryland</option>\n                    <option value=\"MA\">Massachusetts</option>\n                    <option value=\"MI\">Michigan</option>\n                    <option value=\"MN\">Minnesota</option>\n                    <option value=\"MS\">Mississippi</option>\n                    <option value=\"MO\">Missouri</option>\n                    <option value=\"MT\">Montana</option>\n                    <option value=\"NE\">Nebraska</option>\n                    <option value=\"NV\">Nevada</option>\n                    <option value=\"NH\">New Hampshire</option>\n                    <option value=\"NJ\">New Jersey</option>\n                    <option value=\"NM\">New Mexico</option>\n                    <option value=\"NY\">New York</option>\n                    <option value=\"NC\">North Carolina</option>\n                    <option value=\"ND\">North Dakota</option>\n                    <option value=\"OH\">Ohio</option>\n                    <option value=\"OK\">Oklahoma</option>\n                    <option value=\"OR\">Oregon</option>\n                    <option value=\"PA\">Pennsylvania</option>\n                    <option value=\"RI\">Rhode Island</option>\n                    <option value=\"SC\">South Carolina</option>\n                    <option value=\"SD\">South Dakota</option>\n                    <option value=\"TN\">Tennessee</option>\n                    <option value=\"TX\">Texas</option>\n                    <option value=\"UT\">Utah</option>\n                    <option value=\"VT\">Vermont</option>\n                    <option value=\"VA\">Virginia</option>\n                    <option value=\"WA\">Washington</option>\n                    <option value=\"WV\">West Virginia</option>\n                    <option value=\"WI\">Wisconsin</option>\n                    <option value=\"WY\">Wyoming</option>\n                </select>\t\n                <div>{meta.error} </div>\n            </div>\n        )\n    }\n\n    renderForm = () => {\n        if(this.type === \"number\"){\n            return (\n                <form style = {{width: '100%'}} id = \"modalSubmit\" onSubmit = {this.props.handleSubmit(this.submit)}>\n                    <Field name = \"number\" component = {this.renderInput} label = \"Number\"/>\n                </form>\n            )\n        } else if(this.type === \"address\"){\n            return(\n                <form style = {{width: '100%'}} id = \"modalSubmit\" onSubmit = {this.props.handleSubmit(this.submit)}>\n                    <Field name = \"street\" component = {this.renderInput} label = \"Street \"/>\n                    <Field name = \"city\" component = {this.renderInput} label = \"City \"/>\n                    <Field name = \"state\" component = {this.renderAddressSelect} label = \"State \"/>\n                    <Field name = \"zip_code\" component = {this.renderInput} label = \"Zip Code \"/>\n                </form>\n            )\n        }\n    }\n\n    submit = (formValues) => {\n        console.log(formValues)\n        return new Promise((resolve, reject) => {\n            const errors = validate(formValues, this.type)\n            if(errors){\n                reject(new SubmissionError(errors))\n            } else {\n                resolve(formValues)\n            }\n        }).then((formValues)=> {\n            console.log(formValues)\n            if(this.type === \"number\"){\n                this.props.addShopperNumber(formValues)\n            } else if(this.type === \"address\") {\n                this.props.addShopperAddress(formValues)\n            }\n        })\n        \n        \n    }\n\n    render(){\n        return (\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                <h5 class=\"modal-title\" id = \"ModalLabel\">{this.props.submit.title}</h5>\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                </div>\n                <div class=\"modal-body\">\n                    <div class = \"modal-form\">\n                        {this.renderForm()}\n                    </div>\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"submit\" class=\"btn btn-primary\" form = \"modalSubmit\">Submit</button>\n                    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                </div>\n            </div>\n            \n        )\n    }\n}\n\nlet validate = (formValues, type) => {\n    let error = {}\n    console.log(formValues, type)\n    if(type === 'number' && formValues.number){\n        if(formValues.number.length !== 10){\n            error.number = \"Please enter a valid number.\"\n        }\n    }\n\n    if(type === 'address'){\n        if(!formValues.street){\n            error.street = \"Please enter a street.\" \n        }\n        if(!formValues.city){\n            error.city = \"Please enter a city.\" \n        }\n        if(!formValues.state){\n            error.state = \"Please enter a state.\" \n        }\n        if(!formValues.zip_code){\n            error.zip_code = \"Please enter a zip code.\" \n        }\n    }\n\n    return error\n}\n\nlet formWrapped = reduxForm({\n    form: 'modalSubmit',\n    validate: validate\n})(SubmitModal)\n\nlet mapStateToProps = state => {\n    return({\n        submitType: state.modals.submit.type\n    })\n} \n\nexport default connect(mapStateToProps, {addShopperAddress, addShopperNumber})(formWrapped)","import React, {useState, useEffect} from 'react' \nimport {connect} from 'react-redux'\nimport { clearModal } from '../actions'\nimport ItemModal from './modals/ItemModal'\nimport ConfirmModal from './modals/ConfirmModal'\nimport SubmitModal from './modals/SubmitModal'\n\nconst Modal = (props) => {\n    \n    const[ref] = useState(React.createRef())\n\n    useEffect(() => {\n        console.log(props)\n        const selectedDiv = ref.current\n        const options = {\n            root: null,\n            rootMargin: '100px',\n            threshold: 0\n        }\n\n        function clearContent(){\n            props.clearModal()\n        }\n        \n        const observer = new MutationObserver(function (mutationList, observer) {\n            let mutation = mutationList[0]\n            console.log(mutation, props.history)\n            if(mutation.target.className === \"modal fade show\"){\n                return\n            } else {\n                clearContent()\n            }\n        }, options)\n        observer.observe(selectedDiv, {\n            attributes: true,\n            attributeFilter: [\"class\"]\n        })\n    }, [])\n\n    let renderContent = () => {\n        if(!props.modal.item_pic && !props.modal.confirm && !props.modal.submit){\n            return \n        } else if(props.modal.item_pic){\n            let item = props.modal.item_pic.data.attributes\n            return (\n                <ItemModal name = {item.name} image = {item.image} />\n            )\n        } else if(props.modal.confirm){\n            return (\n                <ConfirmModal id = {props.modal.confirm.id} title = {props.modal.confirm.title} message = {props.modal.confirm.message}/>\n            )\n        } else if(props.modal.submit){\n            return (\n                <SubmitModal/>\n            )\n        } \n    }\n        return (\n            <div ref = {ref} class=\"modal fade\" id=\"Modal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"ModalLabel\" aria-hidden=\"true\">\n                <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                    {renderContent()}\n                </div>\n            </div>\n    \n        )\n}\n\nexport default connect(null, { clearModal })(Modal)","import React from 'react'\nimport {connect} from 'react-redux'\nimport {clearItem} from '../actions'\nimport ItemPic from '../components/ItemPic'\n\nconst OrderItem = props => {\n\n    let itemDetailsNav = () => {\n        props.clearItem()\n        props.history.push(`/item_details/${props.item_id}`)\n    }\n\n    let renderUnits = () => {\n        if(props.count > 1){\n            return `${props.units}s`\n        } else {\n            return `${props.units}`\n        }\n    }\n    return (\n        <div className = 'row orderItem'> \n            <div class = \"orderItem-pic\">\n                <h3>{props.name}</h3>\n                <ItemPic image = {props.image} item_id = {props.item_id}/>\n            </div>\n            <div>\n                <h3>\n                    Quantity: {props.count} {renderUnits()}\n                </h3>\n                <h3>\n                    Price: ${(props.price * props.count * .01).toFixed(2)}\n                </h3>\n                <button onClick={() =>  itemDetailsNav() }>Item Details</button>\n            </div>\n        </div>\n    )\n}\n\nexport default connect(null, {clearItem})(OrderItem)","import React from 'react'\nimport { connect } from 'react-redux'\nimport OrderItem from '../components/OrderItem'\nimport {getOrderItems} from '../actions'\n\n\nclass ViewOrderItems extends React.Component{\n\n    componentDidMount(){\n        console.log(this.props.orderItems)\n        console.log(this.props.order)\n        this.props.getOrderItems(this.props.match.params.order_id)\n    }\n\n    renderItems(){   \n        return this.props.orderItems.map(item => {\n            let attributes = item.attributes\n            return (\n                <OrderItem history = {this.props.history} price={attributes.item.price} image={attributes.item.image} count={attributes.quantity_num} units={attributes.item.quantity_unit} name={attributes.item.name} item_id = {attributes.item.id}/>\n            )\n        })\n    }\n    render(){\n        return(\n            <div className = \"App-margin\">\n                <h1>Order Items</h1>\n                {this.renderItems()}\n            </div>\n        )\n    }\n}\n\nlet mapStateToProps = state => {\n    return({\n        orderItems: state.order.order_items,\n        order: state.order\n    })\n}\n\nexport default connect(mapStateToProps, {getOrderItems})(ViewOrderItems)","import React, {Component} from 'react';\nimport {\n  Route,\n  Router\n} from \"react-router-dom\"\nimport {connect} from 'react-redux'\nimport './App.css';\nimport NavBar from './containers/NavBar'\nimport Home from './pages/Home'\nimport About from './pages/About'\nimport Cart from './pages/Cart'\nimport ActiveOrders from './pages/ActiveOrders'\nimport EditShopper from './pages/EditShopper'\nimport ItemDetails from './pages/ItemDetails'\nimport MapPage from './pages/MapPage'\nimport OrderPage from './pages/OrderPage'\nimport OrderHistory from './pages/OrderHistory'\nimport Payment from './pages/Payment'\nimport PaymentDetails from './pages/PaymentDetails'\nimport Profile from './pages/Profile'\nimport Products from './pages/Products'\nimport ProfileSignup from './pages/ProfileSignup'\nimport SearchPage from './pages/SearchPage'\nimport Modal from './components/Modal'\nimport ViewItems from './pages/ViewOrderItems'\nimport {getStores, getCategories, signOut, getActiveOrders, getItems, selectStore, clearModal} from './actions'\n\nclass App extends Component  {\n  \n  componentDidMount(){\n    this.props.getStores()\n    this.props.getItems(1)\n    this.props.clearModal()\n    // this.props.getActiveOrders(this.props.shopperId)\n    console.log(this.props.items)\n  }\n  \n  render (){\n    return (\n      <div className=\"App\">\n        <div>\n            <NavBar history = {this.props.history}/>\n              <Modal history = {this.props.history} modal = {this.props.modal}/>\n              <Route exact path={'/'} render={(props) => <Home {...props} />}></Route> \n              <Route exact path={'/order_history'} render={(props) => <OrderHistory {...props} />} />\n              <Route exact path={'/active_orders'} render={(props) => <ActiveOrders {...props} />} />\n              <Route exact path={'/about'} render={(props) => <About {...props} />} />\n              <Route exact path={'/cart'} render={(props) => <Cart {...props} />} />\n              <Route exact path={'/edit_shopper/:section'} render={(props) => <EditShopper {...props} />} />\n              <Route exact path={'/item_details/:item_id'} render={(props) => <ItemDetails {...props} />} />\n              <Route exact path={'/map_page'} render={(props) => <MapPage {...props} />} />\n              <Route exact path={'/orderpage'} render={(props) => <OrderPage {...props} />}/>\n              <Route exact path={'/profile'} render={(props) => <Profile {...props} />} />\n              <Route exact path={'/profile_signup'} render={(props) => <ProfileSignup {...props} />} />\n              <Route exact path={'/products/:category'} render={(props) => <Products {...props} />}/>\n              <Route exact path={'/payment/:status'} render={(props) => <Payment {...props} />} />\n              <Route exact path={'/payment_details/:order_id'} render={(props) => <PaymentDetails {...props} />} />\n              <Route exact path={'/search/:item'} render={(props) => <SearchPage {...props} />} />\n              <Route exact path={'/view_order_items/:order_id'} render={(props) => <ViewItems {...props} />} />\n        </div>\n        <div class = \"content-wrap\"></div>\n        <footer className=\"footer\">\n          <div class = 'footer-curve'>\n          </div> \n          <div class = 'footer-div'>\n            <div className = \"row footer-row\">\n              <div className = \"col-6\">\n               \n                  <div className = \"footer-logo\">\n                    <img class = \"footer-icon\" src= {process.env.PUBLIC_URL + '/bread_basket_icon.jpg'}></img> \n                    <h3>BreadBasket</h3>\n                  </div>\n                \n              </div>\n              <div className = \"col-6\">\n                <h5>© 2020 BreadBasket</h5>\n                <h5>Allen Shin</h5>\n              </div>\n            </div> \n          </div> \n          \n        </footer>\n      </div>\n    );\n  }\n}\n\nlet mapStateToProps = state => {\n  return({\n    shopperId: state.auth.currentShopper.id,\n    selectedStore: state.stores.selectedStore,\n    modal: state.modals\n  })\n}\n\nexport default connect(mapStateToProps, {getStores, getCategories, signOut, getActiveOrders, getItems, selectStore, clearModal})(App)\n","const INTIAL_STATE = {\n    signedIn: null,\n    currentShopper: {\n        shopper_info: {}\n    },\n}\n\nexport default (state = INTIAL_STATE, action) => {\n    switch(action.type){\n        case 'SIGN_IN':\n            return {\n                ...state, \n                signedIn: true,\n                currentShopper: action.payload\n            }\n        case 'SIGN_OUT':\n            return {\n                ...state, \n                signedIn: false, \n                currentShopper: {}\n            }\n        case 'PROFILE_INFO':\n            return{\n                ...state, currentShopper: { \n                        ...state.currentShopper,\n                        shopper_info: action.payload\n                }\n            }\n        case 'EDIT_SHOPPER':\n            return{\n                ...state, currentShopper: action.payload\n            }\n        case 'EDIT_PROFILE':\n            return{\n                ...state, currentShopper: {\n                    ...state.currentShopper,\n                    shopper_info: action.payload\n                }\n            }\n\n        default:\n            return state \n    }\n}","let INITIAL_STATE = {\n    itemsList: [],\n    selectedItem: null\n}\n\nexport default (state = INITIAL_STATE, action) => {\n    if(action.type === 'GET_ITEMS'){\n        return {...state, itemsList: action.payload}\n    }\n\n    if (action.type === 'GET_ITEM') {\n        return { ...state, selectedItem: action.payload }\n    }\n\n    if(action.type === 'CLEAR_ITEM'){\n        return { ...state, selectedItem: null }\n    }\n\n    return state\n}","let INITIAL_STATE = {\n    submit: null,\n    confirm: null,\n    item_pic: null\n}\n\nexport default (state = INITIAL_STATE, action) => {\n\n    if (action.type === 'ITEM_PIC_MODAL') {\n        return { ...state, item_pic: action.payload }\n    }\n\n    if(action.type === 'CLEAR_ITEM_PIC'){\n        return { ...state, item_pic: null }\n    }\n\n    if(action.type === 'CANCEL_ORDER_MODAL'){\n        return { \n            ...state, confirm: {\n                \"title\": \"Delete Order\",\n                \"message\": \"Are you sure you want to cancel this order?\",\n                \"id\": action.payload\n            }\n        }\n    } else if(action.type === 'ADDRESS_MODAL'){\n        return { \n            ...state, submit: {\n                \"title\": \"Add Address\",\n                'type' : \"address\"\n            }\n        }\n    } else if(action.type === 'NUMBER_MODAL'){\n        return { \n            ...state, submit: {\n                \"title\": \"Add Number\",\n                'type': 'number'\n            }\n        }\n    } else if (action.type === \"CLEAR_MODAL\"){\n        return{\n            submit: null,\n            confirm: null,\n            item_pic: null\n        }\n    } \n    return state\n}","let INITIAL_STATE = {\n    storesList: [],\n    selectedStore: null,\n    coords: {}\n}\n\nexport default (state = INITIAL_STATE, action) => {\n    if(action.type === 'GET_STORES'){\n        return { storesList: action.payload.stores, selectedStore: action.payload.store }\n    }\n\n    if(action.type === 'SELECT_STORE'){\n        return {...state, selectedStore: action.payload}\n    }\n\n    if(action.type === 'STORE_COORDS'){\n        return {...state, store_coords: action.payload}\n    }\n\n    if(action.type === 'USER_COORDS'){\n        return{...state, user_coords: action.payload}\n    }\n    \n    return state\n}","import _ from 'lodash'\n\nlet INITIAL_STATE = {\n    cart_id: null,\n    cart_items: {},\n    item_ids: [],\n    subtotal: 0,\n    delivery: 0,\n    tip: 0\n}\n\nexport default (state = INITIAL_STATE, action) => {\n\n    if (action.type === 'START_CART') {\n        return {\n            ...state, cart_id: action.payload.data.attributes.id\n        }\n    }\n    if (action.type === 'GET_CART'){\n        return{\n            ...state, \n            cart_items: {...state.cart_items, ..._.mapKeys(action.payload,'id')},\n            item_ids: action.payload.map(item => item.attributes.item_id)\n        }\n    }\n\n    if(action.type === 'DROP_CART'){\n        return {...state, \n            cart_items: {},\n            item_ids: []   \n        }\n    }\n\n    if(action.type === 'CHANGE_STORE'){\n        return {...state, \n            cart_id: action.payload.id,\n            cart_items: action.payload.cartItems\n        }\n    }\n\n    if(action.type === 'ADD_CART_ITEM'){\n        return {...state, \n            cart_items: {...state.cart_items, [action.payload.id]: action.payload.cart_item},\n            item_ids: [...state.item_ids, [action.payload.item_id, action.payload.id]]\n        }\n    }\n\n    if(action.type === 'DROP_CART_ITEM'){\n        return {...state, \n            cart_items: _.omit(state.cart_items, action.payload.cart_item_id), \n            item_ids: [...state.item_ids.filter(item_id => item_id[0] !== action.payload.item_id)]\n        }\n    }\n    \n    if(action.type === 'CHANGE_COUNT_CART_ITEM'){\n        return  {...state, cart_items: \n                    {...state.cart_items, [action.payload.cartItemId]: \n                        {...state.cart_items[action.payload.cartItemId], attributes: \n                            {...state.cart_items[action.payload.cartItemId].attributes, \n                                \"quantity_num\": action.payload.count\n                            }\n                        }\n                    }\n                }\n    }\n            \n        return state\n    }","let INITIAL_STATE = {\n    current_order_id: null,\n    active_orders: [],\n    completed_orders: [],\n    order_items: [],\n    order_info: {},\n    subtotal:null,\n    payment: null,\n    tax: null,\n    tip: null, \n    total: null,\n    delivery_time: null,\n    complete_time: null,\n    substitute: null,\n    note: null,\n    payment_method: null,\n    address: null,\n    number: null\n}\n\nexport default (state = INITIAL_STATE, action) => {\n    \n    if(action.type === \"PRE_ORDER\"){\n        return {...state, current_order_id: action.payload.id, \n            subtotal: parseInt(action.payload.order.subtotal),\n            payment: parseInt(action.payload.order.payment),\n            tax: parseInt(action.payload.order.tax),\n            total: parseInt(action.payload.order.total)\n        }\n    }\n    if(action.type === 'UPDATE_ORDER_NUMBER') {\n        return {...state, \n            number: action.payload\n        }\n    }\n   \n    if(action.type === 'UPDATE_ORDER_ADDRESS') {\n        return {...state, \n            address: action.payload\n        }\n    }\n\n    if(action.type === 'UPDATE_ORDER_TIP') {\n        return {...state, \n            tip: action.payload\n        }\n    }\n\n    if(action.type === 'UPDATE_ORDER_DELIVERY_TIME') {\n        return {...state, \n            delivery_time: action.payload\n        }\n    }\n\n    if(action.type === 'UPDATE_ORDER_SUBSTITUTE') {\n        return {...state, \n            substitute: action.payload\n        }\n    }\n\n    if(action.type === 'UPDATE_ORDER_DELIVERY_NOTE') {\n        console.log(action.payload)\n        return {...state, \n            note: action.payload\n        }\n    }\n\n    if(action.type === 'UPDATE_ORDER_PAYMENT_METHOD') {\n        console.log(action.payload)\n        return {...state, \n            payment_method: action.payload\n        }\n    }\n    \n    if(action.type === 'CHECKOUT_ORDER'){\n        return {...state, current_order_id: null}\n    }\n    \n    if(action.type === \"CANCEL_ORDER\"){\n        return {...state, active_orders: state.active_orders.filter(order => order.id !== action.payload)}\n    }\n    \n    if(action.type === \"GET_ACTIVE_ORDERS\"){\n        return {...state, active_orders: action.payload}\n    }\n\n    if (action.type === \"GET_COMPLETED_ORDERS\") {\n        return { ...state, completed_orders: action.payload }\n    }\n    \n    if(action.type === \"GET_ORDER_ITEMS\"){\n        return {...state, order_items: action.payload}\n    }\n    \n    if(action.type === \"CLEAR_ORDER_ITEMS\"){\n        return {...state, order_items: []}\n    }\n    \n    if (action.type === \"GET_ORDER\") {\n        return {\n            ...state, order_info: {\n                ...state.order_info, payment_info:{\n                    subtotal: parseInt(action.payload.subtotal),\n                    payment: parseInt(action.payload.payment),\n                    tip: parseInt(action.payload.tip),\n                    total: parseInt(action.payload.total)\n                }\n            }\n        }\n    }\n    \n    if(action.type === \"CLEAR_ORDER\"){\n        return {\n            ...state, order_info: {}\n        }\n    }\n    return state\n}","import authReducer from './authReducer'\nimport itemsReducer from './itemsReducer'\nimport categoriesReducer from './categoriesReducer'\nimport modalsReducer from './modalsReducer'\nimport storesReducer from './storesReducer'\nimport cartReducer from './cartReducer'\nimport orderReducer from './orderReducer'\nimport { reducer as formReducer} from 'redux-form'\nimport { combineReducers } from 'redux'\nimport { persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    whitelist: ['auth', 'items', 'categories', 'stores', 'cart', 'order', 'modals']\n}\n\nconst reducer = combineReducers({\n    items: itemsReducer,\n    auth: authReducer,\n    categories: categoriesReducer,\n    stores: storesReducer,\n    modals: modalsReducer,\n    cart: cartReducer,\n    order: orderReducer,\n    form: formReducer\n})\n\nconst rootReducer = (state) => {\n    state = undefined\n    return \n}\n\nexport default persistReducer(persistConfig, reducer)","export default (state = [], action) => {\n    if(action.type === 'GET_CATEGORIES'){\n        return action.payload\n    }\n    return state\n}","import {persistStore} from 'redux-persist'\nimport {createStore, applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\n\nimport reducers from './reducers'\n\nexport const store = createStore(reducers, applyMiddleware(thunk))\n\nexport const persistor = persistStore(store)\n\nexport default {store, persistor};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\nimport { Provider }  from 'react-redux';\nimport {\n    HashRouter as Router\n} from 'react-router-dom'\nimport {PersistGate} from 'redux-persist/integration/react'\nimport {store, persistor} from './store'\nimport {createBrowserHistory} from 'history'\n\nlet history = createBrowserHistory()\n\nReactDOM.render(\n    <Provider store = {store}>\n        <Router basename = \"/\" history = {history}>\n            <PersistGate persistor = {persistor}>\n                <App history = {history}/>\n            </PersistGate>\n        </Router>\n    </Provider>, document.querySelector('#root')\n);\n\n\n"],"sourceRoot":""}